{"info":{"author":null,"author_email":"Charles Yeomans <charles@declaresub.com>","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.9","Topic :: Software Development :: Code Generators","Topic :: Software Development :: Interpreters"],"description":"# ABNF\n\n[![PyPI](https://img.shields.io/pypi/v/abnf)](https://pypi.org/project/abnf/)\n![abnf-tox](https://github.com/declaresub/abnf/workflows/abnf-tox/badge.svg)\n[![CodeQL](https://github.com/declaresub/abnf/actions/workflows/codeql-analysis.yml/badge.svg?branch=master)](https://github.com/declaresub/abnf/actions/workflows/codeql-analysis.yml)\n\n\nABNF is a package that generates parsers from ABNF grammars as described in [RFC 5234](https://tools.ietf.org/html/rfc5234)\nand [RFC7405](https://tools.ietf.org/html/rfc7405).  The main purpose of this\npackage is to parse data as specified in RFCs.  But it should be able to handle any ABNF \ngrammar.\n\nABNF was originally written a few years ago for parsing HTTP headers in a web framework.\nThe code herein has been in use in production here and there on the internet since then.\n\n\n## Requirements\n\nABNF is tested with Python 3.9-13.\n\n\n## Installation\n\nThe abnf package is available from [PyPI](https://pypi.org/project/abnf/). As of version 2.3.1, abnf uses\ntrusted publishing.\n\nInstall it in the usual way.\n\n    pip install abnf\n\n\n## Usage\n\nThe main class of abnf is Rule.  You should think of a Rule subclass as corresponding to an\nABNF grammar.  Then instances of that subclass represent the rules of that grammar.\n\nThe Rule class is initialized with the core ABNF rules OCTET, BIT, HEXDIG, CTL, HTAB, LWSP, \nCR, VCHAR, DIGIT, WSP, DQUOTE, LF, SP, CRLF, CHAR, ALPHA, and so are available in any subclass\nof Rule.\n\nCreate a Rule object using the class method create.\n\n    rule = Rule.create('double-quoted-string = DQUOTE *(%x20-21 / %x23-7E / %x22.22) DQUOTE')\n\nTo later retrieve the object just created:\n\n    rule = Rule('double-quoted-string')\n\nRule objects are cached, so `Rule('double-quoted-string')` should always return the same object,\nthough you might not want to depend on that.\n\nABNF includes several grammars.  The Rule subclass ABNFGrammarRule implements the rules \nfor ABNF.  The package `abnf.grammars` includes grammars from several RFCs.\n\n    from abnf.grammars import rfc7232\n    src = 'W/\"moof\"'\n    node, start = rfc7232.Rule('ETag').parse(src)\n    print(str(node))\n    \nThe output is\n\n    Node(\n        name=ETag, \n        children=\n            [\n            Node(\n                name=entity-tag, \n                children=\n                    [\n                    Node(\n                        name=weak, \n                        children=\n                            [\n                            Node(\n                                name=literal, \n                                offset=0, \n                                value=\"W/\"\n                                )\n                            ]\n                        ), \n                        Node(\n                            name=opaque-tag, \n                            children=\n                                [\n                                Node(\n                                    name=DQUOTE, \n                                    children=\n                                        [\n                                        Node(\n                                            name=literal, \n                                            offset=2, \n                                            value=\"\"\"\n                                            )\n                                        ]\n                                    ), \n                                Node(\n                                    name=etagc, \n                                    children=\n                                        [\n                                        Node(\n                                            name=literal, \n                                            offset=3, \n                                            value=\"m\"\n                                            )\n                                        ]\n                                    ), \n                                Node(\n                                    name=etagc, \n                                    children=\n                                        [\n                                        Node(\n                                            name=literal, \n                                            offset=4, \n                                            value=\"o\"\n                                            )\n                                        ]\n                                    ), \n                                Node(\n                                    name=etagc, \n                                    children=\n                                        [\n                                        Node(\n                                            name=literal, \n                                            offset=5, \n                                            value=\"o\"\n                                            )\n                                        ]\n                                    ), \n                                Node(\n                                    name=etagc, \n                                    children=\n                                    [\n                                    Node(\n                                        name=literal, \n                                        offset=6, \n                                        value=\"f\"\n                                        )\n                                    ]\n                                ), \n                            Node(\n                                name=DQUOTE, \n                                children=\n                                    [\n                                    Node(\n                                        name=literal, \n                                        offset=7, \n                                        value=\"\"\"\n                                        )\n                                    ]\n                                )\n                            ]\n                        )\n                    ]\n                )\n            ]\n        )'\n    \n    \n\n\nThe modules in `abnf.grammars` may serve as an example for writing other Rule subclasses. \nIn particular, some of the RFC grammars incorporate rules by reference from other RFC. \n`abnf.grammars.rfc7230` shows a way to import rules from another Rule subclass.\n\nYou can also load a grammar from a text file using Rule.from_file.  This class function\naccepts either a str or pathlib.Path. The text file must contain an ABNF rulelist.\n\n\n    class FromFileRule(Rule):\n        pass\n        \n    FromFileRule.from_file('/path/to/grammar.abnf')\n\n\nABNF uses CRLF as a delimiter for rules in a rulelist.  Beware that many text editors (e.g. BBEdit) \nsubstitute line endings without telling the user.\n\n### Errors\n\nabnf implements two exception subclasses, ParseError and GrammarError.  \n\nA GrammarError is raised when parsing encounters an undefined rule, or a prose-value in\na grammar.  \n\nA ParseError is raised when parsing fails for some reason.  Error reporting is nothing\nmore than a stack trace, but that usually allows one to get to the source of the problem.\n\n\n## Examples\n\n### Validate an email address\n\nThe code below validates an arbitrary email address.  If src is not syntactically valid,\na ParseError is raised.\n\n    from abnf.grammars import rfc5322\n    \n    src = 'test@example.com'\n    parser = rfc5322.Rule('address')\n    parser.parse_all(src)\n\n### Extract the actual address from an email address\n\n    from abnf.grammars import rfc5322\n\n    def get_address(node):\n        \"\"\"Do a breadth-first search of the tree for addr-spec node.  If found, \n        return its value.\"\"\"\n        queue = [node]\n        while queue:\n            n, queue = queue[0], queue[1:]\n            if n.name == 'addr-spec':\n                return n.value\n            else:\n                queue.extend(n.children)\n        return None\n\n    src = 'John Doe <jdoe@example.com>'\n    parser = rfc5322.Rule('address')\n    node = parser.parse_all(src)\n    address = get_address(node)\n    \n        \n    for x in node_iterator(node):\n        if x.name == 'addr-spec':\n            print(x.value)\n            break\n\n\n### Extract authentication information from an HTTP Authorization header.\n\n    from abnf.parser import NodeVisitor\n    from abnf.grammars import rfc7235\n\n    header_value = 'Basic YWxhZGRpbjpvcGVuc2VzYW1l'\n    parser = rfc7235.Rule('Authorization')\n    node, offset = parser.parse(header_value, 0)\n\n    class AuthVisitor(NodeVisitor):\n        def __init__(self):\n            super().__init__()\n            self.auth_scheme = None\n            self.token = None\n\n        def visit_authorization(self, node):\n            for child_node in node.children:\n                self.visit(child_node)\n\n        def visit_credentials(self, node):\n            for child_node in node.children:\n                self.visit(child_node)\n\n        def visit_auth_scheme(self, node):\n            self.auth_scheme = node.value\n\n        def visit_token68(self, node):\n            self.token = node.value\n\n    visitor = AuthVisitor()\n    visitor.visit(node)\n    \nThe result is that visitor.auth_scheme = 'Basic', and visitor.token = 'YWxhZGRpbjpvcGVuc2VzYW1l'\n\n## Implementation\n\nabnf is implemented using parser combinators. There is a class Literal whose instances are\ninitialized with either a string like 'moof', or a tuple like ('a', 'z') representing a range.\nThe result is a parser that can match the initialized value.\n\nABNF operations -- alternation, concatenation, repeat, etc. are implemented as classes.  \nFor example, Alternation(Literal('foo'), Literal('bar')) returns a parser that implements the\nABNF expression \n\n    \"foo\" / \"bar\"\n\nThe whole mess is bootstrapped by writing out the parsers for the grammar and core rules \nby hand.  The ABNFGrammarRule class represents the ABNF grammar, and is used to parse other\ngrammars.  It is also capable of parsing its own grammar.\n \n### Alternation\n\nRFC 5234 does not specify the precise behavior of alternation.  The ABNF definition of \nABNF appears to assume longest match.  But other grammars expect first match alternation \n(e.g. [dhall](https://dhall-lang.org)).  So this behavior is configurable. A class attribute Rule.first_match_alternation\nallows one to choose a behavior for a particular grammar (as represented by a Rule subclass).\nWhen first_match_alternation is False, alternation returns the longest match; in the event of a tie, \nthe first match is returned. When first_match_alternation is True, the first match is \nreturned.\n\n\n### Backtracking\n\nABNF implements backtracking as of version 2.0.0.  There were sufficient changes in behavior that this constituted a breaking change, \nand so the major version has been bumped.\n\nAs is well-known, naive implementations of backtracking typically have exponential worst-case behavior.  Here I attempt to reduce that \nthrough the use of generators and some caching. In particular, Repetition objects cache parse results.\n\nVersion 2.0.0 uses a LRU cache, ParseCache.  The code comes wihout any max sizes set for caches, which will obviously result in long-term issues.  \nMy hope is to get feedback from parser usage.  ParseCache has a class attribute max_cache_size: int | None that if set to a non-negative integer, will \nlimit cache size.\n\n        \n## Development, Testing, etc.\n\nShould you wish to tinker with the code, install in a virtual environment and have at it.\nThe file requirements.txt contains the packages I use for testing and such.\n\nA good starting point would be to run pytest and see that all tests pass.\n\n    pytest --cov-report term-missing --cov=abnf \n\nThe test suite includes fuzz testing with test data generated using [abnfgen](http://www.quut.com/abnfgen/).\nSome of the test rules are long and gruesome.  Thus the tests take a bit of time to complete.\nSkip the fuzz tests with \n\n        pytest --cov-report term-missing --cov=abnf --ignore=tests/fuzz\n\nFollowing changes, run \n\n    pylint abnf\n\nto resolve any problems found, then \n\n    tox\n    \nto execute tests for python 3.9-3.13.\n\n\nThe code is formatted using black.\n\n    black src/abnf\n\n\n\n## Third-Party Packages\n\n\n### [abnf-to-regexp](https://pypi.org/project/abnf-to-regexp/1.0.0/)\n\nThe program abnf-to-regexp converts augmented Backus-Naur form (ABNF) to a regular expression.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":"abnf, generator, parser","license":null,"license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"abnf","package_url":"https://pypi.org/project/abnf/","platform":null,"project_url":"https://pypi.org/project/abnf/","project_urls":null,"provides_extra":null,"release_url":"https://pypi.org/project/abnf/2.3.1/","requires_dist":null,"requires_python":">=3.9","summary":"Parsers for ABNF grammars.","version":"2.3.1","yanked":false,"yanked_reason":null},"last_serial":26669499,"releases":{"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"dd6eaa884b8824fa9ad6ff8d98f1469ab56d25a3e3c4f2cedebe9470cff514ec","md5":"97665b7e0884d2935675e82ce74c6b59","sha256":"7e7e278ca9a4d9c238936c77f0283626b412ffdbece17c7c28a93f9a5320f0e5"},"downloads":-1,"filename":"abnf-1.0.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"97665b7e0884d2935675e82ce74c6b59","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3","size":25571,"upload_time":"2020-04-10T23:33:24","upload_time_iso_8601":"2020-04-10T23:33:24.262499Z","url":"https://files.pythonhosted.org/packages/dd/6e/aa884b8824fa9ad6ff8d98f1469ab56d25a3e3c4f2cedebe9470cff514ec/abnf-1.0.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9b54764d64d9bbea10f0889f153ceae633df889b52025c3037d02a78671ba46b","md5":"03a8e0be2e517a8b0709b715f64450e4","sha256":"6551c4926f904b8704fe1575058928d3d84ba9f8ea6e348f056f0c645c36c992"},"downloads":-1,"filename":"abnf-1.0.0.tar.gz","has_sig":false,"md5_digest":"03a8e0be2e517a8b0709b715f64450e4","packagetype":"sdist","python_version":"source","requires_python":">=3","size":174154,"upload_time":"2020-04-10T23:33:26","upload_time_iso_8601":"2020-04-10T23:33:26.920119Z","url":"https://files.pythonhosted.org/packages/9b/54/764d64d9bbea10f0889f153ceae633df889b52025c3037d02a78671ba46b/abnf-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"bb4b6b6589c78ebe75a5fedaddd4aacd1a70d71fcb1eadbdec8860e4443e16dc","md5":"9a42c9c7bf8463ab88c4075e72c37f35","sha256":"7a57c411d4e99679afcc83a9cea0cbfd60dafc0a1469c96a0ba194c0eb542c5e"},"downloads":-1,"filename":"abnf-1.0.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"9a42c9c7bf8463ab88c4075e72c37f35","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3","size":25583,"upload_time":"2020-05-12T00:01:28","upload_time_iso_8601":"2020-05-12T00:01:28.359814Z","url":"https://files.pythonhosted.org/packages/bb/4b/6b6589c78ebe75a5fedaddd4aacd1a70d71fcb1eadbdec8860e4443e16dc/abnf-1.0.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"66be9f61574d5296eba4a52ca51275e67f05472547418f4d9f989ce9c89c817a","md5":"e24910df3ff7614b37f1901a2f1c1570","sha256":"edeec3bff19db2be270c13bfa004a20f16423829ff0239be8593654c7bfc9690"},"downloads":-1,"filename":"abnf-1.0.1.tar.gz","has_sig":false,"md5_digest":"e24910df3ff7614b37f1901a2f1c1570","packagetype":"sdist","python_version":"source","requires_python":">=3","size":174870,"upload_time":"2020-05-12T00:01:30","upload_time_iso_8601":"2020-05-12T00:01:30.662814Z","url":"https://files.pythonhosted.org/packages/66/be/9f61574d5296eba4a52ca51275e67f05472547418f4d9f989ce9c89c817a/abnf-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"49e82710e85342a982af376b2b5a647d4a26fd804219e3bb755164674fd46f58","md5":"7c4e29ca39ed6ce892d17dba40a475e8","sha256":"152473bf384793843ebfe4e7efffb6e11d825f422c6ae616cc19771b6c177cf8"},"downloads":-1,"filename":"abnf-1.1.0-py2.py3-none-any.whl","has_sig":false,"md5_digest":"7c4e29ca39ed6ce892d17dba40a475e8","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3","size":26069,"upload_time":"2020-05-24T17:57:33","upload_time_iso_8601":"2020-05-24T17:57:33.234307Z","url":"https://files.pythonhosted.org/packages/49/e8/2710e85342a982af376b2b5a647d4a26fd804219e3bb755164674fd46f58/abnf-1.1.0-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"80a35c923cdeca8fa3d26898721d08d74eae35a61ac792567709b4c9f0206dd3","md5":"7693bac2d687496f99d48ac77a83190e","sha256":"aa2fd42885213465fd6b0ebd72291184b1440b5ff8931d1b3d38b6e4d514574b"},"downloads":-1,"filename":"abnf-1.1.0.tar.gz","has_sig":false,"md5_digest":"7693bac2d687496f99d48ac77a83190e","packagetype":"sdist","python_version":"source","requires_python":">=3","size":176740,"upload_time":"2020-05-24T17:57:35","upload_time_iso_8601":"2020-05-24T17:57:35.185270Z","url":"https://files.pythonhosted.org/packages/80/a3/5c923cdeca8fa3d26898721d08d74eae35a61ac792567709b4c9f0206dd3/abnf-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"4ed954e3a57e21d705d9b01d6dd17ea28e20e16423f95076324889f4b3cbce4c","md5":"406cc604d69220f5094c5c86b851a77b","sha256":"c18f74ad61aa381e9afd91a349d3f43b98c962fce5dcad018d883663fd4cbc38"},"downloads":-1,"filename":"abnf-1.1.1-py2.py3-none-any.whl","has_sig":false,"md5_digest":"406cc604d69220f5094c5c86b851a77b","packagetype":"bdist_wheel","python_version":"py2.py3","requires_python":">=3","size":25851,"upload_time":"2020-06-07T16:23:50","upload_time_iso_8601":"2020-06-07T16:23:50.230272Z","url":"https://files.pythonhosted.org/packages/4e/d9/54e3a57e21d705d9b01d6dd17ea28e20e16423f95076324889f4b3cbce4c/abnf-1.1.1-py2.py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0d067310c31bfce9dd1708866d56d1710ad00a8e88736d63d4f8263da5fb3ca4","md5":"25694a1444e5726dc371c0d0dcbebd90","sha256":"f8e699ee0a3be375fdccdbbbd17b69e3941c7467a203de9c3e38bb9b38bbc191"},"downloads":-1,"filename":"abnf-1.1.1.tar.gz","has_sig":false,"md5_digest":"25694a1444e5726dc371c0d0dcbebd90","packagetype":"sdist","python_version":"source","requires_python":">=3","size":176701,"upload_time":"2020-06-07T16:23:51","upload_time_iso_8601":"2020-06-07T16:23:51.945237Z","url":"https://files.pythonhosted.org/packages/0d/06/7310c31bfce9dd1708866d56d1710ad00a8e88736d63d4f8263da5fb3ca4/abnf-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"0ede83fe22886b037de90e6fe69175409392955665f6464c83c029cd6851a445","md5":"1108320a544eb7a531c240c40451b416","sha256":"8204529b4ee022f74451fbe55a7f6d4ddfe611f8d3364d03bfc623b63ab632ce"},"downloads":-1,"filename":"abnf-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"1108320a544eb7a531c240c40451b416","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":27788,"upload_time":"2022-04-25T16:41:01","upload_time_iso_8601":"2022-04-25T16:41:01.064021Z","url":"https://files.pythonhosted.org/packages/0e/de/83fe22886b037de90e6fe69175409392955665f6464c83c029cd6851a445/abnf-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"0d2f0499319806a09415ef39e304281423c10c8f9a1f9e6b165f8afae89bb110","md5":"f872c3a8978448877afcda2f16a291fa","sha256":"a48d6ffb8d09c446bff05d84797b5eacc4e95eb8df5242bd9939904af5a15226"},"downloads":-1,"filename":"abnf-1.2.0.tar.gz","has_sig":false,"md5_digest":"f872c3a8978448877afcda2f16a291fa","packagetype":"sdist","python_version":"source","requires_python":">=3","size":186320,"upload_time":"2022-04-25T16:41:02","upload_time_iso_8601":"2022-04-25T16:41:02.986770Z","url":"https://files.pythonhosted.org/packages/0d/2f/0499319806a09415ef39e304281423c10c8f9a1f9e6b165f8afae89bb110/abnf-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"b3d107e9f3fb6ddf0c6edb9aba02c1f693eb44bd87831bbee966dc5f9db6ad34","md5":"a1892a9fc3f747e1dc533dcc663af276","sha256":"7274e04a33363985a66728a57ffdf5e4efa9fc84b44f49fdf3312666538a28c1"},"downloads":-1,"filename":"abnf-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"a1892a9fc3f747e1dc533dcc663af276","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":27979,"upload_time":"2022-07-07T16:51:52","upload_time_iso_8601":"2022-07-07T16:51:52.406245Z","url":"https://files.pythonhosted.org/packages/b3/d1/07e9f3fb6ddf0c6edb9aba02c1f693eb44bd87831bbee966dc5f9db6ad34/abnf-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c8f4bbdcfc33c9d145edd62a4865d2e3bc6d36f27499a26c68e9a8e6ccbaf17","md5":"3eb54360781853285bdfb38dcaa07ce8","sha256":"9a0fa6deb0972772ab2aad71a4c5f8470cc982c4d285c6a31c7b6d438b50d716"},"downloads":-1,"filename":"abnf-1.2.1.tar.gz","has_sig":false,"md5_digest":"3eb54360781853285bdfb38dcaa07ce8","packagetype":"sdist","python_version":"source","requires_python":">=3","size":186425,"upload_time":"2022-07-07T16:51:54","upload_time_iso_8601":"2022-07-07T16:51:54.846875Z","url":"https://files.pythonhosted.org/packages/5c/8f/4bbdcfc33c9d145edd62a4865d2e3bc6d36f27499a26c68e9a8e6ccbaf17/abnf-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.0":[{"comment_text":"","digests":{"blake2b_256":"deae9922e550ae4ea723f1e2acc99d9b82d3af3336b60c3bb0c613a6f38a1e04","md5":"382685016018a2636a40565f77c5838b","sha256":"6ec6831e7b6d63efe90e7fd9f4c0421387ce6017cd67753069839a6562134df8"},"downloads":-1,"filename":"abnf-2.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"382685016018a2636a40565f77c5838b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":33927,"upload_time":"2022-09-06T14:32:56","upload_time_iso_8601":"2022-09-06T14:32:56.538582Z","url":"https://files.pythonhosted.org/packages/de/ae/9922e550ae4ea723f1e2acc99d9b82d3af3336b60c3bb0c613a6f38a1e04/abnf-2.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a2f76d747920019145180acec3f1fd9bdaade207b7874e89f93005d69b80a751","md5":"b368d97bc374b36cd9133d3b5a31d386","sha256":"46b1641b03079d83b471e07a3873da5e93cedf69ae0ce221d6523c4d875d6f6f"},"downloads":-1,"filename":"abnf-2.0.0.tar.gz","has_sig":false,"md5_digest":"b368d97bc374b36cd9133d3b5a31d386","packagetype":"sdist","python_version":"source","requires_python":">=3","size":192529,"upload_time":"2022-09-06T14:33:57","upload_time_iso_8601":"2022-09-06T14:33:57.805462Z","url":"https://files.pythonhosted.org/packages/a2/f7/6d747920019145180acec3f1fd9bdaade207b7874e89f93005d69b80a751/abnf-2.0.0.tar.gz","yanked":false,"yanked_reason":null}],"2.0.1":[{"comment_text":"","digests":{"blake2b_256":"0b5eb569b6add495d9690f474f7b56cf85c7f498e14fbcd18ce4924b4e54e72e","md5":"81f3d6e0f57b32a19400943e274a035d","sha256":"311466f3e0989d42d3b0f59d06683de42fe3a29fbf75d9dbee25a10609da2202"},"downloads":-1,"filename":"abnf-2.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"81f3d6e0f57b32a19400943e274a035d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":35363,"upload_time":"2022-09-28T19:17:44","upload_time_iso_8601":"2022-09-28T19:17:44.049067Z","url":"https://files.pythonhosted.org/packages/0b/5e/b569b6add495d9690f474f7b56cf85c7f498e14fbcd18ce4924b4e54e72e/abnf-2.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9d1b680c0b406b7faee4123e73c76289b4b0b3977683e399e8046e14318c7c19","md5":"2fd587b7e96c6efef6176545fbdf76a0","sha256":"13739742fbda7f9e048d577799009465a11d8036b78cdd180e5916d5664f4223"},"downloads":-1,"filename":"abnf-2.0.1.tar.gz","has_sig":false,"md5_digest":"2fd587b7e96c6efef6176545fbdf76a0","packagetype":"sdist","python_version":"source","requires_python":">=3","size":193142,"upload_time":"2022-09-28T19:17:46","upload_time_iso_8601":"2022-09-28T19:17:46.068189Z","url":"https://files.pythonhosted.org/packages/9d/1b/680c0b406b7faee4123e73c76289b4b0b3977683e399e8046e14318c7c19/abnf-2.0.1.tar.gz","yanked":false,"yanked_reason":null}],"2.0.2":[{"comment_text":"","digests":{"blake2b_256":"a75385bcae531d61dbea90777bd2f02e4d73f93e3f96ea75de1c93f3c7dd03a9","md5":"18fc24d25df3bb17531dda57f070c13a","sha256":"8a75429ced7dc1a915c54a1b6e56356666f7690c51ad51c2f26d8280f8cb7551"},"downloads":-1,"filename":"abnf-2.0.2-py3-none-any.whl","has_sig":false,"md5_digest":"18fc24d25df3bb17531dda57f070c13a","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":43916,"upload_time":"2022-10-03T18:22:44","upload_time_iso_8601":"2022-10-03T18:22:44.190282Z","url":"https://files.pythonhosted.org/packages/a7/53/85bcae531d61dbea90777bd2f02e4d73f93e3f96ea75de1c93f3c7dd03a9/abnf-2.0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"20bb8dda0e41afd59e058ec9c621abef72d9aa9fffb349a0632224c84f99846a","md5":"73a5009be10fcfec065713a340426815","sha256":"6276831f20e9f5276037154243a10003cfa5ee9f2e838f516943e3941f82e9b8"},"downloads":-1,"filename":"abnf-2.0.2.tar.gz","has_sig":false,"md5_digest":"73a5009be10fcfec065713a340426815","packagetype":"sdist","python_version":"source","requires_python":">=3","size":202400,"upload_time":"2022-10-03T18:22:46","upload_time_iso_8601":"2022-10-03T18:22:46.395458Z","url":"https://files.pythonhosted.org/packages/20/bb/8dda0e41afd59e058ec9c621abef72d9aa9fffb349a0632224c84f99846a/abnf-2.0.2.tar.gz","yanked":false,"yanked_reason":null}],"2.1.0":[{"comment_text":"","digests":{"blake2b_256":"f7a2241f5fcfb7fe9dda214e988cc365cbdc4e03b720c0250a7736b80b46ee6b","md5":"7d1264bed5a8c69503abaaef7d43b899","sha256":"d93a918a4e829961a4fb1db64b3e493b0143f3712806a0a2d42f2d2217d779aa"},"downloads":-1,"filename":"abnf-2.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"7d1264bed5a8c69503abaaef7d43b899","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":38806,"upload_time":"2022-12-14T16:22:47","upload_time_iso_8601":"2022-12-14T16:22:47.948407Z","url":"https://files.pythonhosted.org/packages/f7/a2/241f5fcfb7fe9dda214e988cc365cbdc4e03b720c0250a7736b80b46ee6b/abnf-2.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"56ea6e333d4ecdf825f6a2391e02fb45c3d4d24a47d38e6ed5fb1ede0dd02619","md5":"076dec7f8a5f0db22927eb3081883ae8","sha256":"e892f7a1130660e7782863dd5742ca36e675e72db38094fa2f3e1318c385c457"},"downloads":-1,"filename":"abnf-2.1.0.tar.gz","has_sig":false,"md5_digest":"076dec7f8a5f0db22927eb3081883ae8","packagetype":"sdist","python_version":"source","requires_python":">=3","size":196328,"upload_time":"2022-12-14T16:22:50","upload_time_iso_8601":"2022-12-14T16:22:50.463747Z","url":"https://files.pythonhosted.org/packages/56/ea/6e333d4ecdf825f6a2391e02fb45c3d4d24a47d38e6ed5fb1ede0dd02619/abnf-2.1.0.tar.gz","yanked":false,"yanked_reason":null}],"2.2.0":[{"comment_text":"","digests":{"blake2b_256":"3095f456ae7928a2f3a913f467d4fd9e662e295dd7349fc58b35f77f6c757a23","md5":"65e50e2bfb7e7fa6f7835fa174a5ab26","sha256":"5dc2ae31a84ff454f7de46e08a2a21a442a0e21a092468420587a1590b490d1f"},"downloads":-1,"filename":"abnf-2.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"65e50e2bfb7e7fa6f7835fa174a5ab26","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3","size":39938,"upload_time":"2023-03-17T18:26:22","upload_time_iso_8601":"2023-03-17T18:26:22.608781Z","url":"https://files.pythonhosted.org/packages/30/95/f456ae7928a2f3a913f467d4fd9e662e295dd7349fc58b35f77f6c757a23/abnf-2.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9df27b5fac50ee42e8b8d4a098d76743a394546f938c94125adbb93414e5ae7d","md5":"463f17f7b7ffe68af017043f0084f846","sha256":"433380fd32855bbc60bc7b3d35d40616e21383a32ed1c9b8893d16d9f4a6c2f4"},"downloads":-1,"filename":"abnf-2.2.0.tar.gz","has_sig":false,"md5_digest":"463f17f7b7ffe68af017043f0084f846","packagetype":"sdist","python_version":"source","requires_python":">=3","size":197507,"upload_time":"2023-03-17T18:26:24","upload_time_iso_8601":"2023-03-17T18:26:24.577385Z","url":"https://files.pythonhosted.org/packages/9d/f2/7b5fac50ee42e8b8d4a098d76743a394546f938c94125adbb93414e5ae7d/abnf-2.2.0.tar.gz","yanked":false,"yanked_reason":null}],"2.3.0":[{"comment_text":"","digests":{"blake2b_256":"06fbffb2d6256ef479122b2028c63e16095bd2a0bb5075680d548b673e01a9f0","md5":"d2df9d3571dc007e70dc52a24a2bec69","sha256":"71ba97743a5563c11b80ff1c01d29628abbff6cfc4ac813f813d46e8fce6bf74"},"downloads":-1,"filename":"abnf-2.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"d2df9d3571dc007e70dc52a24a2bec69","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":40429,"upload_time":"2024-11-18T11:07:02","upload_time_iso_8601":"2024-11-18T11:07:02.921550Z","url":"https://files.pythonhosted.org/packages/06/fb/ffb2d6256ef479122b2028c63e16095bd2a0bb5075680d548b673e01a9f0/abnf-2.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5c3320007e4527c594408cbaa48abcd1326cb74fb86726ee356d1cf0e2c5e183","md5":"5208ad3d35d8235c1fcf75841783ffc0","sha256":"10cefa97cbbd63fe3cdd55397ce834ca31f6241f708f46d2f95c795a7fde935f"},"downloads":-1,"filename":"abnf-2.3.0.tar.gz","has_sig":false,"md5_digest":"5208ad3d35d8235c1fcf75841783ffc0","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":305511,"upload_time":"2024-11-18T11:07:04","upload_time_iso_8601":"2024-11-18T11:07:04.059342Z","url":"https://files.pythonhosted.org/packages/5c/33/20007e4527c594408cbaa48abcd1326cb74fb86726ee356d1cf0e2c5e183/abnf-2.3.0.tar.gz","yanked":false,"yanked_reason":null}],"2.3.1":[{"comment_text":"","digests":{"blake2b_256":"b9c1668a33f04e0daa0cf354f3293abc2a8910498f150104c22b160bada1f4fd","md5":"55830f852b273de4a6e6c53b01214aab","sha256":"ab3704639a11efe26cd64da0768b67e68a3b2c408d63252e4c475196dfb9c02a"},"downloads":-1,"filename":"abnf-2.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"55830f852b273de4a6e6c53b01214aab","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":44097,"upload_time":"2024-12-25T18:47:17","upload_time_iso_8601":"2024-12-25T18:47:17.658941Z","url":"https://files.pythonhosted.org/packages/b9/c1/668a33f04e0daa0cf354f3293abc2a8910498f150104c22b160bada1f4fd/abnf-2.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f83f064e27448bb58a3a8e7df90e398a0dbf2087a058dd0219ef3426f6d2eb10","md5":"68c51f7f2a4103fa9cee57a30c4b92a8","sha256":"2d3ed490c64c0e285ed35384d4a588f3b1e8930620b09b76602851082784e34f"},"downloads":-1,"filename":"abnf-2.3.1.tar.gz","has_sig":false,"md5_digest":"68c51f7f2a4103fa9cee57a30c4b92a8","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":308677,"upload_time":"2024-12-25T18:47:20","upload_time_iso_8601":"2024-12-25T18:47:20.269413Z","url":"https://files.pythonhosted.org/packages/f8/3f/064e27448bb58a3a8e7df90e398a0dbf2087a058dd0219ef3426f6d2eb10/abnf-2.3.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"b9c1668a33f04e0daa0cf354f3293abc2a8910498f150104c22b160bada1f4fd","md5":"55830f852b273de4a6e6c53b01214aab","sha256":"ab3704639a11efe26cd64da0768b67e68a3b2c408d63252e4c475196dfb9c02a"},"downloads":-1,"filename":"abnf-2.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"55830f852b273de4a6e6c53b01214aab","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.9","size":44097,"upload_time":"2024-12-25T18:47:17","upload_time_iso_8601":"2024-12-25T18:47:17.658941Z","url":"https://files.pythonhosted.org/packages/b9/c1/668a33f04e0daa0cf354f3293abc2a8910498f150104c22b160bada1f4fd/abnf-2.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"f83f064e27448bb58a3a8e7df90e398a0dbf2087a058dd0219ef3426f6d2eb10","md5":"68c51f7f2a4103fa9cee57a30c4b92a8","sha256":"2d3ed490c64c0e285ed35384d4a588f3b1e8930620b09b76602851082784e34f"},"downloads":-1,"filename":"abnf-2.3.1.tar.gz","has_sig":false,"md5_digest":"68c51f7f2a4103fa9cee57a30c4b92a8","packagetype":"sdist","python_version":"source","requires_python":">=3.9","size":308677,"upload_time":"2024-12-25T18:47:20","upload_time_iso_8601":"2024-12-25T18:47:20.269413Z","url":"https://files.pythonhosted.org/packages/f8/3f/064e27448bb58a3a8e7df90e398a0dbf2087a058dd0219ef3426f6d2eb10/abnf-2.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
