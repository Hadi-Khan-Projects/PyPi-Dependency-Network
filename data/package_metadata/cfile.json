{"info":{"author":null,"author_email":null,"bugtrack_url":null,"classifiers":[],"description":"# cfile\r\n\r\nA C code generator written in Python 3.\r\n\r\n## Usage\r\n\r\n```python\r\nimport cfile\r\n\r\nC = cfile.CFactory()\r\ncode = C.sequence()\r\ncode.append(C.sysinclude(\"stdio.h\"))\r\ncode.append(C.blank())\r\nchar_ptr_type = C.type(\"char\", pointer=True)\r\ncode.append(C.declaration(C.function(\"main\", \"int\",\r\n                                     params=[C.variable(\"argc\", \"int\"),\r\n                                             C.variable(\"argv\", char_ptr_type, pointer=True)\r\n                                             ])))\r\nmain_body = C.block()\r\nmain_body.append(C.statement(C.func_call(\"printf\", C.str_literal(r\"Hello World\\n\"))))\r\nmain_body.append(C.statement(C.func_return(0)))\r\ncode.append(main_body)\r\nwriter = cfile.Writer(cfile.StyleOptions())\r\nprint(writer.write_str(code))\r\n```\r\n\r\nOutput\r\n\r\n```C\r\n   #include <stdio.h>\r\n\r\n   int main(int argc, char** argv)\r\n   {\r\n      printf(\"Hello World!\\n\");\r\n      return 0;\r\n   }\r\n```\r\n\r\nHere's the same example again but this time we change the formatting style of the output:\r\n\r\n- Opening brace on same line\r\n- Pointer alignment to the right\r\n\r\n```python\r\nimport cfile\r\n\r\nC = cfile.CFactory()\r\ncode = C.sequence()\r\ncode.append(C.sysinclude(\"stdio.h\"))\r\ncode.append(C.blank())\r\nchar_ptr_type = C.type(\"char\", pointer=True)\r\ncode.append(C.declaration(C.function(\"main\", \"int\",\r\n                                     params=[C.variable(\"argc\", \"int\"),\r\n                                             C.variable(\"argv\", char_ptr_type, pointer=True)\r\n                                             ])))\r\nmain_body = C.block()\r\nmain_body.append(C.statement(C.func_call(\"printf\", C.str_literal(r\"Hello World\\n\"))))\r\nmain_body.append(C.statement(C.func_return(0)))\r\ncode.append(main_body)\r\nstyle = cfile.StyleOptions(break_before_braces=cfile.BreakBeforeBraces.ATTACH,\r\n                           pointer_alignment=cfile.Alignment.RIGHT)\r\nwriter = cfile.Writer(style)\r\nprint(writer.write_str(code))\r\n```\r\n\r\nOutput\r\n\r\n```C\r\n   #include <stdio.h>\r\n\r\n   int main(int argc, char **argv) {\r\n      printf(\"Hello World!\\n\");\r\n      return 0;\r\n   }\r\n```\r\n\r\n## Important update about declarations\r\n\r\nStarting from version 0.3.2 you need to wrap functions, variables, structs and typedefs inside `C.declaraton` to actually declare them.\r\nBefore v0.3.2 these elements were implicitly declared when encountered in the code sequence.\r\n\r\nNot using `C.declaration` will only print the name when used on variables, functions or typedefs.\r\n\r\nFor structs it will have the following meaning:\r\n\r\n- without declaration: Will only forward declare the struct type.\r\n- With declaration: Will fully declare the struct and its members.\r\n\r\nExample\r\n\r\n```python\r\nimport cfile\r\n\r\nC = cfile.CFactory()\r\n\r\ncode = C.sequence()\r\nmystruct = C.struct(\"mystruct\",\r\n                    members=[C.struct_member(\"field_1\", \"int\"),\r\n                             C.struct_member(\"field_2\", \"int\")])\r\ncode.append(C.statement(mystruct))  # Forward declaration\r\ncode.append(C.blank())\r\ncode.append(C.statement(C.declaration(mystruct)))  # Struct declaration\r\nwriter = cfile.Writer(cfile.StyleOptions())\r\nprint(writer.write_str(code))\r\n```\r\n\r\nOutput\r\n\r\n```C\r\nstruct mystruct;\r\n\r\nstruct mystruct\r\n{\r\n    int field_1;\r\n    int field_2;\r\n};\r\n```\r\n\r\nWhen declaring typedefs of structs you can wrap the struct declaration inside the declaration of the typedef.\r\n\r\nExample\r\n\r\n```python\r\nimport cfile\r\n\r\nC = cfile.CFactory()\r\n\r\ncode = C.sequence()\r\nmystruct = C.struct(\"mystruct\",\r\n                    members=[C.struct_member(\"field_1\", \"int\"),\r\n                             C.struct_member(\"field_2\", \"int\")])\r\ncode.append(C.statement(C.declaration(C.typedef(\"mystruct_t\", C.declaration(mystruct)))))\r\nwriter = cfile.Writer(cfile.StyleOptions(break_before_braces=cfile.BreakBeforeBraces.ATTACH))\r\nprint(writer.write_str(code))\r\n```\r\n\r\nOutput\r\n\r\n```C\r\ntypedef struct mystruct {\r\n    int field_1;\r\n    int field_2;\r\n} mystruct_t;\r\n```\r\n\r\nThere's some basic support for struct initializers. By rearranging the code from the example above we can\r\ndeclare a new struct variable named `instance` with initializer.\r\n\r\n```python\r\nimport cfile\r\n\r\nC = cfile.CFactory()\r\ncode = C.sequence()\r\nstruct = C.struct(\"mystruct\",\r\n                  members=[C.struct_member(\"field_1\", \"int\"),\r\n                           C.struct_member(\"field_2\", \"int\")])\r\nstruct_type = C.typedef(\"my_struct_t\", C.declaration(struct))\r\ncode.append(C.statement(C.declaration(struct_type)))\r\ncode.append(C.blank())\r\ncode.append(C.statement(C.declaration(C.variable(\"instance\", struct_type), [0, 0])))\r\n\r\nwriter = cfile.Writer(cfile.StyleOptions(break_before_braces=cfile.BreakBeforeBraces.ATTACH))\r\nprint(writer.write_str(code))\r\n```\r\n\r\nOutput\r\n\r\n```C\r\ntypedef struct mystruct {\r\n    int field_1;\r\n    int field_2;\r\n} my_struct_t;\r\n\r\nmy_struct_t instance = {0, 0};\r\n```\r\n\r\n## Requires\r\n\r\nPython 3.10+ (Needed for modern type hinting support).\r\n\r\n## Documentation\r\n\r\nDocumentation will be written at a later date.\r\n\r\nFor currently supported style options see class StyleOptions in cfile.style module.\r\n\r\n## Changelog\r\n\r\nSee [Changelog document](CHANGELOG.md).\r\n\r\n## About versions\r\n\r\n**v0.2:** No longer maintained.\r\n\r\n**v0.4:** Stable version (bug-fixes only).\r\n\r\n**v0.5:** Development track.\r\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":null,"license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"cfile","package_url":"https://pypi.org/project/cfile/","platform":null,"project_url":"https://pypi.org/project/cfile/","project_urls":{"Homepage":"https://github.com/cogu/cfile","Issues":"https://github.com/cogu/cfile/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/cfile/0.4.0/","requires_dist":null,"requires_python":">=3.10","summary":"A C code generator written in Python 3","version":"0.4.0","yanked":false,"yanked_reason":null},"last_serial":22525785,"releases":{"0.2.0":[{"comment_text":"","digests":{"blake2b_256":"f7e0e1b67e58ba1e6d728df871a574b56f22d3935adc6e929048cb575f01efea","md5":"cc0feb81dabc467eae54aaf18f99a80b","sha256":"ba8b4889206763b774cf732007b1b13f78cf96f9c6c7de6c6f408ed7bb526da6"},"downloads":-1,"filename":"cfile-0.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"cc0feb81dabc467eae54aaf18f99a80b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":5216,"upload_time":"2021-03-20T18:34:35","upload_time_iso_8601":"2021-03-20T18:34:35.398715Z","url":"https://files.pythonhosted.org/packages/f7/e0/e1b67e58ba1e6d728df871a574b56f22d3935adc6e929048cb575f01efea/cfile-0.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"949925e6b30346aca57b52fe97f5be85c85b588317109791c3e0191816aec1cc","md5":"794dd593df533c173cacc4c983df21e6","sha256":"00839053069abe06843786dead63133c8a60216e164357f280e6913a61c17f1f"},"downloads":-1,"filename":"cfile-0.2.0.tar.gz","has_sig":false,"md5_digest":"794dd593df533c173cacc4c983df21e6","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":4454,"upload_time":"2021-03-20T18:34:36","upload_time_iso_8601":"2021-03-20T18:34:36.650591Z","url":"https://files.pythonhosted.org/packages/94/99/25e6b30346aca57b52fe97f5be85c85b588317109791c3e0191816aec1cc/cfile-0.2.0.tar.gz","yanked":false,"yanked_reason":null}],"0.4.0":[{"comment_text":"","digests":{"blake2b_256":"4dd7199b315d7b33d725fd98b04b5cba236e07fe245c34212adb949d1af82805","md5":"10965b67de7a0dabb4061233361f7bce","sha256":"20dbd8e1d2abc9fa06b815fdf873073a3bb9690a61143a8567315afce1e56277"},"downloads":-1,"filename":"cfile-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"10965b67de7a0dabb4061233361f7bce","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10","size":14140,"upload_time":"2024-03-28T15:05:04","upload_time_iso_8601":"2024-03-28T15:05:04.537447Z","url":"https://files.pythonhosted.org/packages/4d/d7/199b315d7b33d725fd98b04b5cba236e07fe245c34212adb949d1af82805/cfile-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ce72786addea24abca7c059b89681eb32d81f53c24d4559bbe2a05c1517da56","md5":"115f333af6a6c6b225920417ba96ff66","sha256":"510696b7d37ea6b1522f74b950963cf72dfbf1ada7ce8b0c3831846ee97577c0"},"downloads":-1,"filename":"cfile-0.4.0.tar.gz","has_sig":false,"md5_digest":"115f333af6a6c6b225920417ba96ff66","packagetype":"sdist","python_version":"source","requires_python":">=3.10","size":17349,"upload_time":"2024-03-28T15:05:05","upload_time_iso_8601":"2024-03-28T15:05:05.935456Z","url":"https://files.pythonhosted.org/packages/3c/e7/2786addea24abca7c059b89681eb32d81f53c24d4559bbe2a05c1517da56/cfile-0.4.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"4dd7199b315d7b33d725fd98b04b5cba236e07fe245c34212adb949d1af82805","md5":"10965b67de7a0dabb4061233361f7bce","sha256":"20dbd8e1d2abc9fa06b815fdf873073a3bb9690a61143a8567315afce1e56277"},"downloads":-1,"filename":"cfile-0.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"10965b67de7a0dabb4061233361f7bce","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.10","size":14140,"upload_time":"2024-03-28T15:05:04","upload_time_iso_8601":"2024-03-28T15:05:04.537447Z","url":"https://files.pythonhosted.org/packages/4d/d7/199b315d7b33d725fd98b04b5cba236e07fe245c34212adb949d1af82805/cfile-0.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3ce72786addea24abca7c059b89681eb32d81f53c24d4559bbe2a05c1517da56","md5":"115f333af6a6c6b225920417ba96ff66","sha256":"510696b7d37ea6b1522f74b950963cf72dfbf1ada7ce8b0c3831846ee97577c0"},"downloads":-1,"filename":"cfile-0.4.0.tar.gz","has_sig":false,"md5_digest":"115f333af6a6c6b225920417ba96ff66","packagetype":"sdist","python_version":"source","requires_python":">=3.10","size":17349,"upload_time":"2024-03-28T15:05:05","upload_time_iso_8601":"2024-03-28T15:05:05.935456Z","url":"https://files.pythonhosted.org/packages/3c/e7/2786addea24abca7c059b89681eb32d81f53c24d4559bbe2a05c1517da56/cfile-0.4.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
