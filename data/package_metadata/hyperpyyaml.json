{"info":{"author":"Peter Plantinga, Aku Rouhe","author_email":"speechbrain@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: Apache Software License","Programming Language :: Python :: 3"],"description":"Introduction\n------------\n\nA crucial element of systems for data-analysis is laying out all the\nhyperparameters of that system so they can be easily examined and modified.\nWe add a few useful extensions to a popular human-readable data-serialization\nlanguage known as YAML (YAML Ain't Markup Language). This provides support\nfor a rather expansive idea of what constitutes a hyperparameter, and cleans\nup python files for data analysis to just the bare algorithm.\n\n### Table of Contents\n* [YAML basics](#yaml-basics)\n* [HyperPyYAML](#hyperpyyaml)\n    * [Objects](#objects)\n    * [Aliases](#aliases)\n    * [Tuples](#tuples)\n* [How to use HyperPyYAML](#how-to-use-hyperpyyaml)\n* [Conclusion](#conclusion)\n\nYAML basics\n-----------\n\nYAML is a data-serialization language, similar to JSON, and it supports\nthree basic types of nodes: scalar, sequential, and mapping. PyYAML naturally\nconverts sequential nodes to python lists and mapping nodes to python dicts.\n\nScalar nodes can take one of the following forms:\n\n```yaml\nstring: abcd  # No quotes needed\ninteger: 1\nfloat: 1.3\nbool: True\nnone: null\n```\n\nNote that we've used a simple mapping to demonstrate the scalar nodes. A mapping\nis a set of `key: value` pairs, defined so that the key can be used to easily\nretrieve the corresponding value. In addition to the format above, mappings\ncan also be specified in a similar manner to JSON:\n\n```yaml\n{foo: 1, bar: 2.5, baz: \"abc\"}\n```\n\nSequences, or lists of items, can also be specified in two ways:\n\n```yaml\n- foo\n- bar\n- baz\n```\n\nor\n\n```yaml\n[foo, bar, baz]\n```\n\nNote that when not using the inline version, YAML uses whitespace to denote\nnested items:\n\n```yaml\nfoo:\n    a: 1\n    b: 2\nbar:\n    - c\n    - d\n```\n\nYAML has a few more advanced features (such as\n[aliases](https://pyyaml.org/wiki/PyYAMLDocumentation#aliases) and\n[merge keys](https://yaml.org/type/merge.html)) that you may want to explore\non your own. We will briefly discuss one here since it is relevant for our\nextensions: [YAML tags](https://pyyaml.org/wiki/PyYAMLDocumentation#tags).\n\nTags are added with a `!` prefix, and they specify the type of the node. This\nallows types beyond the simple types listed above to be used. PyYAML supports a\nfew additional types, such as:\n\n```yaml\n!!set                           # set\n!!timestamp                     # datetime.datetime\n!!python/tuple                  # tuple\n!!python/complex                # complex\n!!python/name:module.name       # A class or function\n!!python/module:package.module  # A module\n!!python/object/new:module.cls  # An instance of a class\n```\n\nThese can all be quite useful, however we found that this system was a bit\ncumbersome, especially with the frequency with which we were using them. So\nwe decided to implement some shortcuts for these features, which we are\ncalling \"HyperPyYAML\".\n\nHyperPyYAML\n-----------\n\nWe make several extensions to yaml including easier object creation, nicer\naliases, and tuples.\n\n### Objects\n\nOur first extension is to simplify the structure for specifying an instance,\nmodule, class, or function. As an example:\n\n```yaml\nmodel: !new:collections.Counter\n```\n\nThis tag, prefixed with `!new:`, constructs an instance of the specified class.\nIf the node is a mapping node, all the items are passed as keyword arguments\nto the class when the instance is created. A list can similarly be used to\npass positional arguments. See the following examples:\n\n```yaml\nfoo: !new:collections.Counter\n  - abracadabra\nbar: !new: collections.Counter\n  a: 2\n  b: 1\n  c: 5\n```\n\nWe also simplify the interface for specifying a function or class or other\nstatic Python entity:\n\n```yaml\nadd: !name:operator.add\n```\n\nThis code stores the `add` function. It can later be used in the usual way:\n\n```python\n>>> loaded_yaml = load_hyperpyyaml(\"add: !name:operator.add\")\n>>> loaded_yaml[\"add\"](2, 4)\n6\n```\n\n### Aliases\n\nAnother extension is a nicer alias system that supports things like\nstring interpolation. We've added a tag written `!ref` that\ntakes keys in angle brackets, and searches for them inside the yaml\nfile itself. As an example:\n\n```yaml\nfolder1: abc/def\nfolder2: ghi/jkl\nfolder3: !ref <folder1>/<folder2>\n\nfoo: 1024\nbar: 512\nbaz: !ref <foo> // <bar> + 1\n```\n\nThis allows us to change some values and automatically change the\ndependent values accordingly.\nYou can also refer to other references, and to sub-nodes using brackets.\n\n```yaml\nblock_index: 1\ncnn1:\n    out_channels: !ref <block_index> * 64\n    kernel_size: (3, 3)\ncnn2: \n    out_channels: !ref <cnn1[out_channels]>\n    kernel_size: (3, 3)\n```\n\nFinally, you can make references to nodes that are objects, not just scalars.\n\n```python\nyaml_string = \"\"\"\nfoo: !new:collections.Counter\n  a: 4\nbar: !ref <foo>\nbaz: !copy <foo>\n\"\"\"\nloaded_yaml = load_hyperpyyaml(yaml_string)\nloaded_yaml[\"foo\"].update({\"b\": 10})\nprint(loaded_yaml[\"bar\"])\nprint(loaded_yaml[\"baz\"])\n```\n\nThis provides the output:\n```\nCounter({'b': 10, 'a': 4})\nCounter({'a': 4})\n```\n\nNote that `!ref` makes only a shallow copy, so updating `foo`\nalso updates `bar`. If you want a deep copy, use the `!copy` tag.\n\nThere are some issues (#7 #11) mentioning that `!ref` cannot refer to the return value of `!apply` function. \nThus we provide another `!applyref` tag to work with `!ref`, which can be used in four ways:\n\n```yaml\n# 1. Pass the positional and keyword arguments at the same time. Like `!!python/object/apply:module.function` in pyyaml\nc: !applyref:sorted\n    _args: \n        - [3, 4, 1, 2]\n    _kwargs:\n        reverse: False\nd: !ref <c>-<c>\n\n# 2. Only pass the keyword arguments\ne: !applyref:random.randint\n    a: 1\n    b: 3\nf: !ref <e><e>\n\n# 3. Only pass the positional arguments\ng: !applyref:random.randint\n    - 1\n    - 3\nh: !ref <g><g>\n\n# 4. No arguments\ni: !applyref:random.random\nj: !ref <i><i>\n```\n\nNote that `!applyref` cannot return an object, otherwise the `RepresenterError` will be raised.\n\n### Tuples\n\nOne last minor extension to the yaml syntax we've made is to implicitly\nresolve any string starting with `(` and ending with `)` to a tuple.\nThis makes the use of YAML more intuitive for Python users.\n\n\nHow to use HyperPyYAML\n---------------------\n\nAll of the listed extensions are available by loading yaml using the\n`load_hyperpyyaml` function. This function returns an object in a similar\nmanner to pyyaml and other yaml libraries.\nAlso, `load_hyperpyyaml` takes an optional argument, `overrides`\nwhich allows changes to any of the parameters listed in the YAML.\nThe following example demonstrates changing the `out_channels`\nof the CNN layer:\n\n```python\n>>> yaml_string = \"\"\"\n... block_index: 1\n... cnn1:\n...   out_channels: !ref <block_index> * 64\n...   kernel_size: (3, 3)\n... cnn2: \n...   out_channels: !ref <cnn1[out_channels]>\n...   kernel_size: (3, 3)\n... \"\"\"\n>>> overrides = {\"block_index\": 2}\n>>> with open(\"hyperparameters.yaml\") as f:\n...    hyperparameters = load_hyperpyyaml(f, overrides)\n>>> hyperparameters[\"block_index\"]\n2\n>>> hyperparameters[\"cnn2\"][\"out_channels\"]\n128\n```\n\nConclusion\n----------\n\nWe've defined a number of extensions to the YAML syntax, designed to\nmake it easier to use for hyperparameter specification. Feedback is welcome!\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/speechbrain/HyperPyYAML","keywords":"","license":"","license_expression":null,"license_files":null,"maintainer":"","maintainer_email":"","name":"HyperPyYAML","package_url":"https://pypi.org/project/HyperPyYAML/","platform":null,"project_url":"https://pypi.org/project/HyperPyYAML/","project_urls":{"Homepage":"https://github.com/speechbrain/HyperPyYAML"},"provides_extra":null,"release_url":"https://pypi.org/project/HyperPyYAML/1.2.2/","requires_dist":["pyyaml >=5.1","ruamel.yaml >=0.17.28"],"requires_python":"","summary":"Extensions to YAML syntax for better python interaction","version":"1.2.2","yanked":false,"yanked_reason":null},"last_serial":19846964,"releases":{"0.0.1":[{"comment_text":"","digests":{"blake2b_256":"ccd568800a2642ed71a54808bb045fee53a394fd98a4ab200afc2c0e74f2bb9f","md5":"f61616e2a084c47f8d1125789d0cd5c9","sha256":"1040a3fe511fd2bfcbca5288893e60ec3154f3172bf839e85ef7ee87f816fc67"},"downloads":-1,"filename":"HyperPyYAML-0.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"f61616e2a084c47f8d1125789d0cd5c9","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":22243,"upload_time":"2021-01-16T22:17:42","upload_time_iso_8601":"2021-01-16T22:17:42.877386Z","url":"https://files.pythonhosted.org/packages/cc/d5/68800a2642ed71a54808bb045fee53a394fd98a4ab200afc2c0e74f2bb9f/HyperPyYAML-0.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b67e729448bb059f9bcb4f6c35107edaaefc3aac68b50d3af9e10dfaef8a83a4","md5":"76ee681dee216faefb61afb8f0e2fda4","sha256":"5e9cb0e58f6de7ef77db9b2e4006ba72f7f2c55140fc4bfc4b710a33f14bb6cc"},"downloads":-1,"filename":"HyperPyYAML-0.0.1.tar.gz","has_sig":false,"md5_digest":"76ee681dee216faefb61afb8f0e2fda4","packagetype":"sdist","python_version":"source","requires_python":null,"size":11115,"upload_time":"2021-01-16T22:17:44","upload_time_iso_8601":"2021-01-16T22:17:44.377291Z","url":"https://files.pythonhosted.org/packages/b6/7e/729448bb059f9bcb4f6c35107edaaefc3aac68b50d3af9e10dfaef8a83a4/HyperPyYAML-0.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"17e263e6353151cb4359f66e93f52152d7d60c1b32c87f5b2e2e58419d2a3711","md5":"df07e2384d075ce424d3de84436aa842","sha256":"243ada56d8bf29f4786e7022448ff79eb8d19ae9aaaf2e4e41e1e3da8c0bb958"},"downloads":-1,"filename":"HyperPyYAML-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"df07e2384d075ce424d3de84436aa842","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":15128,"upload_time":"2021-03-04T23:29:02","upload_time_iso_8601":"2021-03-04T23:29:02.244077Z","url":"https://files.pythonhosted.org/packages/17/e2/63e6353151cb4359f66e93f52152d7d60c1b32c87f5b2e2e58419d2a3711/HyperPyYAML-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1aab080cebae38020396b878e314902a8944cff98f28c7e0f611166fcccca736","md5":"8a25e14c6ed0dd01ba7cbaf74574a63b","sha256":"efa8c098336e38f46e6f0985bcc6fc98d9a05856febfd5925e6a0a36ae5dc530"},"downloads":-1,"filename":"HyperPyYAML-1.0.0.tar.gz","has_sig":false,"md5_digest":"8a25e14c6ed0dd01ba7cbaf74574a63b","packagetype":"sdist","python_version":"source","requires_python":null,"size":11162,"upload_time":"2021-03-04T23:29:03","upload_time_iso_8601":"2021-03-04T23:29:03.666979Z","url":"https://files.pythonhosted.org/packages/1a/ab/080cebae38020396b878e314902a8944cff98f28c7e0f611166fcccca736/HyperPyYAML-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"ba90e06c147e910c71085fb6ba819864b99085bcdd259b60a8e9ddde67f61b4d","md5":"471add2bfc9db159b83adcd993b3a701","sha256":"27ffeb65cde53cf9aaadfc58420c599e7f41e2f7c7bd3373341aed2dce65c84a"},"downloads":-1,"filename":"HyperPyYAML-1.0.1.tar.gz","has_sig":false,"md5_digest":"471add2bfc9db159b83adcd993b3a701","packagetype":"sdist","python_version":"source","requires_python":null,"size":14568,"upload_time":"2022-04-20T21:06:44","upload_time_iso_8601":"2022-04-20T21:06:44.670766Z","url":"https://files.pythonhosted.org/packages/ba/90/e06c147e910c71085fb6ba819864b99085bcdd259b60a8e9ddde67f61b4d/HyperPyYAML-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"d78e4230b4277c5526f9d7a08e429c41c51114b1a917a4eafd0999b7ac5057bc","md5":"114036dbd23ec4b250fe7827270d90a6","sha256":"39fb02f8d80444d8a0bd92550bd4c98aff838a65cfd109149b1e1683902dc319"},"downloads":-1,"filename":"HyperPyYAML-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"114036dbd23ec4b250fe7827270d90a6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":15903,"upload_time":"2022-11-18T19:27:08","upload_time_iso_8601":"2022-11-18T19:27:08.919668Z","url":"https://files.pythonhosted.org/packages/d7/8e/4230b4277c5526f9d7a08e429c41c51114b1a917a4eafd0999b7ac5057bc/HyperPyYAML-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"73ca88a9b9b6cf5407f9fbec720ff4c1af92e342a709b7d1f22234e014929f83","md5":"81d53c48c04b0ac7195fe756ac624a0b","sha256":"4873c675ee31e9411e6a15a992e0d4be06c5e78b4c59feebd5cd64384a0eaf19"},"downloads":-1,"filename":"HyperPyYAML-1.1.0.tar.gz","has_sig":false,"md5_digest":"81d53c48c04b0ac7195fe756ac624a0b","packagetype":"sdist","python_version":"source","requires_python":null,"size":15211,"upload_time":"2022-11-18T19:27:12","upload_time_iso_8601":"2022-11-18T19:27:12.622180Z","url":"https://files.pythonhosted.org/packages/73/ca/88a9b9b6cf5407f9fbec720ff4c1af92e342a709b7d1f22234e014929f83/HyperPyYAML-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"4825b287635d4676bf380c31b5adca1ec6c6aa8c4e26a24e1e54893397b5bbe0","md5":"3fca70963af4c1263410236f7071a6f7","sha256":"ba54decb0b1680304df9aec6f5c0809bcc17178c6c1ad369cfb9725557acb965"},"downloads":-1,"filename":"HyperPyYAML-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"3fca70963af4c1263410236f7071a6f7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16107,"upload_time":"2023-03-31T13:30:02","upload_time_iso_8601":"2023-03-31T13:30:02.633567Z","url":"https://files.pythonhosted.org/packages/48/25/b287635d4676bf380c31b5adca1ec6c6aa8c4e26a24e1e54893397b5bbe0/HyperPyYAML-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5d47afb6a4499e3210e24ee19f2bc750c8e33b0c99e80ded9e80ca0b61e45393","md5":"28b7c996a68891fefb8d72e1803ddba2","sha256":"658dfbbfc5788c92fa27843c643bedbd468220e0f25b47c00dabf80f3bc7e1d7"},"downloads":-1,"filename":"HyperPyYAML-1.2.0.tar.gz","has_sig":false,"md5_digest":"28b7c996a68891fefb8d72e1803ddba2","packagetype":"sdist","python_version":"source","requires_python":null,"size":17055,"upload_time":"2023-03-31T13:30:06","upload_time_iso_8601":"2023-03-31T13:30:06.659191Z","url":"https://files.pythonhosted.org/packages/5d/47/afb6a4499e3210e24ee19f2bc750c8e33b0c99e80ded9e80ca0b61e45393/HyperPyYAML-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.2.1":[{"comment_text":"","digests":{"blake2b_256":"94b1fedad01d1641d787e85b7b6d8b1aef1833c7101a62d64c121f79c81491f1","md5":"4ed83b6a39fc4c3922fb6d505a07cabd","sha256":"8fd2fe912e953800440f5d5c1c1820cf1827bffb905364307d34939723999953"},"downloads":-1,"filename":"HyperPyYAML-1.2.1-py3-none-any.whl","has_sig":false,"md5_digest":"4ed83b6a39fc4c3922fb6d505a07cabd","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16112,"upload_time":"2023-05-30T14:04:27","upload_time_iso_8601":"2023-05-30T14:04:27.277345Z","url":"https://files.pythonhosted.org/packages/94/b1/fedad01d1641d787e85b7b6d8b1aef1833c7101a62d64c121f79c81491f1/HyperPyYAML-1.2.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ac6b3b79354a937064a33d70f6178a09674ea6c6f145c7b1a5c2a565c9776678","md5":"6f6b7f95ab7de2de369ade21bc1a51d8","sha256":"0c47fa3d362c30003786914d5a3c9661bc02993d3e49d5757b75607b2ce639a4"},"downloads":-1,"filename":"HyperPyYAML-1.2.1.tar.gz","has_sig":false,"md5_digest":"6f6b7f95ab7de2de369ade21bc1a51d8","packagetype":"sdist","python_version":"source","requires_python":null,"size":17117,"upload_time":"2023-05-30T14:04:32","upload_time_iso_8601":"2023-05-30T14:04:32.602316Z","url":"https://files.pythonhosted.org/packages/ac/6b/3b79354a937064a33d70f6178a09674ea6c6f145c7b1a5c2a565c9776678/HyperPyYAML-1.2.1.tar.gz","yanked":false,"yanked_reason":null}],"1.2.2":[{"comment_text":"","digests":{"blake2b_256":"33c9751b6401887f4b50f9307cc1e53d287b3dc77c375c126aeb6335aff73ccb","md5":"660b1ca888f8d319057be6856f82f50c","sha256":"3c5864bdc8864b2f0fbd7bc495e7e8fdf2dfd5dd80116f72da27ca96a128bdeb"},"downloads":-1,"filename":"HyperPyYAML-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"660b1ca888f8d319057be6856f82f50c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16118,"upload_time":"2023-09-21T14:45:25","upload_time_iso_8601":"2023-09-21T14:45:25.101199Z","url":"https://files.pythonhosted.org/packages/33/c9/751b6401887f4b50f9307cc1e53d287b3dc77c375c126aeb6335aff73ccb/HyperPyYAML-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52e33ac46d9a662b037f699a6948b39c8d03bfcff0b592335d5953ba0c55d453","md5":"e16a5bbc3bcf3dc0d0c90f6490a99e73","sha256":"bdb734210d18770a262f500fe5755c7a44a5d3b91521b06e24f7a00a36ee0f87"},"downloads":-1,"filename":"HyperPyYAML-1.2.2.tar.gz","has_sig":false,"md5_digest":"e16a5bbc3bcf3dc0d0c90f6490a99e73","packagetype":"sdist","python_version":"source","requires_python":null,"size":17085,"upload_time":"2023-09-21T14:45:27","upload_time_iso_8601":"2023-09-21T14:45:27.779460Z","url":"https://files.pythonhosted.org/packages/52/e3/3ac46d9a662b037f699a6948b39c8d03bfcff0b592335d5953ba0c55d453/HyperPyYAML-1.2.2.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"33c9751b6401887f4b50f9307cc1e53d287b3dc77c375c126aeb6335aff73ccb","md5":"660b1ca888f8d319057be6856f82f50c","sha256":"3c5864bdc8864b2f0fbd7bc495e7e8fdf2dfd5dd80116f72da27ca96a128bdeb"},"downloads":-1,"filename":"HyperPyYAML-1.2.2-py3-none-any.whl","has_sig":false,"md5_digest":"660b1ca888f8d319057be6856f82f50c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":16118,"upload_time":"2023-09-21T14:45:25","upload_time_iso_8601":"2023-09-21T14:45:25.101199Z","url":"https://files.pythonhosted.org/packages/33/c9/751b6401887f4b50f9307cc1e53d287b3dc77c375c126aeb6335aff73ccb/HyperPyYAML-1.2.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"52e33ac46d9a662b037f699a6948b39c8d03bfcff0b592335d5953ba0c55d453","md5":"e16a5bbc3bcf3dc0d0c90f6490a99e73","sha256":"bdb734210d18770a262f500fe5755c7a44a5d3b91521b06e24f7a00a36ee0f87"},"downloads":-1,"filename":"HyperPyYAML-1.2.2.tar.gz","has_sig":false,"md5_digest":"e16a5bbc3bcf3dc0d0c90f6490a99e73","packagetype":"sdist","python_version":"source","requires_python":null,"size":17085,"upload_time":"2023-09-21T14:45:27","upload_time_iso_8601":"2023-09-21T14:45:27.779460Z","url":"https://files.pythonhosted.org/packages/52/e3/3ac46d9a662b037f699a6948b39c8d03bfcff0b592335d5953ba0c55d453/HyperPyYAML-1.2.2.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
