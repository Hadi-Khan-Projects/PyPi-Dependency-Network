{"info":{"author":"Simon Willison","author_email":null,"bugtrack_url":null,"classifiers":[],"description":"# json-flatten\n\n[![PyPI](https://img.shields.io/pypi/v/json-flatten.svg)](https://pypi.org/project/json-flatten/)\n[![Changelog](https://img.shields.io/github/v/release/simonw/json-flatten?include_prereleases&label=changelog)](https://github.com/simonw/json-flatten/releases)\n[![Tests](https://github.com/simonw/json-flatten/workflows/Test/badge.svg)](https://github.com/simonw/json-flatten/actions?query=workflow%3ATest)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/json-flatten/blob/main/LICENSE)\n\n\nPython functions for flattening a JSON object to a single dictionary of pairs, and unflattening that dictionary back to a JSON object.\n\nThis can be useful if you need to represent a JSON object using a regular HTML form or transmit it as a set of query string parameters.\n\nFor example:\n\n```pycon\n>>> import json_flatten\n>>> json_flatten.flatten({\"foo\": {\"bar\": [1, True, None]}})\n{'foo.bar.[0]$int': '1', 'foo.bar.[1]$bool': 'True', 'foo.bar.[2]$none': 'None'}\n>>> json_flatten.unflatten(_)\n{'foo': {'bar': [1, True, None]}}\n```\n\nThe top-level object passed to `flatten()` must be a dictionary.\n\n## JSON flattening format\n\n### Basic principles\n\n1. Keys are constructed using dot notation to represent nesting.\n2. Type information is preserved using `$type` suffixes.\n3. List indices are represented using `[index]` notation.\n4. Empty objects and lists have special representations.\n\n### Nested objects\n\nFor nested objects, keys are constructed by joining the nested keys with dots.\n\nExample:\n\n<!-- [[[cog\nimport cog\nimport json\nfrom json_flatten import flatten\n\nexample = {\n  \"user\": {\n    \"name\": \"John\",\n    \"age\": 30\n  }\n}\n\ncog.out(\"```json\\n\")\ncog.out(json.dumps(example, indent=2))\ncog.out(\"\\n```\\n\")\ncog.out(\"Flattened:\\n```\\n\")\nfor key, value in flatten(example).items():\n    cog.out(f\"{key}={value}\\n\")\ncog.out(\"```\\n\")\n]]] -->\n```json\n{\n  \"user\": {\n    \"name\": \"John\",\n    \"age\": 30\n  }\n}\n```\nFlattened:\n```\nuser.name=John\nuser.age$int=30\n```\n<!-- [[[end]]]  -->\n\n### Lists\n\nList items are represented using `[index]` notation.\n\nExample:\n<!-- [[[cog\nexample = {\n  \"fruits\": [\"apple\", \"banana\", \"cherry\"]\n}\n\ncog.out(\"```json\\n\")\ncog.out(json.dumps(example, indent=2))\ncog.out(\"\\n```\\n\")\ncog.out(\"Flattened:\\n```\\n\")\nfor key, value in flatten(example).items():\n    cog.out(f\"{key}={value}\\n\")\ncog.out(\"```\\n\")\n]]] -->\n```json\n{\n  \"fruits\": [\n    \"apple\",\n    \"banana\",\n    \"cherry\"\n  ]\n}\n```\nFlattened:\n```\nfruits.[0]=apple\nfruits.[1]=banana\nfruits.[2]=cherry\n```\n<!-- [[[end]]] -->\n\n### Nested lists\n\nFor nested lists, the index notation is repeated.\n\nExample:\n<!-- [[[cog\nexample = {\n  \"matrix\": [[1, 2], [3, 4]]\n}\n\ncog.out(\"```json\\n\")\ncog.out(json.dumps(example))\ncog.out(\"\\n```\\n\")\ncog.out(\"Flattened:\\n```\\n\")\nfor key, value in flatten(example).items():\n    cog.out(f\"{key}={value}\\n\")\ncog.out(\"```\\n\")\n]]] -->\n```json\n{\"matrix\": [[1, 2], [3, 4]]}\n```\nFlattened:\n```\nmatrix.[0].[0]$int=1\nmatrix.[0].[1]$int=2\nmatrix.[1].[0]$int=3\nmatrix.[1].[1]$int=4\n```\n<!-- [[[end]]] -->\n\n## Type preservation\n\nTypes are preserved using `$type` suffixes:\n\n<!-- [[[cog\nexamples = (\n    (\"String\", \"\", {\"name\": \"Cleo\"}),\n    (\"Integer\", \"$int\", {\"age\": 30}),\n    (\"Float\", \"$float\", {\"price\": 19.99}),\n    (\"Boolean\", \"$bool\", {\"active\": True}),\n    (\"Null\", \"$none\", {\"data\": None}),\n    (\"Empty object\", \"$empty\", {\"obj\": {}}),\n    (\"Empty list\", \"$emptylist\", {\"list\": []}),\n)\ncog.out(\"| Type | Suffix | Example |\\n\")\ncog.out(\"|------|--------|---------|\\n\")\nfor type_, suffix, example in (examples):\n    key, value = list(flatten(example).items())[0]\n    suffix = f'`{suffix}`' if suffix else ''\n    cog.out(f\"|{type_}|{suffix}|`{key}={value}`|\\n\")\n]]] -->\n| Type | Suffix | Example |\n|------|--------|---------|\n|String||`name=Cleo`|\n|Integer|`$int`|`age$int=30`|\n|Float|`$float`|`price$float=19.99`|\n|Boolean|`$bool`|`active$bool=True`|\n|Null|`$none`|`data$none=None`|\n|Empty object|`$empty`|`obj$empty={}`|\n|Empty list|`$emptylist`|`list$emptylist=[]`|\n<!-- [[[end]]] -->\n\nString values do not require a type suffix.\n\n## Example\n\nJSON:\n<!-- [[[cog\nexample = {\n  \"user\": {\n    \"name\": \"Alice\",\n    \"age\": 28,\n    \"hobbies\": [\"reading\", \"swimming\"],\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\"\n    },\n    \"active\": True,\n    \"salary\": 50000.50,\n    \"spouse\": None\n  }\n}\n\ncog.out(\"```json\\n\")\ncog.out(json.dumps(example, indent=2))\ncog.out(\"\\n```\\n\")\ncog.out(\"\\nFlattened:\\n```\\n\")\nfor key, value in flatten(example).items():\n    cog.out(f\"{key}={value}\\n\")\ncog.out(\"```\\n\")\n]]] -->\n```json\n{\n  \"user\": {\n    \"name\": \"Alice\",\n    \"age\": 28,\n    \"hobbies\": [\n      \"reading\",\n      \"swimming\"\n    ],\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Anytown\"\n    },\n    \"active\": true,\n    \"salary\": 50000.5,\n    \"spouse\": null\n  }\n}\n```\n\nFlattened:\n```\nuser.name=Alice\nuser.age$int=28\nuser.hobbies.[0]=reading\nuser.hobbies.[1]=swimming\nuser.address.street=123 Main St\nuser.address.city=Anytown\nuser.active$bool=True\nuser.salary$float=50000.5\nuser.spouse$none=None\n```\n<!-- [[[end]]] -->\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/simonw/json-flatten","keywords":null,"license":"Apache License, Version 2.0","license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"json-flatten","package_url":"https://pypi.org/project/json-flatten/","platform":null,"project_url":"https://pypi.org/project/json-flatten/","project_urls":{"CI":"https://github.com/simonw/json-flatten/actions","Changelog":"https://github.com/simonw/json-flatten/releases","Homepage":"https://github.com/simonw/json-flatten","Issues":"https://github.com/simonw/json-flatten/issues"},"provides_extra":["test"],"release_url":"https://pypi.org/project/json-flatten/0.3.1/","requires_dist":["pytest; extra == \"test\"","black; extra == \"test\"","cogapp; extra == \"test\""],"requires_python":null,"summary":"Python functions for flattening a JSON object to a single dictionary of pairs, and unflattening that dictionary back to a JSON object","version":"0.3.1","yanked":false,"yanked_reason":null},"last_serial":24918979,"releases":{"0.1":[{"comment_text":"","digests":{"blake2b_256":"1e8be1e6f8c7de23ff602ca304714f03893cfd92fb052ee56043c0c4608355c9","md5":"281aceefcb1cf63725f65eb71c1009e4","sha256":"1449c37729b312084a87ecc40d1bafb0703a6c56424c6770ab08199234c08506"},"downloads":-1,"filename":"json_flatten-0.1-py3-none-any.whl","has_sig":false,"md5_digest":"281aceefcb1cf63725f65eb71c1009e4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":2874,"upload_time":"2019-06-22T04:43:18","upload_time_iso_8601":"2019-06-22T04:43:18.749458Z","url":"https://files.pythonhosted.org/packages/1e/8b/e1e6f8c7de23ff602ca304714f03893cfd92fb052ee56043c0c4608355c9/json_flatten-0.1-py3-none-any.whl","yanked":false,"yanked_reason":null}],"0.2":[{"comment_text":"","digests":{"blake2b_256":"3a292efc524c8be4dbe21eaf98aa375a8fd9d80b3cc59b2f3e9dbb76483015a6","md5":"6b881ff79b2facd21dd30c03226b6c32","sha256":"f5f1bb57d4599e41216974b5e04d15ce32ec77e985f58399e3a7da46ef365331"},"downloads":-1,"filename":"json_flatten-0.2-py3-none-any.whl","has_sig":false,"md5_digest":"6b881ff79b2facd21dd30c03226b6c32","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":3079,"upload_time":"2021-09-14T20:28:01","upload_time_iso_8601":"2021-09-14T20:28:01.083849Z","url":"https://files.pythonhosted.org/packages/3a/29/2efc524c8be4dbe21eaf98aa375a8fd9d80b3cc59b2f3e9dbb76483015a6/json_flatten-0.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"11d9138e1b73dfc621a05fa889baffba70fc00a6c6dd12260ea574ae436514e5","md5":"7ada63cd2e0f4ffca1e335479e948abc","sha256":"2466b7f60c1c5e44c53cfa34fc95e23a1f7749f495bde1a857e87fa2305a287e"},"downloads":-1,"filename":"json-flatten-0.2.tar.gz","has_sig":false,"md5_digest":"7ada63cd2e0f4ffca1e335479e948abc","packagetype":"sdist","python_version":"source","requires_python":null,"size":3105,"upload_time":"2021-09-14T20:28:02","upload_time_iso_8601":"2021-09-14T20:28:02.425013Z","url":"https://files.pythonhosted.org/packages/11/d9/138e1b73dfc621a05fa889baffba70fc00a6c6dd12260ea574ae436514e5/json-flatten-0.2.tar.gz","yanked":false,"yanked_reason":null}],"0.3":[{"comment_text":"","digests":{"blake2b_256":"4a09276890accde4ec02ba332227587b5c77b3096fe528f9207f8dcd998c9273","md5":"5f2c74e4b0ac18f32d5ae8bed8530dd7","sha256":"fb3916ab43f85d362069cdfb8efaef9b20fc9440f9b931f0bbb7233e1508a2a7"},"downloads":-1,"filename":"json_flatten-0.3-py3-none-any.whl","has_sig":false,"md5_digest":"5f2c74e4b0ac18f32d5ae8bed8530dd7","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":3164,"upload_time":"2022-10-29T00:39:27","upload_time_iso_8601":"2022-10-29T00:39:27.051590Z","url":"https://files.pythonhosted.org/packages/4a/09/276890accde4ec02ba332227587b5c77b3096fe528f9207f8dcd998c9273/json_flatten-0.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"53e0adcd32d414d0cc5c46d01e5692e320964ad3f1dae8aacaf1e8eeabe8dd6c","md5":"47421e9e18b70ef6190100cf9b8d11e5","sha256":"c14a888798f6da76f66fae0f2d2228017fa437c7c3d956be623f4d23a07530c1"},"downloads":-1,"filename":"json-flatten-0.3.tar.gz","has_sig":false,"md5_digest":"47421e9e18b70ef6190100cf9b8d11e5","packagetype":"sdist","python_version":"source","requires_python":null,"size":3128,"upload_time":"2022-10-29T00:39:28","upload_time_iso_8601":"2022-10-29T00:39:28.365495Z","url":"https://files.pythonhosted.org/packages/53/e0/adcd32d414d0cc5c46d01e5692e320964ad3f1dae8aacaf1e8eeabe8dd6c/json-flatten-0.3.tar.gz","yanked":false,"yanked_reason":null}],"0.3.1":[{"comment_text":"","digests":{"blake2b_256":"9bed75de9521770184c783ec0d4d75c0bb00f99ac7a21bca48adf9df596483c3","md5":"b5f7dca5494635a1dc42cc217808933a","sha256":"26470dbe9d6d7eb1b7f69c59ba2ade9d52608a76b8443e4654f3adb9c78c1c3e"},"downloads":-1,"filename":"json_flatten-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"b5f7dca5494635a1dc42cc217808933a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":8473,"upload_time":"2024-09-07T04:16:01","upload_time_iso_8601":"2024-09-07T04:16:01.799899Z","url":"https://files.pythonhosted.org/packages/9b/ed/75de9521770184c783ec0d4d75c0bb00f99ac7a21bca48adf9df596483c3/json_flatten-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a106e6a7046e71488a899a990206dc2426e8b9192ab7a341bb95a75ac1c88922","md5":"3dee06b8e645d081269ed76fe501cd71","sha256":"70e813acf431b1ab7e9eb7b98f5733d307d6b9d27b553a344904b9c8eafdad3a"},"downloads":-1,"filename":"json_flatten-0.3.1.tar.gz","has_sig":false,"md5_digest":"3dee06b8e645d081269ed76fe501cd71","packagetype":"sdist","python_version":"source","requires_python":null,"size":8303,"upload_time":"2024-09-07T04:16:02","upload_time_iso_8601":"2024-09-07T04:16:02.978164Z","url":"https://files.pythonhosted.org/packages/a1/06/e6a7046e71488a899a990206dc2426e8b9192ab7a341bb95a75ac1c88922/json_flatten-0.3.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"9bed75de9521770184c783ec0d4d75c0bb00f99ac7a21bca48adf9df596483c3","md5":"b5f7dca5494635a1dc42cc217808933a","sha256":"26470dbe9d6d7eb1b7f69c59ba2ade9d52608a76b8443e4654f3adb9c78c1c3e"},"downloads":-1,"filename":"json_flatten-0.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"b5f7dca5494635a1dc42cc217808933a","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":8473,"upload_time":"2024-09-07T04:16:01","upload_time_iso_8601":"2024-09-07T04:16:01.799899Z","url":"https://files.pythonhosted.org/packages/9b/ed/75de9521770184c783ec0d4d75c0bb00f99ac7a21bca48adf9df596483c3/json_flatten-0.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a106e6a7046e71488a899a990206dc2426e8b9192ab7a341bb95a75ac1c88922","md5":"3dee06b8e645d081269ed76fe501cd71","sha256":"70e813acf431b1ab7e9eb7b98f5733d307d6b9d27b553a344904b9c8eafdad3a"},"downloads":-1,"filename":"json_flatten-0.3.1.tar.gz","has_sig":false,"md5_digest":"3dee06b8e645d081269ed76fe501cd71","packagetype":"sdist","python_version":"source","requires_python":null,"size":8303,"upload_time":"2024-09-07T04:16:02","upload_time_iso_8601":"2024-09-07T04:16:02.978164Z","url":"https://files.pythonhosted.org/packages/a1/06/e6a7046e71488a899a990206dc2426e8b9192ab7a341bb95a75ac1c88922/json_flatten-0.3.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
