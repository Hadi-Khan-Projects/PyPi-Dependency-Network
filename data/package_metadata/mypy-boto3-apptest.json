{"info":{"author":"Vlad Emelianov","author_email":"vlad.emelianov.nz@gmail.com","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Environment :: Console","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Natural Language :: English","Operating System :: OS Independent","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.14","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Typing :: Stubs Only"],"description":"<a id=\"mypy-boto3-apptest\"></a>\n\n# mypy-boto3-apptest\n\n[![PyPI - mypy-boto3-apptest](https://img.shields.io/pypi/v/mypy-boto3-apptest.svg?color=blue)](https://pypi.org/project/mypy-boto3-apptest/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-apptest.svg?color=blue)](https://pypi.org/project/mypy-boto3-apptest/)\n[![Docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/)\n[![PyPI - Downloads](https://static.pepy.tech/badge/mypy-boto3-apptest)](https://pypistats.org/packages/mypy-boto3-apptest)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[boto3 MainframeModernizationApplicationTesting 1.36.0](https://pypi.org/project/boto3/)\ncompatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated with\n[mypy-boto3-builder 8.8.0](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in\n[mypy-boto3-apptest docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_apptest/).\n\nSee how it helps you find and fix potential bugs:\n\n![types-boto3 demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [mypy-boto3-apptest](#mypy-boto3-apptest)\n  - [How to install](#how-to-install)\n    - [Generate locally (recommended)](<#generate-locally-(recommended)>)\n    - [VSCode extension](#vscode-extension)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n    - [Pylint compatibility](#pylint-compatibility)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Type definitions](#type-definitions)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"generate-locally-(recommended)\"></a>\n\n### Generate locally (recommended)\n\nYou can generate type annotations for `boto3` package locally with\n`mypy_boto3_builder`. Use\n[uv](https://docs.astral.sh/uv/getting-started/installation/) for build\nisolation.\n\n1. Run mypy-boto3-builder in your package root directory:\n   `uvx --with 'boto3==1.36.0' mypy_boto3_builder`\n2. Select `boto3-stubs` AWS SDK.\n3. Add `MainframeModernizationApplicationTesting` service.\n4. Use provided commands to install generated packages.\n\n<a id=\"vscode-extension\"></a>\n\n### VSCode extension\n\nAdd\n[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)\nextension to your VSCode and run `AWS boto3: Quick Start` command.\n\nClick `Modify` and select `boto3 common` and\n`MainframeModernizationApplicationTesting`.\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `boto3-stubs` for `MainframeModernizationApplicationTesting` service.\n\n```bash\n# install with boto3 type annotations\npython -m pip install 'boto3-stubs[apptest]'\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[apptest]'\n\n# standalone installation\npython -m pip install mypy-boto3-apptest\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y mypy-boto3-apptest\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `boto3-stubs[apptest]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `boto3` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\n> ⚠️ Due to slow PyCharm performance on `Literal` overloads (issue\n> [PY-40997](https://youtrack.jetbrains.com/issue/PY-40997)), it is recommended\n> to use [boto3-stubs-lite](https://pypi.org/project/boto3-stubs-lite/) until\n> the issue is resolved.\n\n> ⚠️ If you experience slow performance and high CPU usage, try to disable\n> `PyCharm` type checker and use [mypy](https://github.com/python/mypy) or\n> [pyright](https://github.com/microsoft/pyright) instead.\n\n> ⚠️ To continue using `PyCharm` type checker, you can try to replace\n> `boto3-stubs` with\n> [boto3-stubs-lite](https://pypi.org/project/boto3-stubs-lite/):\n\n```bash\npip uninstall boto3-stubs\npip install boto3-stubs-lite\n```\n\nInstall `boto3-stubs[apptest]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\nBoth type checking and code completion should now work.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `boto3-stubs` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed `boto3-stubs`\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `boto3-stubs[apptest]` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `boto3-stubs[apptest]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `boto3-stubs[apptest]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[apptest]'\n```\n\nOptionally, you can install `boto3-stubs` to `typings` directory.\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pylint-compatibility\"></a>\n\n### Pylint compatibility\n\nIt is totally safe to use `TYPE_CHECKING` flag in order to avoid\n`mypy-boto3-apptest` dependency in production. However, there is an issue in\n`pylint` that it complains about undefined variables. To fix it, set all types\nto `object` in non-`TYPE_CHECKING` mode.\n\n```python\nfrom typing import TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from mypy_boto3_ec2 import EC2Client, EC2ServiceResource\n    from mypy_boto3_ec2.waiters import BundleTaskCompleteWaiter\n    from mypy_boto3_ec2.paginators import DescribeVolumesPaginator\nelse:\n    EC2Client = object\n    EC2ServiceResource = object\n    BundleTaskCompleteWaiter = object\n    DescribeVolumesPaginator = object\n\n...\n```\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`MainframeModernizationApplicationTestingClient` provides annotations for\n`boto3.client(\"apptest\")`.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_apptest import MainframeModernizationApplicationTestingClient\n\nclient: MainframeModernizationApplicationTestingClient = Session().client(\"apptest\")\n\n# now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`mypy_boto3_apptest.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_apptest import MainframeModernizationApplicationTestingClient\nfrom mypy_boto3_apptest.paginator import (\n    ListTestCasesPaginator,\n    ListTestConfigurationsPaginator,\n    ListTestRunStepsPaginator,\n    ListTestRunTestCasesPaginator,\n    ListTestRunsPaginator,\n    ListTestSuitesPaginator,\n)\n\nclient: MainframeModernizationApplicationTestingClient = Session().client(\"apptest\")\n\n# Explicit type annotations are optional here\n# Types should be correctly discovered by mypy and IDEs\nlist_test_cases_paginator: ListTestCasesPaginator = client.get_paginator(\"list_test_cases\")\nlist_test_configurations_paginator: ListTestConfigurationsPaginator = client.get_paginator(\n    \"list_test_configurations\"\n)\nlist_test_run_steps_paginator: ListTestRunStepsPaginator = client.get_paginator(\n    \"list_test_run_steps\"\n)\nlist_test_run_test_cases_paginator: ListTestRunTestCasesPaginator = client.get_paginator(\n    \"list_test_run_test_cases\"\n)\nlist_test_runs_paginator: ListTestRunsPaginator = client.get_paginator(\"list_test_runs\")\nlist_test_suites_paginator: ListTestSuitesPaginator = client.get_paginator(\"list_test_suites\")\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`mypy_boto3_apptest.literals` module contains literals extracted from shapes\nthat can be used in user code for type checking.\n\nFull list of `MainframeModernizationApplicationTesting` Literals can be found\nin\n[docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_apptest/literals/).\n\n```python\nfrom mypy_boto3_apptest.literals import CaptureToolType\n\n\ndef check_value(value: CaptureToolType) -> bool: ...\n```\n\n<a id=\"type-definitions\"></a>\n\n### Type definitions\n\n`mypy_boto3_apptest.type_defs` module contains structures and shapes assembled\nto typed dictionaries and unions for additional type checking.\n\nFull list of `MainframeModernizationApplicationTesting` TypeDefs can be found\nin\n[docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_apptest/type_defs/).\n\n```python\nfrom mypy_boto3_apptest.type_defs import BatchOutputTypeDef\n\n\ndef get_value() -> BatchOutputTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for `boto3`\nupdates. It delivers drop-in type annotations for you and makes sure that:\n\n- All available `boto3` services are covered.\n- Each public class and method of every `boto3` service gets valid type\n  annotations extracted from `botocore` schemas.\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [ruff](https://docs.astral.sh/ruff/) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`\n  libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.resource` calls\n- Auto discovery of types for `session.client` and `session.resource` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`mypy-boto3-apptest` version is the same as related `boto3` version and follows\n[PEP 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_apptest/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":["Author","Author-Email","Classifier","Description","Description-Content-Type","Home-Page","Keywords","License","Project-Url","Requires-Dist","Requires-Python","Summary"],"home_page":"https://github.com/youtype/mypy_boto3_builder","keywords":"boto3 apptest boto3-stubs type-annotations mypy typeshed autocomplete","license":"MIT License","license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"mypy-boto3-apptest","package_url":"https://pypi.org/project/mypy-boto3-apptest/","platform":null,"project_url":"https://pypi.org/project/mypy-boto3-apptest/","project_urls":{"Documentation":"https://youtype.github.io/boto3_stubs_docs/mypy_boto3_apptest/","Homepage":"https://github.com/youtype/mypy_boto3_builder","Source":"https://github.com/youtype/mypy_boto3_builder","Tracker":"https://github.com/youtype/mypy_boto3_builder/issues"},"provides_extra":null,"release_url":"https://pypi.org/project/mypy-boto3-apptest/1.36.0/","requires_dist":["typing-extensions; python_version < \"3.12\""],"requires_python":">=3.8","summary":"Type annotations for boto3 MainframeModernizationApplicationTesting 1.36.0 service generated with mypy-boto3-builder 8.8.0","version":"1.36.0","yanked":false,"yanked_reason":null},"last_serial":26967810,"releases":{"1.34.125":[{"comment_text":"","digests":{"blake2b_256":"a2e88dc73b965f7002131ecc632fa6dcd0ba32ad9a1608e1a26fac14542d0f4e","md5":"8128a152493db8372ba8f0dab6392d6c","sha256":"3e83b8261e19a6415157107a7fbe3c8f2575a73bf6e819f2b8f89315b8042281"},"downloads":-1,"filename":"mypy_boto3_apptest-1.34.125-py3-none-any.whl","has_sig":false,"md5_digest":"8128a152493db8372ba8f0dab6392d6c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":30109,"upload_time":"2024-06-12T19:33:04","upload_time_iso_8601":"2024-06-12T19:33:04.997710Z","url":"https://files.pythonhosted.org/packages/a2/e8/8dc73b965f7002131ecc632fa6dcd0ba32ad9a1608e1a26fac14542d0f4e/mypy_boto3_apptest-1.34.125-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1ab0218fe2466f16b1399069b69e4c40f96913a4374bd740c7d9dc4fd17dd45c","md5":"9c2d09539616d43c1fab68de58c97e59","sha256":"cdc00064d9f4dae40c4472feeb04e2fccfd70f36aa3efede457d67f97c595441"},"downloads":-1,"filename":"mypy_boto3_apptest-1.34.125.tar.gz","has_sig":false,"md5_digest":"9c2d09539616d43c1fab68de58c97e59","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":24557,"upload_time":"2024-06-12T19:33:16","upload_time_iso_8601":"2024-06-12T19:33:16.941026Z","url":"https://files.pythonhosted.org/packages/1a/b0/218fe2466f16b1399069b69e4c40f96913a4374bd740c7d9dc4fd17dd45c/mypy_boto3_apptest-1.34.125.tar.gz","yanked":false,"yanked_reason":null}],"1.35.0":[{"comment_text":"","digests":{"blake2b_256":"6d62cb9a116cd6e5f618049d615ac58bed5895f1d67be0515929a7f2e73d1900","md5":"ae5f54dda272308e539fdce84b8a204f","sha256":"4b9108dd49dc26595890cfb0918046ba5623e9ec1b4484efe9a3bbbdb56ce74a"},"downloads":-1,"filename":"mypy_boto3_apptest-1.35.0-py3-none-any.whl","has_sig":false,"md5_digest":"ae5f54dda272308e539fdce84b8a204f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":30088,"upload_time":"2024-08-16T19:53:39","upload_time_iso_8601":"2024-08-16T19:53:39.401569Z","url":"https://files.pythonhosted.org/packages/6d/62/cb9a116cd6e5f618049d615ac58bed5895f1d67be0515929a7f2e73d1900/mypy_boto3_apptest-1.35.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"07a0d411fae8d300e559f2b875dce16ef1e38f7f213e839e1a341f84da1c055f","md5":"e24dde1ca7f87f0f6dfb59ed40d194aa","sha256":"09af729463cab83c3ef4a07c0e8181cd3d260c1c836847950429f2bbbe5aa424"},"downloads":-1,"filename":"mypy_boto3_apptest-1.35.0.tar.gz","has_sig":false,"md5_digest":"e24dde1ca7f87f0f6dfb59ed40d194aa","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":24569,"upload_time":"2024-08-16T19:53:41","upload_time_iso_8601":"2024-08-16T19:53:41.031590Z","url":"https://files.pythonhosted.org/packages/07/a0/d411fae8d300e559f2b875dce16ef1e38f7f213e839e1a341f84da1c055f/mypy_boto3_apptest-1.35.0.tar.gz","yanked":false,"yanked_reason":null}],"1.35.93":[{"comment_text":"","digests":{"blake2b_256":"bd672a058dd1f99189cc173f6e06e9f3ca2ac115a57312467103b8e13642bd11","md5":"5bb91cc046afec29121d7650dc529875","sha256":"4010d590aa5ff77a04d955220ec244eeeea22f79adde1ad9c678faecc0482f21"},"downloads":-1,"filename":"mypy_boto3_apptest-1.35.93-py3-none-any.whl","has_sig":false,"md5_digest":"5bb91cc046afec29121d7650dc529875","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":30547,"upload_time":"2025-01-07T00:10:42","upload_time_iso_8601":"2025-01-07T00:10:42.953259Z","url":"https://files.pythonhosted.org/packages/bd/67/2a058dd1f99189cc173f6e06e9f3ca2ac115a57312467103b8e13642bd11/mypy_boto3_apptest-1.35.93-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"36270144dcba89773a9be26aae60806076bb7965fc21bd87513bc103feee0347","md5":"abe938676b15f41ace4e44e9fd174748","sha256":"43a83537181dbe3266c2684ab1df1f69ea98b15585577414b07caed286e8c2cc"},"downloads":-1,"filename":"mypy_boto3_apptest-1.35.93.tar.gz","has_sig":false,"md5_digest":"abe938676b15f41ace4e44e9fd174748","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":25182,"upload_time":"2025-01-07T00:10:45","upload_time_iso_8601":"2025-01-07T00:10:45.405679Z","url":"https://files.pythonhosted.org/packages/36/27/0144dcba89773a9be26aae60806076bb7965fc21bd87513bc103feee0347/mypy_boto3_apptest-1.35.93.tar.gz","yanked":false,"yanked_reason":null}],"1.36.0":[{"comment_text":"","digests":{"blake2b_256":"74a82ddcb5b2d586e60f860dd2b8ddc04981207947de2fbebe588034dccc9176","md5":"e97e1aef86f4ace13ac890f6c64776ef","sha256":"caa2d339c7bcecd941fee5cb00c71d80c1b0a6cef82e93faa4fdacdc104ca652"},"downloads":-1,"filename":"mypy_boto3_apptest-1.36.0-py3-none-any.whl","has_sig":false,"md5_digest":"e97e1aef86f4ace13ac890f6c64776ef","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":30565,"upload_time":"2025-01-15T21:48:47","upload_time_iso_8601":"2025-01-15T21:48:47.993695Z","url":"https://files.pythonhosted.org/packages/74/a8/2ddcb5b2d586e60f860dd2b8ddc04981207947de2fbebe588034dccc9176/mypy_boto3_apptest-1.36.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"732eaf518b2202fab78928895d5466d5e39177477cc7676c3c56ba494976cb00","md5":"a97ae58f5daf31d0ad4333d845a5ed0c","sha256":"52681934fe30dd0fcb1109e786bfff597719af364800d56d38bebf7fc9d939a2"},"downloads":-1,"filename":"mypy_boto3_apptest-1.36.0.tar.gz","has_sig":false,"md5_digest":"a97ae58f5daf31d0ad4333d845a5ed0c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":25295,"upload_time":"2025-01-15T21:48:49","upload_time_iso_8601":"2025-01-15T21:48:49.148135Z","url":"https://files.pythonhosted.org/packages/73/2e/af518b2202fab78928895d5466d5e39177477cc7676c3c56ba494976cb00/mypy_boto3_apptest-1.36.0.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"74a82ddcb5b2d586e60f860dd2b8ddc04981207947de2fbebe588034dccc9176","md5":"e97e1aef86f4ace13ac890f6c64776ef","sha256":"caa2d339c7bcecd941fee5cb00c71d80c1b0a6cef82e93faa4fdacdc104ca652"},"downloads":-1,"filename":"mypy_boto3_apptest-1.36.0-py3-none-any.whl","has_sig":false,"md5_digest":"e97e1aef86f4ace13ac890f6c64776ef","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.8","size":30565,"upload_time":"2025-01-15T21:48:47","upload_time_iso_8601":"2025-01-15T21:48:47.993695Z","url":"https://files.pythonhosted.org/packages/74/a8/2ddcb5b2d586e60f860dd2b8ddc04981207947de2fbebe588034dccc9176/mypy_boto3_apptest-1.36.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"732eaf518b2202fab78928895d5466d5e39177477cc7676c3c56ba494976cb00","md5":"a97ae58f5daf31d0ad4333d845a5ed0c","sha256":"52681934fe30dd0fcb1109e786bfff597719af364800d56d38bebf7fc9d939a2"},"downloads":-1,"filename":"mypy_boto3_apptest-1.36.0.tar.gz","has_sig":false,"md5_digest":"a97ae58f5daf31d0ad4333d845a5ed0c","packagetype":"sdist","python_version":"source","requires_python":">=3.8","size":25295,"upload_time":"2025-01-15T21:48:49","upload_time_iso_8601":"2025-01-15T21:48:49.148135Z","url":"https://files.pythonhosted.org/packages/73/2e/af518b2202fab78928895d5466d5e39177477cc7676c3c56ba494976cb00/mypy_boto3_apptest-1.36.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
