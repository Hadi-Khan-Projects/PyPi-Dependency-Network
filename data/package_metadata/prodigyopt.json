{"info":{"author":"Konstantin Mishchenko","author_email":"konsta.mish@gmail.com","bugtrack_url":null,"classifiers":["License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python :: 3"],"description":"# Prodigy: An Expeditiously Adaptive Parameter-Free Learner\n[![Downloads](https://static.pepy.tech/badge/prodigyopt)](https://pepy.tech/project/prodigyopt) [![Downloads](https://static.pepy.tech/badge/prodigyopt/month)](https://pepy.tech/project/prodigyopt)\n\nThis is the official repository used to run the experiments in the paper that proposed the Prodigy optimizer. The optimizer is implemented in PyTorch.\nThere is also a JAX version of [Prodigy in Optax](https://optax.readthedocs.io/en/latest/api/contrib.html#prodigy), which currently does not have the `slice_p` argument.\n\n**Prodigy: An Expeditiously Adaptive Parameter-Free Learner**  \n*K. Mishchenko, A. Defazio*  \nPaper: https://arxiv.org/pdf/2306.06101.pdf\n\n## Installation\nTo install the package, simply run\n```pip install prodigyopt```\n## How to use\nLet `net` be the neural network you want to train. Then, you can use the method as follows:\n```\nfrom prodigyopt import Prodigy\n# choose weight decay value based on your problem, 0 by default\n# set slice_p to 11 if you have limited memory, 1 by default\nopt = Prodigy(net.parameters(), lr=1., weight_decay=weight_decay, slice_p=slice_p)\n```\nNote that by default, Prodigy uses weight decay as in AdamW. \nIf you want it to use standard $\\ell_2$ regularization (as in Adam), use option `decouple=False`. \nWe recommend using `lr=1.` (default) for all networks. If you want to force the method to estimate a smaller or larger learning rate, \nit is better to change the value of `d_coef` (1.0 by default). Values of `d_coef` above 1, such as 2 or 10, \nwill force a larger estimate of the learning rate; set it to 0.5 or even 0.1 if you want a smaller learning rate.  \nStandard values of `weight_decay` to try are 0 (default in Prodigy), 0.001, 0.01 (default in AdamW), and 0.1.  \nUse values of `slice_p` larger than 1 to reduce the memory consumption. `slice_p=11` should give a good trade-off\n between accuracy of estimate learning rate and memory efficiency.\n\n\n## Scheduler \nAs a rule of thumb, we recommend either using no scheduler or using cosine annealing with the method:\n```\n# n_epoch is the total number of epochs to train the network\nscheduler = torch.optim.lr_scheduler.CosineAnnealingLR(opt, T_max=total_steps)\n```\nWe do not recommend using restarts in cosine annealing, so we suggest setting `T_max=total_steps`, where \n`total_steps` should be the number of times `scheduler.step()` is called. If you do use restarts, we highly\nrecommend setting `safeguard_warmup=True`.\n\nExtra care should be taken if you use linear warm-up at the beginning: \nThe method will see slow progress due to the initially small base learning rate, \nso it might overestimate `d`.\nTo avoid issues with warm-up, use option `safeguard_warmup=True`.  \n## Diffusion models\nBased on the interaction with some of the users, we recommend setting `safeguard_warmup=True`,\n `use_bias_correction=True`, and `weight_decay=0.01` when training diffusion models. \nSometimes, [it is helpful](https://github.com/konstmish/prodigy/issues/8) to set `betas=(0.9, 0.99)`.  \nIf the model is not training, try to keep track of `d` and if it remains too small, [it might be worth increasing `d0`](https://github.com/konstmish/prodigy/issues/27) to 1e-5 or even 1e-4. \nThat being said, the optimizer was mostly insensitive to `d0` in our other experiments.\n\n## Examples of using Prodigy \n\nSee [this Colab Notebook](https://colab.research.google.com/drive/1TrhEfI3stJ-yNp7_ZxUAtfWjj-Qe_Hym?usp=sharing) \nfor a toy example of how one can use Prodigy to train ResNet-18 on Cifar10 (test accuracy 80% after 20 epochs).  \nIf you are interested in sharing your experience, please consider creating a Colab Notebook and sharing it in the issues. \n\n## How to cite\nIf you find our work useful, please consider citing our paper.\n```\n@inproceedings{mishchenko2024prodigy,\n    title={Prodigy: An Expeditiously Adaptive Parameter-Free Learner},\n    author={Mishchenko, Konstantin and Defazio, Aaron},\n    booktitle={Forty-first International Conference on Machine Learning},\n    year={2024},\n    url={https://openreview.net/forum?id=JJpOssn0uP}\n}\n```\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/konstmish/prodigy","keywords":null,"license":null,"license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"prodigyopt","package_url":"https://pypi.org/project/prodigyopt/","platform":null,"project_url":"https://pypi.org/project/prodigyopt/","project_urls":{"Homepage":"https://github.com/konstmish/prodigy"},"provides_extra":null,"release_url":"https://pypi.org/project/prodigyopt/1.1.1/","requires_dist":null,"requires_python":">=3.6","summary":"An Adam-like optimizer for neural networks with adaptive estimation of learning rate","version":"1.1.1","yanked":false,"yanked_reason":null},"last_serial":26576557,"releases":{"1.0":[{"comment_text":"","digests":{"blake2b_256":"46436c1b6dfaf9a864c0f9c8bad0d20ac6aa2135775c0093fbb4f8bb947edc70","md5":"fadb9ad20c8c8ed2d0a21726492a77a5","sha256":"3ca9c44754949e344802fd14868007a05bf16fe4e025c39814e41b1491c783c9"},"downloads":-1,"filename":"prodigyopt-1.0-py3-none-any.whl","has_sig":false,"md5_digest":"fadb9ad20c8c8ed2d0a21726492a77a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":5535,"upload_time":"2023-06-12T01:13:35","upload_time_iso_8601":"2023-06-12T01:13:35.484609Z","url":"https://files.pythonhosted.org/packages/46/43/6c1b6dfaf9a864c0f9c8bad0d20ac6aa2135775c0093fbb4f8bb947edc70/prodigyopt-1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"dc0ea7660562219fef53c0fd2ddc0d0b904e09d4efb4399796d4dce8d1f2e3d5","md5":"229d11d840f7b1ade99a1163b25df1dd","sha256":"cdbbd99e836fa6eb90afa49f5eb1a7760d634a15976e77e3e8114349abe910ac"},"downloads":-1,"filename":"prodigyopt-1.0.tar.gz","has_sig":false,"md5_digest":"229d11d840f7b1ade99a1163b25df1dd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":5272,"upload_time":"2023-06-12T01:13:37","upload_time_iso_8601":"2023-06-12T01:13:37.377539Z","url":"https://files.pythonhosted.org/packages/dc/0e/a7660562219fef53c0fd2ddc0d0b904e09d4efb4399796d4dce8d1f2e3d5/prodigyopt-1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1":[{"comment_text":"","digests":{"blake2b_256":"9e8010f18e137cfc4b0b992aa0a91b405de408bda23c1b38647a56d2c8d47b84","md5":"832c5b420cc0cec3d03a8286a900a055","sha256":"31a3061e0f9e49d1121e639e7cfb867ab02b22ff668e34fdcba1773967e7af4c"},"downloads":-1,"filename":"prodigyopt-1.1-py3-none-any.whl","has_sig":false,"md5_digest":"832c5b420cc0cec3d03a8286a900a055","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7307,"upload_time":"2024-12-11T16:41:22","upload_time_iso_8601":"2024-12-11T16:41:22.753079Z","url":"https://files.pythonhosted.org/packages/9e/80/10f18e137cfc4b0b992aa0a91b405de408bda23c1b38647a56d2c8d47b84/prodigyopt-1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"9939cfc1496b9595b2d6fd577c7e209fee1bc5528864307c999a15836c4b97a4","md5":"3c90a051b68c30c07ef3be8bad8db8bf","sha256":"de8384e7a55d62319d3d750437e8e8dffeb290f655df2f64490be22ce1e7affa"},"downloads":-1,"filename":"prodigyopt-1.1.tar.gz","has_sig":false,"md5_digest":"3c90a051b68c30c07ef3be8bad8db8bf","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7117,"upload_time":"2024-12-11T16:41:23","upload_time_iso_8601":"2024-12-11T16:41:23.942192Z","url":"https://files.pythonhosted.org/packages/99/39/cfc1496b9595b2d6fd577c7e209fee1bc5528864307c999a15836c4b97a4/prodigyopt-1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"eb00e78760deec0b15d48525d9b05095271c671d6b8ca1eb08c710526e2a2c6e","md5":"e3f0dfc7b423be56e6da5a9db4418aaa","sha256":"82d123a154e0a69da12fc2a7bf7f724b2d5620aa28ce7919cbd4749ce3f9d3db"},"downloads":-1,"filename":"prodigyopt-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"e3f0dfc7b423be56e6da5a9db4418aaa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7360,"upload_time":"2024-12-18T15:09:18","upload_time_iso_8601":"2024-12-18T15:09:18.065421Z","url":"https://files.pythonhosted.org/packages/eb/00/e78760deec0b15d48525d9b05095271c671d6b8ca1eb08c710526e2a2c6e/prodigyopt-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"778d03fbd4f7ba4b592d4f7cb1440ddacca639708ec7b858afac8e5173b0916e","md5":"6d0ed763af8e03d7fca3c704a7aae717","sha256":"8f6998e303cb4857ca82deaba37fff355992b07ea55bc192dcbe5b2bb93e6bb6"},"downloads":-1,"filename":"prodigyopt-1.1.1.tar.gz","has_sig":false,"md5_digest":"6d0ed763af8e03d7fca3c704a7aae717","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7164,"upload_time":"2024-12-18T15:09:20","upload_time_iso_8601":"2024-12-18T15:09:20.391358Z","url":"https://files.pythonhosted.org/packages/77/8d/03fbd4f7ba4b592d4f7cb1440ddacca639708ec7b858afac8e5173b0916e/prodigyopt-1.1.1.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"eb00e78760deec0b15d48525d9b05095271c671d6b8ca1eb08c710526e2a2c6e","md5":"e3f0dfc7b423be56e6da5a9db4418aaa","sha256":"82d123a154e0a69da12fc2a7bf7f724b2d5620aa28ce7919cbd4749ce3f9d3db"},"downloads":-1,"filename":"prodigyopt-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"e3f0dfc7b423be56e6da5a9db4418aaa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":7360,"upload_time":"2024-12-18T15:09:18","upload_time_iso_8601":"2024-12-18T15:09:18.065421Z","url":"https://files.pythonhosted.org/packages/eb/00/e78760deec0b15d48525d9b05095271c671d6b8ca1eb08c710526e2a2c6e/prodigyopt-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"778d03fbd4f7ba4b592d4f7cb1440ddacca639708ec7b858afac8e5173b0916e","md5":"6d0ed763af8e03d7fca3c704a7aae717","sha256":"8f6998e303cb4857ca82deaba37fff355992b07ea55bc192dcbe5b2bb93e6bb6"},"downloads":-1,"filename":"prodigyopt-1.1.1.tar.gz","has_sig":false,"md5_digest":"6d0ed763af8e03d7fca3c704a7aae717","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":7164,"upload_time":"2024-12-18T15:09:20","upload_time_iso_8601":"2024-12-18T15:09:20.391358Z","url":"https://files.pythonhosted.org/packages/77/8d/03fbd4f7ba4b592d4f7cb1440ddacca639708ec7b858afac8e5173b0916e/prodigyopt-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
