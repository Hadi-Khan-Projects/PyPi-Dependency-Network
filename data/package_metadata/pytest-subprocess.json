{"info":{"author":"Andrzej Klajnert","author_email":"python@aklajnert.pl","bugtrack_url":null,"classifiers":["Development Status :: 5 - Production/Stable","Framework :: Pytest","Intended Audience :: Developers","License :: OSI Approved :: MIT License","Operating System :: OS Independent","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.13","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Programming Language :: Python :: Implementation :: CPython","Programming Language :: Python :: Implementation :: PyPy","Topic :: Software Development :: Testing"],"description":"\r\npytest-subprocess\r\n=================\r\n\r\n.. image:: https://img.shields.io/pypi/v/pytest-subprocess.svg\r\n    :target: https://pypi.org/project/pytest-subprocess\r\n    :alt: PyPI version\r\n\r\n.. image:: https://img.shields.io/pypi/pyversions/pytest-subprocess.svg\r\n    :target: https://pypi.org/project/pytest-subprocess\r\n    :alt: Python versions\r\n\r\n.. image:: https://readthedocs.org/projects/pytest-subprocess/badge/?version=latest\r\n   :target: https://pytest-subprocess.readthedocs.io/en/latest/?badge=latest\r\n   :alt: Documentation Status\r\n\r\nPytest plugin to fake subprocess.\r\n\r\n.. contents:: :local:\r\n\r\n.. include-start\r\n\r\nUsage\r\n=====\r\n\r\nThe plugin adds the ``fake_process`` fixture (and ``fp`` as an alias).\r\nIt can be used it to register subprocess results so you won't need to rely on\r\nthe real processes. The plugin hooks on the ``subprocess.Popen()``, which is\r\nthe base for other subprocess functions. That makes the ``subprocess.run()``,\r\n``subprocess.call()``, ``subprocess.check_call()`` and\r\n``subprocess.check_output()`` methods also functional.\r\n\r\nInstallation\r\n------------\r\n\r\nYou can install ``pytest-subprocess`` via `pip`_ from `PyPI`_::\r\n\r\n    $ pip install pytest-subprocess\r\n\r\n\r\nBasic usage\r\n-----------\r\n\r\nThe most important method is ``fp.register()``\r\n(or ``register_subprocess`` if you prefer to be more verbose), which\r\nallows defining the fake processes behavior.\r\n\r\n.. code-block:: python\r\n\r\n    def test_echo_null_byte(fp):\r\n        fp.register([\"echo\", \"-ne\", \"\\x00\"], stdout=bytes.fromhex(\"00\"))\r\n\r\n        process = subprocess.Popen(\r\n            [\"echo\", \"-ne\", \"\\x00\"],\r\n            stdout=subprocess.PIPE,\r\n        )\r\n        out, _ = process.communicate()\r\n\r\n        assert process.returncode == 0\r\n        assert out == b\"\\x00\"\r\n\r\nOptionally, the ``stdout`` and ``stderr`` parameters can be a list (or tuple)\r\nof lines to be joined together with a trailing ``os.linesep`` on each line.\r\n\r\n.. code-block:: python\r\n\r\n    def test_git(fp):\r\n        fp.register([\"git\", \"branch\"], stdout=[\"* fake_branch\", \"  master\"])\r\n\r\n        process = subprocess.Popen(\r\n            [\"git\", \"branch\"],\r\n            stdout=subprocess.PIPE,\r\n            universal_newlines=True,\r\n        )\r\n        out, _ = process.communicate()\r\n\r\n        assert process.returncode == 0\r\n        assert out == \"* fake_branch\\n  master\\n\"\r\n\r\nPassing input\r\n-------------\r\n\r\nBy default, if you use ``input`` argument to the ``Popen.communicate()``\r\nmethod, it won't crash, but also won't do anything useful. By passing\r\na function as ``stdin_callable`` argument for the\r\n``fp.register()`` method you can specify the behavior\r\nbased on the input. The function shall accept one argument, which will be\r\nthe input data. If the function will return a dictionary with ``stdout`` or\r\n``stderr`` keys, its value will be appended to according stream.\r\n\r\n.. code-block:: python\r\n\r\n    def test_pass_input(fp):\r\n        def stdin_function(input):\r\n            return {\r\n                \"stdout\": \"This input was added: {data}\".format(\r\n                    data=input.decode()\r\n                )\r\n            }\r\n\r\n        fp.register(\r\n            [\"command\"],\r\n            stdout=[b\"Just stdout\"],\r\n            stdin_callable=stdin_function,\r\n        )\r\n\r\n        process = subprocess.Popen(\r\n            [\"command\"],\r\n            stdin=subprocess.PIPE,\r\n            stdout=subprocess.PIPE,\r\n        )\r\n        out, _ = process.communicate(input=b\"sample input\\n\")\r\n\r\n        assert out.splitlines() == [\r\n            b\"Just stdout\",\r\n            b\"This input was added: sample input\",\r\n        ]\r\n\r\nUnregistered commands\r\n---------------------\r\n\r\nBy default, when the ``fp`` fixture is being used, any attempt to\r\nrun subprocess that has not been registered will raise\r\nthe ``ProcessNotRegisteredError`` exception. To allow it, use\r\n``fp.allow_unregistered(True)``, which will execute all unregistered\r\nprocesses with real ``subprocess``, or use\r\n``fp.pass_command(\"command\")`` to allow just a single command.\r\n\r\n.. code-block:: python\r\n\r\n    def test_real_process(fp):\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            # this will fail, as \"ls\" command is not registered\r\n            subprocess.call(\"ls\")\r\n\r\n        fp.pass_command(\"ls\")\r\n        # now it should be fine\r\n        assert subprocess.call(\"ls\") == 0\r\n\r\n        # allow all commands to be called by real subprocess\r\n        fp.allow_unregistered(True)\r\n        assert subprocess.call([\"ls\", \"-l\"]) == 0\r\n\r\n\r\nDiffering results\r\n-----------------\r\n\r\nEach ``register()`` or ``pass_command()`` method call will register\r\nonly one command execution. You can call those methods multiple times, to\r\nchange the faked output on each subprocess run. When you call subprocess more\r\nwill be raised. To prevent that, call ``fp.keep_last_process(True)``,\r\nwhich will keep the last registered process forever.\r\n\r\n.. code-block:: python\r\n\r\n    def test_different_output(fp):\r\n        # register process with output changing each execution\r\n        fp.register(\"test\", stdout=\"first execution\")\r\n        # the second execution will return non-zero exit code\r\n        fp.register(\"test\", stdout=\"second execution\", returncode=1)\r\n\r\n        assert subprocess.check_output(\"test\") == b\"first execution\"\r\n        second_process = subprocess.run(\"test\", stdout=subprocess.PIPE)\r\n        assert second_process.stdout == b\"second execution\"\r\n        assert second_process.returncode == 1\r\n\r\n        # 3rd time shall raise an exception\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            subprocess.check_call(\"test\")\r\n\r\n        # now, register two processes once again,\r\n        # but the last one will be kept forever\r\n        fp.register(\"test\", stdout=\"first execution\")\r\n        fp.register(\"test\", stdout=\"second execution\")\r\n        fp.keep_last_process(True)\r\n\r\n        # now the processes can be called forever\r\n        assert subprocess.check_output(\"test\") == b\"first execution\"\r\n        assert subprocess.check_output(\"test\") == b\"second execution\"\r\n        assert subprocess.check_output(\"test\") == b\"second execution\"\r\n        assert subprocess.check_output(\"test\") == b\"second execution\"\r\n\r\n\r\nUsing callbacks\r\n---------------\r\n\r\nYou can pass a function as ``callback`` argument to the ``register()``\r\nmethod which will be executed instead of the real subprocess. The callback function\r\ncan raise exceptions which will be interpreted in tests as an exception raised\r\nby the subprocess. The fixture will pass ``FakePopen`` class instance into the\r\ncallback function, that can be used to change the return code or modify output\r\nstreams.\r\n\r\n.. code-block:: python\r\n\r\n    def callback_function(process):\r\n        process.returncode = 1\r\n        raise PermissionError(\"exception raised by subprocess\")\r\n\r\n\r\n    def test_raise_exception(fp):\r\n        fp.register([\"test\"], callback=callback_function)\r\n\r\n        with pytest.raises(\r\n            PermissionError, match=\"exception raised by subprocess\"\r\n        ):\r\n            process = subprocess.Popen([\"test\"])\r\n            process.wait()\r\n\r\n        assert process.returncode == 1\r\n\r\nIt is possible to pass additional keyword arguments into ``callback`` by using\r\nthe ``callback_kwargs`` argument:\r\n\r\n.. code-block:: python\r\n\r\n    def callback_function_with_kwargs(process, return_code):\r\n        process.returncode = return_code\r\n\r\n\r\n    def test_callback_with_arguments(fp):\r\n        return_code = 127\r\n\r\n        fp.register(\r\n            [\"test\"],\r\n            callback=callback_function_with_kwargs,\r\n            callback_kwargs={\"return_code\": return_code},\r\n        )\r\n\r\n        process = subprocess.Popen([\"test\"])\r\n        process.wait()\r\n\r\n        assert process.returncode == return_code\r\n\r\nAs a context manager\r\n--------------------\r\n\r\nThe ``fp`` fixture provides ``context()`` method that allows us to\r\nuse it as a context manager. It can be used to limit the scope when a certain\r\ncommand is allowed, e.g. to make sure that the code doesn't want to execute\r\nit somewhere else.\r\n\r\n.. code-block:: python\r\n\r\n    def test_context_manager(fp):\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            # command not registered, so will raise an exception\r\n            subprocess.check_call(\"test\")\r\n\r\n        with fp.context() as nested_process:\r\n            nested_process.register(\"test\", occurrences=3)\r\n            # now, we can call the command 3 times without error\r\n            assert subprocess.check_call(\"test\") == 0\r\n            assert subprocess.check_call(\"test\") == 0\r\n\r\n        # the command was called 2 times, so one occurrence left, but since the\r\n        # context manager has been left, it is not registered anymore\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            subprocess.check_call(\"test\")\r\n\r\nNon-exact command matching\r\n--------------------------\r\n\r\nIf you need to catch a command with some non-predictable elements, like a path\r\nto a randomly-generated file name, you can use ``fake_subprocess.any()`` for\r\nthat purpose. The number of arguments that should be matched can be controlled\r\nby ``min`` and ``max`` arguments. To use ``fake_subprocess.any()`` you need\r\nto define the command as a ``tuple`` or ``list``. The matching will work even\r\nif the subprocess command will be called with a string argument.\r\n\r\n.. code-block:: python\r\n\r\n    def test_non_exact_matching(fp):\r\n        # define a command that will take any number of arguments\r\n        fp.register([\"ls\", fp.any()])\r\n        assert subprocess.check_call(\"ls -lah\") == 0\r\n\r\n        # `fake_subprocess.any()` is OK even with no arguments\r\n        fp.register([\"ls\", fp.any()])\r\n        assert subprocess.check_call(\"ls\") == 0\r\n\r\n        # but it can force a minimum amount of arguments\r\n        fp.register([\"cp\", fp.any(min=2)])\r\n\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            # only one argument is used, so registered command won't match\r\n            subprocess.check_call(\"cp /source/dir\")\r\n        # but two arguments will be fine\r\n        assert subprocess.check_call(\"cp /source/dir /tmp/random-dir\") == 0\r\n\r\n        # the `max` argument can be used to limit maximum amount of arguments\r\n        fp.register([\"cd\", fp.any(max=1)])\r\n\r\n        with pytest.raises(fp.exceptions.ProcessNotRegisteredError):\r\n            # cd with two arguments won't match with max=1\r\n            subprocess.check_call(\"cd ~/ /tmp\")\r\n        # but any single argument is fine\r\n        assert subprocess.check_call(\"cd ~/\") == 0\r\n\r\n        # `min` and `max` can be used together\r\n        fp.register([\"my_app\", fp.any(min=1, max=2)])\r\n        assert subprocess.check_call([\"my_app\", \"--help\"]) == 0\r\n\r\n\r\nYou can also specify just the command name, and have it match any command with\r\nthe same name, regardless of the location. This is accomplished with\r\n``fake_subprocess.program(\"name\")``.\r\n\r\n.. code-block:: python\r\n\r\n    def test_any_matching_program(fp):\r\n        # define a command that can come from anywhere\r\n        fp.register([fp.program(\"ls\")])\r\n        assert subprocess.check_call(\"/bin/ls\") == 0\r\n\r\n\r\nCheck if process was called\r\n---------------------------\r\n\r\nYou may want to simply check if a certain command was called, you can do this\r\nby accessing ``fp.calls``, where all commands are stored as-called.\r\nYou can also use a utility function ``fp.call_count()`` to see\r\nhow many a command has been called. The latter supports ``fp.any()``.\r\n\r\n.. code-block:: python\r\n\r\n    def test_check_if_called(fp):\r\n        fp.keep_last_process(True)\r\n        # any command can be called\r\n        fp.register([fp.any()])\r\n\r\n        subprocess.check_call([\"cp\", \"/tmp/source\", \"/source\"])\r\n        subprocess.check_call([\"cp\", \"/source\", \"/destination\"])\r\n        subprocess.check_call([\"cp\", \"/source\", \"/other/destination\"])\r\n\r\n        # you can check if command is in ``fp.calls``\r\n        assert [\"cp\", \"/tmp/source\", \"/source\"] in fp.calls\r\n        assert [\"cp\", \"/source\", \"/destination\"] in fp.calls\r\n        assert [\"cp\", \"/source\", \"/other/destination\"] in fp.calls\r\n\r\n        # or check how many it was called, possibly with wildcard arguments\r\n        assert fp.call_count([\"cp\", \"/source\", \"/destination\"]) == 1\r\n\r\n        # with ``call_count()`` you don't need to use the same type as\r\n        # the subprocess was called\r\n        assert fp.call_count(\"cp /tmp/source /source\") == 1\r\n\r\n        # can be used with ``fp.any()`` to match more calls\r\n        assert fp.call_count([\"cp\", fp.any()]) == 3\r\n\r\n\r\nCheck Popen arguments\r\n---------------------\r\n\r\nYou can use the recorded calls functionality to introspect the keyword\r\narguments that were passed to `Popen`.\r\n\r\n.. code-block:: python\r\n\r\n    def test_process_recorder_kwargs(fp):\r\n        fp.keep_last_process(True)\r\n        recorder = fp.register([\"test_script\", fp.any()])\r\n\r\n        subprocess.run(\r\n            (\"test_script\", \"arg1\"), env={\"foo\": \"bar\"}, cwd=\"/home/user\"\r\n        )\r\n        subprocess.Popen(\r\n            [\"test_script\", \"arg2\"],\r\n            env={\"foo\": \"bar1\"},\r\n            executable=\"test_script\",\r\n            shell=True,\r\n        )\r\n\r\n        assert recorder.calls[0].args == (\"test_script\", \"arg1\")\r\n        assert recorder.calls[0].kwargs == {\r\n            \"cwd\": \"/home/user\",\r\n            \"env\": {\"foo\": \"bar\"},\r\n        }\r\n        assert recorder.calls[1].args == [\"test_script\", \"arg2\"]\r\n        assert recorder.calls[1].kwargs == {\r\n            \"env\": {\"foo\": \"bar1\"},\r\n            \"executable\": \"test_script\",\r\n            \"shell\": True,\r\n        }\r\n\r\nHandling signals\r\n----------------\r\n\r\nYou can use standard ``kill()``, ``terminate()`` or ``send_signal()`` methods\r\nin ``Popen`` instances. There is an additional ``received_signals()`` method\r\nto get a tuple of all signals received by the process. It is also possible to\r\nset up an optional callback function for signals.\r\n\r\n.. code-block:: python\r\n\r\n    import signal\r\n\r\n\r\n    def test_signal_callback(fp):\r\n        \"\"\"Test that signal callbacks work.\"\"\"\r\n\r\n        def callback(process, sig):\r\n            if sig == signal.SIGTERM:\r\n                process.returncode = -1\r\n\r\n        # the `register()` method returns a ProgressRecorder object, where\r\n        # all future matching `Popen()` instances will be appended\r\n        process_recorder = fp.register(\"test\", signal_callback=callback)\r\n\r\n        process = subprocess.Popen(\"test\")\r\n        process.send_signal(signal.SIGTERM)\r\n        process.wait()\r\n\r\n        assert process.returncode == -1\r\n        assert process.received_signals() == (signal.SIGTERM,)\r\n\r\n        # the instance appended to `register()` output is the `Popen` instance\r\n        # created later\r\n        assert process_recorder.first_call is process\r\n\r\n\r\nAsyncio support\r\n---------------\r\n\r\nThe plugin now supports asyncio and works for ``asyncio.create_subprocess_shell``\r\nand ``asyncio.create_subprocess_exec``:\r\n\r\n.. code-block:: python\r\n\r\n    @pytest.mark.asyncio\r\n    async def test_basic_usage(\r\n        fp,\r\n    ):\r\n        fp.register(\r\n            [\"some-command-that-is-definitely-unavailable\"], returncode=500\r\n        )\r\n\r\n        process = await asyncio.create_subprocess_shell(\r\n            \"some-command-that-is-definitely-unavailable\"\r\n        )\r\n        returncode = await process.wait()\r\n\r\n        assert process.returncode == returncode\r\n        assert process.returncode == 500\r\n\r\n.. _`pip`: https://pypi.org/project/pip/\r\n.. _`PyPI`: https://pypi.org/project\r\n\r\n\r\n.. include-end\r\n\r\nDocumentation\r\n-------------\r\n\r\nFor full documentation, including API reference, please see https://pytest-subprocess.readthedocs.io/en/latest/.\r\n\r\nContributing\r\n------------\r\nContributions are very welcome. Tests can be run with `tox`_, please ensure\r\nthe coverage at least stays the same before you submit a pull request.\r\n\r\nLicense\r\n-------\r\n\r\nDistributed under the terms of the `MIT`_ license, \"pytest-subprocess\" is free and open source software\r\n\r\n\r\nIssues\r\n------\r\n\r\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\r\n\r\n----\r\n\r\nThis `pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.\r\n\r\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\r\n.. _`@hackebrot`: https://github.com/hackebrot\r\n.. _`MIT`: http://opensource.org/licenses/MIT\r\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\r\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\r\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\r\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\r\n.. _`file an issue`: https://github.com/aklajnert/pytest-subprocess/issues\r\n.. _`pytest`: https://github.com/pytest-dev/pytest\r\n.. _`tox`: https://tox.readthedocs.io/en/latest/\r\n\r\nHistory\r\n=======\r\n\r\n1.5.3 (2025-01-04)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#171 <https://github.com/aklajnert/pytest-subprocess/pull/171>`_, `#178 <https://github.com/aklajnert/pytest-subprocess/pull/178>`_: Allow to access keyword arguments passed to Popen.\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#180 <https://github.com/aklajnert/pytest-subprocess/pull/180>`_: Fixed an incorrect wait timeout calculation.\r\n* `#170 <https://github.com/aklajnert/pytest-subprocess/pull/170>`_: Wrapped ProcessDispatcher.dispatch into FakePopenWrapper as it was causing TypeError when Popen is used as a type.\r\n* `#169 <https://github.com/aklajnert/pytest-subprocess/pull/169>`_: Get rid of using thread in AsyncFakePopen as it causes thread.join() to hang indefinitely.\r\n\r\n1.5.2 (2024-07-24)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#162 <https://github.com/aklajnert/pytest-subprocess/pull/162>`_: Include tests (and docs) and sdist correctly, and stop installing them to site-packages.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#163 <https://github.com/aklajnert/pytest-subprocess/pull/163>`_: Add support for Python 3.12.\r\n\r\n1.5.1 (2024-07-23)  \r\n------------------\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#160 <https://github.com/aklajnert/pytest-subprocess/pull/160>`_: Changed pytest entrypoint to avoid error while loading plugin with `-p` argument.\r\n* `#128 <https://github.com/aklajnert/pytest-subprocess/pull/128>`_: Add `tests` directory to sdist.\r\n\r\n1.5.0 (2023-01-28)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#109 <https://github.com/aklajnert/pytest-subprocess/pull/109>`_: Match also `os.PathLike`.\r\n* `#105 <https://github.com/aklajnert/pytest-subprocess/pull/105>`_: Add program matcher.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#110 <https://github.com/aklajnert/pytest-subprocess/pull/110>`_: Produce TypeError on Win Py<3.8 for Path args.\r\n\r\n1.4.2 (2022-10-02)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#87 <https://github.com/aklajnert/pytest-subprocess/pull/87>`_: Add support for Python 3.11.\r\n* `#80 <https://github.com/aklajnert/pytest-subprocess/pull/80>`_, `#86 <https://github.com/aklajnert/pytest-subprocess/pull/86>`_: The `register()` method returns an auxiliary object that will contain all matching `FakePopen` instances.\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#93 <https://github.com/aklajnert/pytest-subprocess/pull/93>`_: Raise callback exceptions on `communicate()` calls.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#97 <https://github.com/aklajnert/pytest-subprocess/pull/97>`_: Fixed warnings in tests, treat warnings as errors.\r\n* `#91 <https://github.com/aklajnert/pytest-subprocess/pull/91>`_: Use `sys.executable` instead just `\"python\"` in tests while invoking python subprocess.\r\n* `#90 <https://github.com/aklajnert/pytest-subprocess/pull/90>`_: Fix documentation build, add CI check for it.\r\n\r\n1.4.1 (2022-02-09)  \r\n------------------\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#74 <https://github.com/aklajnert/pytest-subprocess/pull/74>`_: Add ``fp`` alias for the fixture, and ``register`` for the ``regisiter_subprocess``.\r\n\r\n1.4.0 (2022-01-23)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#71 <https://github.com/aklajnert/pytest-subprocess/pull/71>`_: Add support for stdin with asyncio.\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#68 <https://github.com/aklajnert/pytest-subprocess/pull/68>`_: Make `stdout` and `stderr` an `asyncio.StreamReader` instance when using asyncio functions.\r\n* `#63 <https://github.com/aklajnert/pytest-subprocess/pull/63>`_, `#67 <https://github.com/aklajnert/pytest-subprocess/pull/67>`_: Add missing items to `asyncio.subprocess`.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#69 <https://github.com/aklajnert/pytest-subprocess/pull/69>`_: Extracted code into separate files to improve navigation.\r\n\r\n1.3.2 (2021-11-07)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#61 <https://github.com/aklajnert/pytest-subprocess/pull/61>`_: Fixed behavior of ``asyncio.create_subproess_exec()``.\r\n\r\n1.3.1 (2021-11-01)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#58 <https://github.com/aklajnert/pytest-subprocess/pull/58>`_: Correctly handle file stream output.\r\n\r\n1.3.0 (2021-10-24)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#55 <https://github.com/aklajnert/pytest-subprocess/pull/55>`_: Add support for ``terminate()``, ``kill()``, ``send_signal()``.\r\n\r\n1.2.0 (2021-10-09)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#49 <https://github.com/aklajnert/pytest-subprocess/pull/49>`_, `#52 <https://github.com/aklajnert/pytest-subprocess/pull/52>`_: Add support for ``asyncio``.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#50 <https://github.com/aklajnert/pytest-subprocess/pull/50>`_: Change docs theme.\r\n\r\n1.1.2 (2021-07-17)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#47 <https://github.com/aklajnert/pytest-subprocess/pull/47>`_: Prevent `allow_unregistered()` and `keep_last_process()` from affecting other tests.\r\n\r\n1.1.1 (2021-06-18)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#43 <https://github.com/aklajnert/pytest-subprocess/pull/43>`_: Wait for callback thread to finish when calling ``communicate()``.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#42 <https://github.com/aklajnert/pytest-subprocess/pull/42>`_: Fix type annotations for `register_subprocess()`.\r\n\r\n1.1.0 (2021-04-18)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#37 <https://github.com/aklajnert/pytest-subprocess/pull/37>`_: Preserve original command in `proc.args` to prevent leaking the internal `Command` type.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#38 <https://github.com/aklajnert/pytest-subprocess/pull/38>`_: Switched CI from Azure Pipelines to GitHub Actions.\r\n* `#35 <https://github.com/aklajnert/pytest-subprocess/pull/35>`_: Drop support for python 3.4 and 3.5. Move type annotations from `.pyi` files into sources.\r\n\r\n1.0.1 (2021-03-20)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#34 <https://github.com/aklajnert/pytest-subprocess/pull/34>`_: Prevent appending newlines to outputs unless defined as list/tuple.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#32 <https://github.com/aklajnert/pytest-subprocess/pull/32>`_: Make the ``Command`` class iterable.\r\n\r\n1.0.0 (2020-08-22)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#29 <https://github.com/aklajnert/pytest-subprocess/pull/29>`_: Remember subprocess calls to check if expected commands were executed.\r\n* `#28 <https://github.com/aklajnert/pytest-subprocess/pull/28>`_: Allow to match a command with variable arguments (non-exact matching).\r\n\r\n0.1.5 (2020-06-19)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#26 <https://github.com/aklajnert/pytest-subprocess/pull/26>`_: `encoding` and `errors` arguments will properly trigger `text` mode.\r\n\r\n0.1.4 (2020-04-28)  \r\n------------------\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#22 <https://github.com/aklajnert/pytest-subprocess/pull/22>`_: The `returncode` will not be ignored when `callback` is used.\r\n* `#21 <https://github.com/aklajnert/pytest-subprocess/pull/21>`_: The exception raised from callback will take precedence over those from subprocess.\r\n* `#20 <https://github.com/aklajnert/pytest-subprocess/pull/20>`_: Registering process will be now consistent regardless of the command type.\r\n* `#19 <https://github.com/aklajnert/pytest-subprocess/pull/19>`_: Fixed crash for stderr redirect with an empty stream definition.\r\n\r\n0.1.3 (2020-03-04)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#13 <https://github.com/aklajnert/pytest-subprocess/pull/13>`_: Allow passing keyword arguments into callbacks.\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#12 <https://github.com/aklajnert/pytest-subprocess/pull/12>`_: Properly raise exceptions from callback functions.\r\n\r\nDocumentation changes  \r\n~~~~~~~~~~~~~~~~~~~~~\r\n* `#15 <https://github.com/aklajnert/pytest-subprocess/pull/15>`_: Add documentation chapter about the callback functions.\r\n\r\n0.1.2 (2020-01-17)  \r\n------------------\r\n\r\nFeatures  \r\n~~~~~~~~\r\n* `#3 <https://github.com/aklajnert/pytest-subprocess/pull/3>`_: Add basic support for process input.\r\n\r\nBug fixes  \r\n~~~~~~~~~\r\n* `#5 <https://github.com/aklajnert/pytest-subprocess/pull/5>`_: Make ``wait()`` method to raise ``TimeoutError`` after the desired time will elapse.\r\n\r\nDocumentation changes  \r\n~~~~~~~~~~~~~~~~~~~~~\r\n* `#7 <https://github.com/aklajnert/pytest-subprocess/pull/7>`_, `#8 <https://github.com/aklajnert/pytest-subprocess/pull/8>`_, `#9 <https://github.com/aklajnert/pytest-subprocess/pull/9>`_: Create Sphinx documentation.\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#10 <https://github.com/aklajnert/pytest-subprocess/pull/10>`_:  Switch from ``tox`` to ``nox`` for running tests and tasks.\r\n* `#4 <https://github.com/aklajnert/pytest-subprocess/pull/4>`_: Add classifier for Python 3.9. Update CI config to test also on that interpreter version.\r\n\r\n0.1.1 (2019-11-24)  \r\n------------------\r\n\r\nOther changes  \r\n~~~~~~~~~~~~~\r\n* `#1 <https://github.com/aklajnert/pytest-subprocess/pull/1>`_, `#2 <https://github.com/aklajnert/pytest-subprocess/pull/2>`_: Enable support for Python 3.4, add CI tests for that version.\r\n\r\n0.1.0 (2019-11-23)  \r\n------------------\r\n\r\nInitial release  \r\n","description_content_type":null,"docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":null,"keywords":null,"license":"MIT","license_expression":null,"license_files":null,"maintainer":"Andrzej Klajnert","maintainer_email":"python@aklajnert.pl","name":"pytest-subprocess","package_url":"https://pypi.org/project/pytest-subprocess/","platform":null,"project_url":"https://pypi.org/project/pytest-subprocess/","project_urls":{"Documentation":"https://pytest-subprocess.readthedocs.io","Source":"https://github.com/aklajnert/pytest-subprocess","Tracker":"https://github.com/aklajnert/pytest-subprocess/issues"},"provides_extra":["test","dev","docs"],"release_url":"https://pypi.org/project/pytest-subprocess/1.5.3/","requires_dist":["pytest>=4.0.0","pytest>=4.0; extra == \"test\"","docutils>=0.12; extra == \"test\"","Pygments>=2.0; extra == \"test\"","pytest-rerunfailures; extra == \"test\"","pytest-asyncio>=0.15.1; extra == \"test\"","pytest-timeout; extra == \"test\"","anyio; extra == \"test\"","nox; extra == \"dev\"","changelogd; extra == \"dev\"","sphinx; extra == \"docs\"","furo; extra == \"docs\"","sphinxcontrib-napoleon; extra == \"docs\"","sphinx-autodoc-typehints; extra == \"docs\"","changelogd; extra == \"docs\""],"requires_python":">=3.6","summary":"A plugin to fake subprocess for pytest","version":"1.5.3","yanked":false,"yanked_reason":null},"last_serial":26784819,"releases":{"0.1.0":[{"comment_text":"","digests":{"blake2b_256":"31f8d79a00f691083acb9f34711334fc25af2d57e8a809183e552280c0ddabe4","md5":"07e123da7be91718e0efeed10d1ed26c","sha256":"e488cd9fa8df2c8fec6920676feda4d121337f94139ddf1a2bbba6bda11c700a"},"downloads":-1,"filename":"pytest_subprocess-0.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"07e123da7be91718e0efeed10d1ed26c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.5","size":13579,"upload_time":"2019-11-23T19:53:03","upload_time_iso_8601":"2019-11-23T19:53:03.181272Z","url":"https://files.pythonhosted.org/packages/31/f8/d79a00f691083acb9f34711334fc25af2d57e8a809183e552280c0ddabe4/pytest_subprocess-0.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a258686a887e6aa39c529d1856ef1f46e1ec5acca56f3edd45e1b05bf4192fba","md5":"102611c4ebe0eb72748e39ad2998ec6c","sha256":"c5db26486c9cc12fda730278bab45fba5b26b5e086b4949f2d07d6c8e3eb0c32"},"downloads":-1,"filename":"pytest-subprocess-0.1.0.tar.gz","has_sig":false,"md5_digest":"102611c4ebe0eb72748e39ad2998ec6c","packagetype":"sdist","python_version":"source","requires_python":">=3.5","size":13874,"upload_time":"2019-11-23T19:53:05","upload_time_iso_8601":"2019-11-23T19:53:05.881348Z","url":"https://files.pythonhosted.org/packages/a2/58/686a887e6aa39c529d1856ef1f46e1ec5acca56f3edd45e1b05bf4192fba/pytest-subprocess-0.1.0.tar.gz","yanked":false,"yanked_reason":null}],"0.1.1":[{"comment_text":"","digests":{"blake2b_256":"d36a4c828bd7b0939969967abf72a48e5c6f2fef20e3e8a6770dca1f967f88bc","md5":"b6a7bf8bf0c33ab177d38c3719422a5d","sha256":"de9a89e4b209e1d533e2413d9803890728a37299e06ee0ccf2ea63c616d6a472"},"downloads":-1,"filename":"pytest_subprocess-0.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"b6a7bf8bf0c33ab177d38c3719422a5d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":9717,"upload_time":"2019-11-24T09:39:39","upload_time_iso_8601":"2019-11-24T09:39:39.315452Z","url":"https://files.pythonhosted.org/packages/d3/6a/4c828bd7b0939969967abf72a48e5c6f2fef20e3e8a6770dca1f967f88bc/pytest_subprocess-0.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2c03894efdd1cc4a16f934e6728b8fc3989d9961fec672c088d22703637ea0d8","md5":"42b2251dbd603dc56fd0777e0d4644c4","sha256":"f90893109088bbe4d97a9303182287c8f33dc0d94d7b2cf2535516e2343dff7b"},"downloads":-1,"filename":"pytest-subprocess-0.1.1.tar.gz","has_sig":false,"md5_digest":"42b2251dbd603dc56fd0777e0d4644c4","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":10790,"upload_time":"2019-11-24T09:39:41","upload_time_iso_8601":"2019-11-24T09:39:41.105773Z","url":"https://files.pythonhosted.org/packages/2c/03/894efdd1cc4a16f934e6728b8fc3989d9961fec672c088d22703637ea0d8/pytest-subprocess-0.1.1.tar.gz","yanked":false,"yanked_reason":null}],"0.1.2":[{"comment_text":"","digests":{"blake2b_256":"c1bb52fc5908dc02494a63cddfb6d00e37aec94e71186c751b65010034d70e14","md5":"cce9281112ba4f698575041d32d7b2c6","sha256":"f43b73cca81dd25525ea09230561d32bf9c19193564e32adb9d99e9b93aec196"},"downloads":-1,"filename":"pytest_subprocess-0.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"cce9281112ba4f698575041d32d7b2c6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":27895,"upload_time":"2020-01-17T17:51:50","upload_time_iso_8601":"2020-01-17T17:51:50.341814Z","url":"https://files.pythonhosted.org/packages/c1/bb/52fc5908dc02494a63cddfb6d00e37aec94e71186c751b65010034d70e14/pytest_subprocess-0.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"8e004143a1e46b621e25d679a3eb68e81a36735a2a652cab5cc095c2fd293d49","md5":"8de552d86902f277752915a519635137","sha256":"b6c91060a36d3bbc65c84d84f9223546fad3667c2b62a744baf257f100a3a8ad"},"downloads":-1,"filename":"pytest-subprocess-0.1.2.tar.gz","has_sig":false,"md5_digest":"8de552d86902f277752915a519635137","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":29005,"upload_time":"2020-01-17T17:51:52","upload_time_iso_8601":"2020-01-17T17:51:52.113030Z","url":"https://files.pythonhosted.org/packages/8e/00/4143a1e46b621e25d679a3eb68e81a36735a2a652cab5cc095c2fd293d49/pytest-subprocess-0.1.2.tar.gz","yanked":false,"yanked_reason":null}],"0.1.3":[{"comment_text":"","digests":{"blake2b_256":"027b6db38a5a4b0520fc58f714bddefdba569aa4b5ff3064d7ce19c69cd07244","md5":"b63ed8fa1231fcee447c4d90291b5cdd","sha256":"3dea1ac447a79bab717b6a492effa42fbd8b62f1c0ce4ba69b2abfaac9a925c6"},"downloads":-1,"filename":"pytest_subprocess-0.1.3-py3-none-any.whl","has_sig":false,"md5_digest":"b63ed8fa1231fcee447c4d90291b5cdd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":12106,"upload_time":"2020-03-04T08:03:23","upload_time_iso_8601":"2020-03-04T08:03:23.937692Z","url":"https://files.pythonhosted.org/packages/02/7b/6db38a5a4b0520fc58f714bddefdba569aa4b5ff3064d7ce19c69cd07244/pytest_subprocess-0.1.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4aefedda20f91c23d439569e19a68ac6e020bda223d995325e563a78eabcb3f1","md5":"ed4d52b1bb7ee2725fb82c23a2b2b723","sha256":"2ccec855ab1458e84c03cfd45afc068c182d05912a5658bfdd03b2779f476143"},"downloads":-1,"filename":"pytest-subprocess-0.1.3.tar.gz","has_sig":false,"md5_digest":"ed4d52b1bb7ee2725fb82c23a2b2b723","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":15433,"upload_time":"2020-03-04T08:03:25","upload_time_iso_8601":"2020-03-04T08:03:25.968266Z","url":"https://files.pythonhosted.org/packages/4a/ef/edda20f91c23d439569e19a68ac6e020bda223d995325e563a78eabcb3f1/pytest-subprocess-0.1.3.tar.gz","yanked":false,"yanked_reason":null}],"0.1.4":[{"comment_text":"","digests":{"blake2b_256":"0af2872a5f06009979c642dddd37a6a73bfcc0cdd5e8b6ea47adcf0008b87e06","md5":"cbe885276febfcd95f4ac937819e326d","sha256":"bf3bfc88f59496830efd161e679435516815ae135e7bdc1d6f1025561d614d1b"},"downloads":-1,"filename":"pytest_subprocess-0.1.4-py3-none-any.whl","has_sig":false,"md5_digest":"cbe885276febfcd95f4ac937819e326d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":12297,"upload_time":"2020-04-28T07:48:12","upload_time_iso_8601":"2020-04-28T07:48:12.114661Z","url":"https://files.pythonhosted.org/packages/0a/f2/872a5f06009979c642dddd37a6a73bfcc0cdd5e8b6ea47adcf0008b87e06/pytest_subprocess-0.1.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"94e8da274bfedc947a84d3d79925a5329777af81a48c9bbd1a44001a7ecf2121","md5":"6a190ecff40b4a2f7308b9a30783246d","sha256":"929791c6a301aed3fd13a55423a0132662b5a8acc42f596bb0ff8522ef77833f"},"downloads":-1,"filename":"pytest-subprocess-0.1.4.tar.gz","has_sig":false,"md5_digest":"6a190ecff40b4a2f7308b9a30783246d","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":15893,"upload_time":"2020-04-28T07:48:13","upload_time_iso_8601":"2020-04-28T07:48:13.604826Z","url":"https://files.pythonhosted.org/packages/94/e8/da274bfedc947a84d3d79925a5329777af81a48c9bbd1a44001a7ecf2121/pytest-subprocess-0.1.4.tar.gz","yanked":false,"yanked_reason":null}],"0.1.5":[{"comment_text":"","digests":{"blake2b_256":"a25e64ba5c8c02faffefdd1cdfb10f8f1bd7c977a03c6479eb76afe7e1cefa61","md5":"ab877fa85a1e90ebe602aa9007a2fa50","sha256":"ad82af175c12308de7174af11700e2e25b01d945fa8215186f539ee206a04090"},"downloads":-1,"filename":"pytest_subprocess-0.1.5-py3-none-any.whl","has_sig":false,"md5_digest":"ab877fa85a1e90ebe602aa9007a2fa50","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":12348,"upload_time":"2020-06-19T06:59:08","upload_time_iso_8601":"2020-06-19T06:59:08.938401Z","url":"https://files.pythonhosted.org/packages/a2/5e/64ba5c8c02faffefdd1cdfb10f8f1bd7c977a03c6479eb76afe7e1cefa61/pytest_subprocess-0.1.5-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"85d272e488686e9b4d201875f03ba145210435733bb091dd13aeb481abfd65ad","md5":"86bbd2c542ff75faca71a4811f4c5195","sha256":"230c086544e0af22a4f1d2661a668209664d732616e844399b71a475a4149b98"},"downloads":-1,"filename":"pytest-subprocess-0.1.5.tar.gz","has_sig":false,"md5_digest":"86bbd2c542ff75faca71a4811f4c5195","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":15352,"upload_time":"2020-06-19T06:59:10","upload_time_iso_8601":"2020-06-19T06:59:10.538267Z","url":"https://files.pythonhosted.org/packages/85/d2/72e488686e9b4d201875f03ba145210435733bb091dd13aeb481abfd65ad/pytest-subprocess-0.1.5.tar.gz","yanked":false,"yanked_reason":null}],"1.0.0":[{"comment_text":"","digests":{"blake2b_256":"e950924baf68ce4217aa4d0553387178964f469ba462d8cdc9a63a93c7b2df7c","md5":"d73cf9255800fc4df29cbb3ca4cbea5c","sha256":"aa657f848d5fe5c15bd36b7f17309e5670582f2f1e2c72700574e3b6ffbb8deb"},"downloads":-1,"filename":"pytest_subprocess-1.0.0-py3-none-any.whl","has_sig":false,"md5_digest":"d73cf9255800fc4df29cbb3ca4cbea5c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":14248,"upload_time":"2020-08-22T11:10:30","upload_time_iso_8601":"2020-08-22T11:10:30.652867Z","url":"https://files.pythonhosted.org/packages/e9/50/924baf68ce4217aa4d0553387178964f469ba462d8cdc9a63a93c7b2df7c/pytest_subprocess-1.0.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"55bf9b839931e2acdab43786def6bb869c38ebab7937b7e747d312fc74502fa3","md5":"9cd12ade5c8dc295440393e435ea35c7","sha256":"af5a87ad5894bae12c6a9b93cf32df58a25ec288c0581d100baa822976673a4a"},"downloads":-1,"filename":"pytest-subprocess-1.0.0.tar.gz","has_sig":false,"md5_digest":"9cd12ade5c8dc295440393e435ea35c7","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":18313,"upload_time":"2020-08-22T11:10:33","upload_time_iso_8601":"2020-08-22T11:10:33.618777Z","url":"https://files.pythonhosted.org/packages/55/bf/9b839931e2acdab43786def6bb869c38ebab7937b7e747d312fc74502fa3/pytest-subprocess-1.0.0.tar.gz","yanked":false,"yanked_reason":null}],"1.0.1":[{"comment_text":"","digests":{"blake2b_256":"f62eb34939bcbc244689ad6dc7edf2fbaa5430d26c63ba9fb5673abf60c4f9fd","md5":"7219619cc15a59358785e79551c7b9d8","sha256":"e7c1fc73c6c1d4eab88deba99309fdb66eac7f1b006428ed18ff7c05a0a328fc"},"downloads":-1,"filename":"pytest_subprocess-1.0.1-py3-none-any.whl","has_sig":false,"md5_digest":"7219619cc15a59358785e79551c7b9d8","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.4","size":14479,"upload_time":"2021-03-20T16:52:26","upload_time_iso_8601":"2021-03-20T16:52:26.462069Z","url":"https://files.pythonhosted.org/packages/f6/2e/b34939bcbc244689ad6dc7edf2fbaa5430d26c63ba9fb5673abf60c4f9fd/pytest_subprocess-1.0.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"28a52a6ebff7cc06c8935bb55bd89f428ef428ab635cea3be09dba7461da78b5","md5":"5bd3c4784702cb24dc350033286c3a99","sha256":"0caab914f7cfa6f383a0a0627ec784ec531ba587f38df98e374b716039b255dd"},"downloads":-1,"filename":"pytest-subprocess-1.0.1.tar.gz","has_sig":false,"md5_digest":"5bd3c4784702cb24dc350033286c3a99","packagetype":"sdist","python_version":"source","requires_python":">=3.4","size":18773,"upload_time":"2021-03-20T16:52:28","upload_time_iso_8601":"2021-03-20T16:52:28.064702Z","url":"https://files.pythonhosted.org/packages/28/a5/2a6ebff7cc06c8935bb55bd89f428ef428ab635cea3be09dba7461da78b5/pytest-subprocess-1.0.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.0":[{"comment_text":"","digests":{"blake2b_256":"337b4c01f125408245bea63baf21b94ddea445ffdfb85004e0eb87f37f53fe0d","md5":"d846e41bb7cd756ac072aa1ae5a6119c","sha256":"041c2ba7440a8be82dbb057281a421f184cd8f81e715b9a1b18e79a3964e69f4"},"downloads":-1,"filename":"pytest_subprocess-1.1.0-py3-none-any.whl","has_sig":false,"md5_digest":"d846e41bb7cd756ac072aa1ae5a6119c","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":13936,"upload_time":"2021-04-18T12:09:03","upload_time_iso_8601":"2021-04-18T12:09:03.127225Z","url":"https://files.pythonhosted.org/packages/33/7b/4c01f125408245bea63baf21b94ddea445ffdfb85004e0eb87f37f53fe0d/pytest_subprocess-1.1.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"33e1df23f91234667c2bfeda704c5c9909833a294b21f14372e124eed49ee143","md5":"b3e961bd2759798e4e1c8a4f7b916140","sha256":"ab92e9ab0ce938afe7a6e19b2a682c06b036b6220b6ba7bb525cc371378b1c74"},"downloads":-1,"filename":"pytest-subprocess-1.1.0.tar.gz","has_sig":false,"md5_digest":"b3e961bd2759798e4e1c8a4f7b916140","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":18971,"upload_time":"2021-04-18T12:09:04","upload_time_iso_8601":"2021-04-18T12:09:04.984503Z","url":"https://files.pythonhosted.org/packages/33/e1/df23f91234667c2bfeda704c5c9909833a294b21f14372e124eed49ee143/pytest-subprocess-1.1.0.tar.gz","yanked":false,"yanked_reason":null}],"1.1.1":[{"comment_text":"","digests":{"blake2b_256":"80065ac1d9857dfcdd52aa1188983000c99c4df52a6c48e855493d4735007162","md5":"54a2843e7d497d7f61f80fd4e15f30a5","sha256":"191a24db0112cc3411ca8f329d16d335f94f4e818189444620ebb22805adb1c7"},"downloads":-1,"filename":"pytest_subprocess-1.1.1-py3-none-any.whl","has_sig":false,"md5_digest":"54a2843e7d497d7f61f80fd4e15f30a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14002,"upload_time":"2021-06-18T15:56:17","upload_time_iso_8601":"2021-06-18T15:56:17.737201Z","url":"https://files.pythonhosted.org/packages/80/06/5ac1d9857dfcdd52aa1188983000c99c4df52a6c48e855493d4735007162/pytest_subprocess-1.1.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4e7380d390170264e4da7271c5ee563cc772c2f586c6b41cebcbe91cbb1634cd","md5":"c000f4a475dbde2d9ba9edc187a743b1","sha256":"706d133661df4b01ff38d1f1da56050c8777acf8c7d1047fcd90094ecd5feafa"},"downloads":-1,"filename":"pytest-subprocess-1.1.1.tar.gz","has_sig":false,"md5_digest":"c000f4a475dbde2d9ba9edc187a743b1","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":17918,"upload_time":"2021-06-18T15:56:20","upload_time_iso_8601":"2021-06-18T15:56:20.222368Z","url":"https://files.pythonhosted.org/packages/4e/73/80d390170264e4da7271c5ee563cc772c2f586c6b41cebcbe91cbb1634cd/pytest-subprocess-1.1.1.tar.gz","yanked":false,"yanked_reason":null}],"1.1.2":[{"comment_text":"","digests":{"blake2b_256":"7eb6650c995e3ce2422b0b50beeacf23ae5202d56c5d8653f0fe53095d799429","md5":"e3f799f338d4f12d3b7c5e566fdbd6c6","sha256":"990e4c7e64f00fe68a78c5698e23638da5ea921e9b50294d60e6627066b7d532"},"downloads":-1,"filename":"pytest_subprocess-1.1.2-py3-none-any.whl","has_sig":false,"md5_digest":"e3f799f338d4f12d3b7c5e566fdbd6c6","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":14038,"upload_time":"2021-07-17T12:07:17","upload_time_iso_8601":"2021-07-17T12:07:17.671941Z","url":"https://files.pythonhosted.org/packages/7e/b6/650c995e3ce2422b0b50beeacf23ae5202d56c5d8653f0fe53095d799429/pytest_subprocess-1.1.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c8a1655c15caf44ff60e110b33048d05ab9ea0142f162f16af5391324d244f8e","md5":"8b691b221724ea6b95f5bcfb12437d36","sha256":"634fc53fa8364a343a052f7c6005bc26efccd6d8721656f2a904a5a1ee1c80bf"},"downloads":-1,"filename":"pytest-subprocess-1.1.2.tar.gz","has_sig":false,"md5_digest":"8b691b221724ea6b95f5bcfb12437d36","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":17995,"upload_time":"2021-07-17T12:07:19","upload_time_iso_8601":"2021-07-17T12:07:19.311965Z","url":"https://files.pythonhosted.org/packages/c8/a1/655c15caf44ff60e110b33048d05ab9ea0142f162f16af5391324d244f8e/pytest-subprocess-1.1.2.tar.gz","yanked":false,"yanked_reason":null}],"1.2.0":[{"comment_text":"","digests":{"blake2b_256":"b03a8a39b1911d7eacf6bbd79b0f7c27b7738e5b11a34d7968db81797bef4d0f","md5":"42f4364189b97de358fde121d8981b02","sha256":"92511728693b4ae7a24548ddef9739376141de0d4d997aa83440934710fa7da9"},"downloads":-1,"filename":"pytest_subprocess-1.2.0-py3-none-any.whl","has_sig":false,"md5_digest":"42f4364189b97de358fde121d8981b02","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15081,"upload_time":"2021-10-09T10:10:13","upload_time_iso_8601":"2021-10-09T10:10:13.555995Z","url":"https://files.pythonhosted.org/packages/b0/3a/8a39b1911d7eacf6bbd79b0f7c27b7738e5b11a34d7968db81797bef4d0f/pytest_subprocess-1.2.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d31d631480af176fdf6c84b2b068d41e2e3bb8e5168bac49a0eb32929df92b5a","md5":"0b67030af759283da265c3ccfc16be00","sha256":"c4fad4fe51c72638026b31519fbbef51412073e80936946eef8c851ddd6d3994"},"downloads":-1,"filename":"pytest-subprocess-1.2.0.tar.gz","has_sig":false,"md5_digest":"0b67030af759283da265c3ccfc16be00","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19045,"upload_time":"2021-10-09T10:10:15","upload_time_iso_8601":"2021-10-09T10:10:15.032407Z","url":"https://files.pythonhosted.org/packages/d3/1d/631480af176fdf6c84b2b068d41e2e3bb8e5168bac49a0eb32929df92b5a/pytest-subprocess-1.2.0.tar.gz","yanked":false,"yanked_reason":null}],"1.3.0":[{"comment_text":"","digests":{"blake2b_256":"6c37cd31d8ec846d051be00fd243285e52bb8f6a0fbbe7b416dc02f9b31adb11","md5":"a78c26f6165ecf9d4d28ecf23220990f","sha256":"4d232d01e2be37df4ba66940b933ed66aa659a4c523b48016c85822f12184610"},"downloads":-1,"filename":"pytest_subprocess-1.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"a78c26f6165ecf9d4d28ecf23220990f","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15513,"upload_time":"2021-10-24T14:41:05","upload_time_iso_8601":"2021-10-24T14:41:05.859530Z","url":"https://files.pythonhosted.org/packages/6c/37/cd31d8ec846d051be00fd243285e52bb8f6a0fbbe7b416dc02f9b31adb11/pytest_subprocess-1.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"ba89d48a8d4327b265d79f0db01a9561ed476dc35e94173607b106e4e82fa8b7","md5":"1f074bca28598c8fd6e191ac773848cf","sha256":"8f3cdf5bcb0b85b3e66ff33ee0a8a32b33427a0a133044955805a55f00bddef9"},"downloads":-1,"filename":"pytest-subprocess-1.3.0.tar.gz","has_sig":false,"md5_digest":"1f074bca28598c8fd6e191ac773848cf","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":19807,"upload_time":"2021-10-24T14:41:08","upload_time_iso_8601":"2021-10-24T14:41:08.008149Z","url":"https://files.pythonhosted.org/packages/ba/89/d48a8d4327b265d79f0db01a9561ed476dc35e94173607b106e4e82fa8b7/pytest-subprocess-1.3.0.tar.gz","yanked":false,"yanked_reason":null}],"1.3.1":[{"comment_text":"","digests":{"blake2b_256":"012d242e370034d4db78f859dce359d5b3f976b24500a006fab0f965bb9a753d","md5":"c1d017ea8a6062e03587eca29d35f51b","sha256":"b9ce80076779fc173ca23a0eebcaf7f018b71b7a6c059eafb0e8e4c445336675"},"downloads":-1,"filename":"pytest_subprocess-1.3.1-py3-none-any.whl","has_sig":false,"md5_digest":"c1d017ea8a6062e03587eca29d35f51b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15772,"upload_time":"2021-11-01T12:39:41","upload_time_iso_8601":"2021-11-01T12:39:41.515573Z","url":"https://files.pythonhosted.org/packages/01/2d/242e370034d4db78f859dce359d5b3f976b24500a006fab0f965bb9a753d/pytest_subprocess-1.3.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"b3f94dd3ca9302400175e943371941cc14bc6e3ee59128936dd587de7c4eb81b","md5":"bb122306dd8c70229f74bbddaa4a18f2","sha256":"95a4b8ba20871f5f01d564b88480120f4a4d8248fc57eb8b2f54d3ee74ee54c4"},"downloads":-1,"filename":"pytest-subprocess-1.3.1.tar.gz","has_sig":false,"md5_digest":"bb122306dd8c70229f74bbddaa4a18f2","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":20108,"upload_time":"2021-11-01T12:39:43","upload_time_iso_8601":"2021-11-01T12:39:43.078114Z","url":"https://files.pythonhosted.org/packages/b3/f9/4dd3ca9302400175e943371941cc14bc6e3ee59128936dd587de7c4eb81b/pytest-subprocess-1.3.1.tar.gz","yanked":false,"yanked_reason":null}],"1.3.2":[{"comment_text":"","digests":{"blake2b_256":"f9040883fa067ccfdc669b9e0f4fafc76166035df0d8950675d1558bbeac4c48","md5":"61f26be939341faa0dbafefdb51c0737","sha256":"c83c1baef4d2f160d2e6a97c5306530444934e804f1dad06ccff78e024975721"},"downloads":-1,"filename":"pytest_subprocess-1.3.2-py3-none-any.whl","has_sig":false,"md5_digest":"61f26be939341faa0dbafefdb51c0737","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":15957,"upload_time":"2021-11-07T12:56:53","upload_time_iso_8601":"2021-11-07T12:56:53.390677Z","url":"https://files.pythonhosted.org/packages/f9/04/0883fa067ccfdc669b9e0f4fafc76166035df0d8950675d1558bbeac4c48/pytest_subprocess-1.3.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"95458998047f2cf5715a7902f3172121a6523e31cd5c9ae7849db8e6764a3dda","md5":"7fa4018ee8361d3bdcb8475226248d8c","sha256":"0fff72a8789eb34e0a383def6a79de01eb7cf22f549bf0d6cd5177fb8a9c1da2"},"downloads":-1,"filename":"pytest-subprocess-1.3.2.tar.gz","has_sig":false,"md5_digest":"7fa4018ee8361d3bdcb8475226248d8c","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":20381,"upload_time":"2021-11-07T12:56:55","upload_time_iso_8601":"2021-11-07T12:56:55.219957Z","url":"https://files.pythonhosted.org/packages/95/45/8998047f2cf5715a7902f3172121a6523e31cd5c9ae7849db8e6764a3dda/pytest-subprocess-1.3.2.tar.gz","yanked":false,"yanked_reason":null}],"1.4.0":[{"comment_text":"","digests":{"blake2b_256":"d4f68bc204993ac0b6419002377a2068db1c9da199e69f553c1a4bea4a4fa2fc","md5":"b60669eecad43ec7ec9197af61fe7763","sha256":"c5d871d61bb35242965da166f235c0cc49362a5abd905dfc9269036e7ac30bb5"},"downloads":-1,"filename":"pytest_subprocess-1.4.0-py3-none-any.whl","has_sig":false,"md5_digest":"b60669eecad43ec7ec9197af61fe7763","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":18692,"upload_time":"2022-01-23T14:18:37","upload_time_iso_8601":"2022-01-23T14:18:37.383247Z","url":"https://files.pythonhosted.org/packages/d4/f6/8bc204993ac0b6419002377a2068db1c9da199e69f553c1a4bea4a4fa2fc/pytest_subprocess-1.4.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"a92bd5a09c59bd3a102946988f1cbdd6d8d9ca21337bbf40d2d60350054b9d58","md5":"ee35126ae5375c0ecfea19c84f8ed084","sha256":"1dbd77fc386fc272c52efeefda27f3868348b53eb63b78ec5cbda821cda458fc"},"downloads":-1,"filename":"pytest-subprocess-1.4.0.tar.gz","has_sig":false,"md5_digest":"ee35126ae5375c0ecfea19c84f8ed084","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":23566,"upload_time":"2022-01-23T14:18:39","upload_time_iso_8601":"2022-01-23T14:18:39.514656Z","url":"https://files.pythonhosted.org/packages/a9/2b/d5a09c59bd3a102946988f1cbdd6d8d9ca21337bbf40d2d60350054b9d58/pytest-subprocess-1.4.0.tar.gz","yanked":false,"yanked_reason":null}],"1.4.1":[{"comment_text":"","digests":{"blake2b_256":"6720b18bc41275e537ba2b8f6904d441a8dd4d7f210cacd193121d8492cd39cd","md5":"98e807bfdf1ea205711da7347bc02a30","sha256":"903667a6dc1ac75f4f27bd620e5728017fa5e119718f6cec71740f2610889571"},"downloads":-1,"filename":"pytest_subprocess-1.4.1-py3-none-any.whl","has_sig":false,"md5_digest":"98e807bfdf1ea205711da7347bc02a30","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":18658,"upload_time":"2022-02-09T06:22:20","upload_time_iso_8601":"2022-02-09T06:22:20.070875Z","url":"https://files.pythonhosted.org/packages/67/20/b18bc41275e537ba2b8f6904d441a8dd4d7f210cacd193121d8492cd39cd/pytest_subprocess-1.4.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3c4a6b5242db389ca4d59f2027d0f80ceced685cf314b18b0acae0eeae1da1d5","md5":"37ea7ff6437a190e734c0094c8aed7dd","sha256":"8a5061319133c72ab53e02adc144ac32a7418834c6b909a2161ab691ba4e9564"},"downloads":-1,"filename":"pytest-subprocess-1.4.1.tar.gz","has_sig":false,"md5_digest":"37ea7ff6437a190e734c0094c8aed7dd","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":22193,"upload_time":"2022-02-09T06:22:22","upload_time_iso_8601":"2022-02-09T06:22:22.464540Z","url":"https://files.pythonhosted.org/packages/3c/4a/6b5242db389ca4d59f2027d0f80ceced685cf314b18b0acae0eeae1da1d5/pytest-subprocess-1.4.1.tar.gz","yanked":false,"yanked_reason":null}],"1.4.2":[{"comment_text":"","digests":{"blake2b_256":"3053acae5a9ad840d4ffaf6f87a140e167230d85a777d8b5b930db6f0e4e004b","md5":"b9ee0244ce8b1e4fc538a4079b142f4b","sha256":"b072da330c64e238f25a14ed9410bf8882b276e64d823f651b33e91406899cee"},"downloads":-1,"filename":"pytest_subprocess-1.4.2-py3-none-any.whl","has_sig":false,"md5_digest":"b9ee0244ce8b1e4fc538a4079b142f4b","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":19927,"upload_time":"2022-10-02T07:17:37","upload_time_iso_8601":"2022-10-02T07:17:37.157969Z","url":"https://files.pythonhosted.org/packages/30/53/acae5a9ad840d4ffaf6f87a140e167230d85a777d8b5b930db6f0e4e004b/pytest_subprocess-1.4.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"09a41bce9967f0229ec9d5800d56d4f85f8d869e7413af2a58b1341d606eaf10","md5":"2d831d55d763720d1683cd4b25ce18f3","sha256":"3edccde14da6f65860d55891df37a1ec86fcf83db880512f856a77cfb521d1e1"},"downloads":-1,"filename":"pytest-subprocess-1.4.2.tar.gz","has_sig":false,"md5_digest":"2d831d55d763720d1683cd4b25ce18f3","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":24835,"upload_time":"2022-10-02T07:17:39","upload_time_iso_8601":"2022-10-02T07:17:39.960958Z","url":"https://files.pythonhosted.org/packages/09/a4/1bce9967f0229ec9d5800d56d4f85f8d869e7413af2a58b1341d606eaf10/pytest-subprocess-1.4.2.tar.gz","yanked":false,"yanked_reason":null}],"1.5.0":[{"comment_text":"","digests":{"blake2b_256":"4496de22cf4a31bf5f21e6b74dc57e3628e3bc78847acf7a1752bdb1e36dfaf1","md5":"6ca5bb2dec281c3c704b6a9f0d576639","sha256":"dfd75b10af6800a89a9b758f2e2eceff9de082a27bd1388521271b6e8bde298b"},"downloads":-1,"filename":"pytest_subprocess-1.5.0-py3-none-any.whl","has_sig":false,"md5_digest":"6ca5bb2dec281c3c704b6a9f0d576639","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":20496,"upload_time":"2023-01-28T10:18:40","upload_time_iso_8601":"2023-01-28T10:18:40.487837Z","url":"https://files.pythonhosted.org/packages/44/96/de22cf4a31bf5f21e6b74dc57e3628e3bc78847acf7a1752bdb1e36dfaf1/pytest_subprocess-1.5.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1224846b02fd7c56cfa32d89b29cd4745827f683b1e126df56bb78f6937096d2","md5":"7c4df64b4ebec28f795e4a8f1ebf19f0","sha256":"d7693b96f588f39b84c7b2b5c04287459246dfae6be1dd4098937a728ad4fbe3"},"downloads":-1,"filename":"pytest-subprocess-1.5.0.tar.gz","has_sig":false,"md5_digest":"7c4df64b4ebec28f795e4a8f1ebf19f0","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":24141,"upload_time":"2023-01-28T10:18:43","upload_time_iso_8601":"2023-01-28T10:18:43.002211Z","url":"https://files.pythonhosted.org/packages/12/24/846b02fd7c56cfa32d89b29cd4745827f683b1e126df56bb78f6937096d2/pytest-subprocess-1.5.0.tar.gz","yanked":false,"yanked_reason":null}],"1.5.1":[{"comment_text":"","digests":{"blake2b_256":"af672cf3a565228faef5fae6b65deca8bda03d8e6fe99c85cdf3624255b43d0b","md5":"613840010ce0f3d9e0ac8d761e48e77d","sha256":"81eb601e8df040d4abfdcf037b6a1be8c198b6c82b77cb63e87848a7efd72ff5"},"downloads":-1,"filename":"pytest_subprocess-1.5.1-py3-none-any.whl","has_sig":false,"md5_digest":"613840010ce0f3d9e0ac8d761e48e77d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":33943,"upload_time":"2024-07-23T18:10:37","upload_time_iso_8601":"2024-07-23T18:10:37.184541Z","url":"https://files.pythonhosted.org/packages/af/67/2cf3a565228faef5fae6b65deca8bda03d8e6fe99c85cdf3624255b43d0b/pytest_subprocess-1.5.1-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"c5d64dce357d6125b09a0517b27711245d8a9fa9b802b9546c2f9b7a23003e4d","md5":"11faca2acb074ed57ee6df4c0d7e1bd7","sha256":"452419727271ab97f0a07964ac83d120f8e634d874d7fba5de71bd0fe3146df9"},"downloads":-1,"filename":"pytest_subprocess-1.5.1.tar.gz","has_sig":false,"md5_digest":"11faca2acb074ed57ee6df4c0d7e1bd7","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":37316,"upload_time":"2024-07-23T18:10:39","upload_time_iso_8601":"2024-07-23T18:10:39.658474Z","url":"https://files.pythonhosted.org/packages/c5/d6/4dce357d6125b09a0517b27711245d8a9fa9b802b9546c2f9b7a23003e4d/pytest_subprocess-1.5.1.tar.gz","yanked":false,"yanked_reason":null}],"1.5.2":[{"comment_text":"","digests":{"blake2b_256":"1077a80e8f9126b95ffd5ad4d04bd14005c68dcbf0d88f53b2b14893f6cc7232","md5":"d242da7c4d6ffd45986289229a3b5d4d","sha256":"23ac7732aa8bd45f1757265b1316eb72a7f55b41fb21e2ca22e149ba3629fa46"},"downloads":-1,"filename":"pytest_subprocess-1.5.2-py3-none-any.whl","has_sig":false,"md5_digest":"d242da7c4d6ffd45986289229a3b5d4d","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":20886,"upload_time":"2024-07-24T11:22:46","upload_time_iso_8601":"2024-07-24T11:22:46.099796Z","url":"https://files.pythonhosted.org/packages/10/77/a80e8f9126b95ffd5ad4d04bd14005c68dcbf0d88f53b2b14893f6cc7232/pytest_subprocess-1.5.2-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3d020c8323e6013ea967f0461ef5653bd129b2d673d74f070c681c7a8663285c","md5":"9c83dfb620db2ce9aef0d61927d8929e","sha256":"ad3ca8a35e798bf9c82d9f16d88700b30d98c5a28236117b86c5d6e581a8ed97"},"downloads":-1,"filename":"pytest_subprocess-1.5.2.tar.gz","has_sig":false,"md5_digest":"9c83dfb620db2ce9aef0d61927d8929e","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":40468,"upload_time":"2024-07-24T11:22:48","upload_time_iso_8601":"2024-07-24T11:22:48.366878Z","url":"https://files.pythonhosted.org/packages/3d/02/0c8323e6013ea967f0461ef5653bd129b2d673d74f070c681c7a8663285c/pytest_subprocess-1.5.2.tar.gz","yanked":false,"yanked_reason":null}],"1.5.3":[{"comment_text":"","digests":{"blake2b_256":"1b82a038e8fdb86d5494a39b8730547ec79767731d02ecb556121e40c0892803","md5":"c440863f6e2d553cd12ccc4b6488d8aa","sha256":"b62580f5a84335fb9f2ec65d49e56a3c93f4722c148fe1771a002835d310a75b"},"downloads":-1,"filename":"pytest_subprocess-1.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"c440863f6e2d553cd12ccc4b6488d8aa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":21759,"upload_time":"2025-01-04T13:08:13","upload_time_iso_8601":"2025-01-04T13:08:13.775450Z","url":"https://files.pythonhosted.org/packages/1b/82/a038e8fdb86d5494a39b8730547ec79767731d02ecb556121e40c0892803/pytest_subprocess-1.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"32ae3ad5c609a5088936608af12f42ad72567a877d3c64303500ebc3b7df0297","md5":"6050a8c3bbc7e5e65e9dcaad928c769d","sha256":"c00b1140fb0211b3153e09500d770db10770baccbe6e05ee9c140036d1d811d5"},"downloads":-1,"filename":"pytest_subprocess-1.5.3.tar.gz","has_sig":false,"md5_digest":"6050a8c3bbc7e5e65e9dcaad928c769d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":42282,"upload_time":"2025-01-04T13:08:16","upload_time_iso_8601":"2025-01-04T13:08:16.877133Z","url":"https://files.pythonhosted.org/packages/32/ae/3ad5c609a5088936608af12f42ad72567a877d3c64303500ebc3b7df0297/pytest_subprocess-1.5.3.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"1b82a038e8fdb86d5494a39b8730547ec79767731d02ecb556121e40c0892803","md5":"c440863f6e2d553cd12ccc4b6488d8aa","sha256":"b62580f5a84335fb9f2ec65d49e56a3c93f4722c148fe1771a002835d310a75b"},"downloads":-1,"filename":"pytest_subprocess-1.5.3-py3-none-any.whl","has_sig":false,"md5_digest":"c440863f6e2d553cd12ccc4b6488d8aa","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":21759,"upload_time":"2025-01-04T13:08:13","upload_time_iso_8601":"2025-01-04T13:08:13.775450Z","url":"https://files.pythonhosted.org/packages/1b/82/a038e8fdb86d5494a39b8730547ec79767731d02ecb556121e40c0892803/pytest_subprocess-1.5.3-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"32ae3ad5c609a5088936608af12f42ad72567a877d3c64303500ebc3b7df0297","md5":"6050a8c3bbc7e5e65e9dcaad928c769d","sha256":"c00b1140fb0211b3153e09500d770db10770baccbe6e05ee9c140036d1d811d5"},"downloads":-1,"filename":"pytest_subprocess-1.5.3.tar.gz","has_sig":false,"md5_digest":"6050a8c3bbc7e5e65e9dcaad928c769d","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":42282,"upload_time":"2025-01-04T13:08:16","upload_time_iso_8601":"2025-01-04T13:08:16.877133Z","url":"https://files.pythonhosted.org/packages/32/ae/3ad5c609a5088936608af12f42ad72567a877d3c64303500ebc3b7df0297/pytest_subprocess-1.5.3.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
