{"info":{"author":"Andrea Righi","author_email":"arighi@nvidia.com","bugtrack_url":null,"classifiers":["Environment :: Console","Intended Audience :: Developers","Intended Audience :: System Administrators","License :: OSI Approved :: GNU General Public License v2 (GPLv2)","Operating System :: POSIX :: Linux"],"description":"https://github.com/arighi/virtme-ng/assets/423281/485608ee-0c82-46d1-b311-e1b7af0a4e44\n\nWhat is virtme-ng?\n====================\n\nvirtme-ng is a tool that allows to easily and quickly recompile and test a\nLinux kernel, starting from the source code.\n\nIt allows to recompile the kernel in few minutes (rather than hours), then the\nkernel is automatically started in a virtualized environment that is an exact\ncopy-on-write copy of your live system, which means that any changes made to\nthe virtualized environment do not affect the host system.\n\nIn order to do this a minimal config is produced (with the bare minimum support\nto test the kernel inside qemu), then the selected kernel is automatically\nbuilt and started inside qemu, using the filesystem of the host as a\ncopy-on-write snapshot.\n\nThis means that you can safely destroy the entire filesystem, crash the kernel,\netc. without affecting the host.\n\nKernels produced with virtme-ng are lacking lots of features, in order to\nreduce the build time to the minimum and still provide you a usable kernel\ncapable of running your tests and experiments.\n\nvirtme-ng is based on virtme, written by Andy Lutomirski <luto@kernel.org>\n([web][korg-web] | [git][korg-git]).\n\nQuick start\n===========\n\n```\n $ uname -r\n 5.19.0-23-generic\n $ git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git\n $ cd linux\n $ vng --build --commit v6.2-rc4\n ...\n $ vng\n           _      _\n    __   _(_)_ __| |_ _ __ ___   ___       _ __   __ _\n    \\ \\ / / |  __| __|  _   _ \\ / _ \\_____|  _ \\ / _  |\n     \\ V /| | |  | |_| | | | | |  __/_____| | | | (_| |\n      \\_/ |_|_|   \\__|_| |_| |_|\\___|     |_| |_|\\__  |\n                                                 |___/\n    kernel version: 6.2.0-rc4-virtme x86_64\n\n $ uname -r\n 6.2.0-rc4-virtme\n ^\n |___ Now you have a shell inside a virtualized copy of your entire system,\n      that is running the new kernel! \\o/\n\n Then simply type \"exit\" to return back to the real system.\n```\n\nInstallation\n============\n\n* Debian / Ubuntu\n\nYou can install the latest stable version of virtme-ng via:\n```\n $ sudo apt install virtme-ng\n```\n\n* Ubuntu ppa\n\nIf you're using Ubuntu, you can install the latest experimental version of\nvirtme-ng from ppa:arighi/virtme-ng:\n```\n $ sudo add-apt-repository ppa:arighi/virtme-ng\n $ sudo apt install --yes virtme-ng\n```\n\n* Install from source\n\nTo install virtme-ng from source you can clone this git repository and build a\nstandalone virtme-ng running the following commands:\n```\n $ git clone --recurse-submodules https://github.com/arighi/virtme-ng.git\n $ BUILD_VIRTME_NG_INIT=1 pip3 install .\n```\n\nIf you are in Debian/Ubuntu you may need to install the following packages to\nbuild virtme-ng from source properly:\n```\n $ sudo apt install python3-pip flake8 pylint cargo rustc qemu-system-x86\n```\n\nIf you'd prefer to use `uv`:\n```\n $ BUILD_VIRTME_NG_INIT=1 uv tool install .\n```\n\n* Run from source\n\nYou can also run virtme-ng directly from source, make sure you have all the\nrequirements installed (optionally you can build `virtme-ng-init` for a faster\nboot, by running `make`), then from the source directory simply run any\nvirtme-ng command, such as:\n```\n $ ./vng --help\n```\n\nRequirements\n============\n\n * You need Python 3.8 or higher\n\n * QEMU 1.6 or higher is recommended (QEMU 1.4 and 1.5 are partially supported\n   using a rather ugly kludge)\n   * You will have a much better experience if KVM is enabled.  That means that\n     you should be on bare metal with hardware virtualization (VT-x or SVM)\n     enabled or in a VM that supports nested virtualization.  On some Linux\n     distributions, you may need to be a member of the \"kvm\" group.  Using\n     VirtualBox or most VPS providers will fall back to emulation. If you are\n     using GitHub Actions, KVM support is supported on \"larger Linux runners\" --\n     which is [now](https://github.blog/2024-01-17-github-hosted-runners-double-the-power-for-open-source/)\n     the default runner -- but it has to be\n     [manually enabled](https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/),\n     see how it is used in [our tests](.github/workflows/run.yml) or\n     [here](https://github.com/multipath-tcp/mptcp_net-next/commit/677b5ecd223c)\n     with Docker.\n\n * Depending on the options you use, you may need a statically linked `busybox`\n   binary somewhere in your path.\n\n * Optionally, you may need virtiofsd 1.7.0 (or higher) for better filesystem\n   performance inside the virtme-ng guests.\n\n * Optionally, you may need `socat` for the `--console` and\n   `--console-client` options, and the host's kernel should support VSOCK\n   (`CONFIG_VHOST_VSOCK`).\n\n * Optionally, you may need `sshd` installed for the `--ssh` and\n   `--ssh-client` options.\n\nExamples\n========\n\n - Build a kernel from a clean local kernel source directory (if a .config is\n   not available virtme-ng will automatically create a minimum .config with\n   all the required feature to boot the instance):\n```\n   $ vng -b\n```\n\n - Build tag v6.1-rc3 from a local kernel git repository:\n```\n   $ vng -b -c v6.1-rc3\n```\n\n - Generate a minimal kernel .config in the current kernel build directory:\n```\n   $ vng --kconfig\n```\n\n - Run a kernel previously compiled from a local git repository in the current\n   working directory:\n```\n   $ vng\n```\n\n - Run an interactive virtme-ng session using the same kernel as the host:\n```\n   $ vng -r\n```\n\n - Test installed kernel 6.2.0-21-generic kernel\n   (NOTE: /boot/vmlinuz-6.2.0-21-generic needs to be accessible):\n```\n   $ vng -r 6.2.0-21-generic\n```\n\n - Run a pre-compiled vanilla v6.6 kernel fetched from the Ubuntu mainline\n   builds repository (useful to test a specific kernel version directly and\n   save a lot of build time):\n```\n   $ vng -r v6.6\n```\n\n - Download and test kernel 6.2.0-1003-lowlatency from deb packages:\n```\n   $ mkdir test\n   $ cd test\n   $ apt download linux-image-6.2.0-1003-lowlatency linux-modules-6.2.0-1003-lowlatency\n   $ for d in *.deb; do dpkg -x $d .; done\n   $ vng -r ./boot/vmlinuz-6.2.0-1003-lowlatency\n```\n\n - Build the tip of the latest kernel on a remote build host called \"builder\",\n   running make inside a specific build chroot (managed remotely by schroot):\n```\n   $ vng --build --build-host builder \\\n     --build-host-exec-prefix \"schroot -c chroot:kinetic-amd64 -- \"\n```\n\n - Run the previously compiled kernel from the current working directory and\n   enable networking:\n```\n   $ vng --net user\n```\n\n - Run the previously compiled kernel adding an additional virtio-scsi device:\n```\n   $ qemu-img create -f qcow2 /tmp/disk.img 8G\n   $ vng --disk /tmp/disk.img\n```\n\n - Recompile the kernel passing some env variables to enable Rust support\n   (using specific versions of the Rust toolchain binaries):\n```\n   $ vng --build RUSTC=rustc-1.62 BINDGEN=bindgen-0.56 RUSTFMT=rustfmt-1.62\n```\n\n - Build the arm64 kernel (using a separate chroot in /opt/chroot/arm64 as the\n   main filesystem):\n```\n   $ vng --build --arch arm64 --root /opt/chroot/arm64/\n```\n\n - Execute `uname -r` inside a kernel recompiled in the current directory and\n   send the output to cowsay on the host:\n```\n   $ vng -- uname -r | cowsay\n    __________________\n   < 6.1.0-rc6-virtme >\n    ------------------\n           \\   ^__^\n            \\  (oo)\\_______\n               (__)\\       )\\/\\\n                   ||----w |\n                   ||     ||\n```\n\n - Run a bunch of parallel virtme-ng instances in a pipeline, with different\n   kernels installed in the system, passing each other their stdout/stdin and\n   return all the generated output back to the host (also measure the total\n   elapsed time):\n```\n   $ time true | \\\n   > vng -r 5.19.0-38-generic -e \"cat && uname -r\" | \\\n   > vng -r 6.2.0-19-generic  -e \"cat && uname -r\" | \\\n   > vng -r 6.2.0-20-generic  -e \"cat && uname -r\" | \\\n   > vng -r 6.3.0-2-generic   -e \"cat && uname -r\" | \\\n   > cowsay -n\n    ___________________\n   / 5.19.0-38-generic \\\n   | 6.2.0-19-generic  |\n   | 6.2.0-20-generic  |\n   \\ 6.3.0-2-generic   /\n    -------------------\n           \\   ^__^\n            \\  (oo)\\_______\n               (__)\\       )\\/\\\n                   ||----w |\n                   ||     ||\n\n   real    0m2.737s\n   user    0m8.425s\n   sys     0m8.806s\n```\n\n - Run the vanilla v6.7-rc5 kernel with an Ubuntu 22.04 rootfs:\n```\n   $ vng -r v6.7-rc5 --user root --root ./rootfs/22.04 --root-release jammy -- cat /etc/lsb-release /proc/version\n   ...\n   DISTRIB_ID=Ubuntu\n   DISTRIB_RELEASE=22.04\n   DISTRIB_CODENAME=jammy\n   DISTRIB_DESCRIPTION=\"Ubuntu 22.04.3 LTS\"\n   Linux version 6.7.0-060700rc5-generic (kernel@kathleen) (x86_64-linux-gnu-gcc-13 (Ubuntu 13.2.0-7ubuntu1) 13.2.0, GNU ld (GNU Binutils for Ubuntu) 2.41) #202312102332 SMP PREEMPT_DYNAMIC Sun Dec 10 23:41:31 UTC 2023\n```\n\n - Run the current kernel creating a 1GB NUMA node with CPUs 0,1,3 assigned\n   and a 3GB NUMA node with CPUs 2,4,5,6,7 assigned:\n```\n   $ vng -r -m 4G --numa 1G,cpus=0-1,cpus=3 --numa 3G,cpus=2,cpus=4-7 -- numactl -H\n   available: 2 nodes (0-1)\n   node 0 cpus: 0 1 3\n   node 0 size: 1005 MB\n   node 0 free: 914 MB\n   node 1 cpus: 2 4 5 6 7\n   node 1 size: 2916 MB\n   node 1 free: 2797 MB\n   node distances:\n   node   0   1\n     0:  10  20\n     1:  20  10\n```\n\n - Run the current kernel creating 4 NUMA nodes of 1GB each and assign\n   different distance costs between the NUMA nodes to simulate non-uniform\n   memory access:\n```\n   $ vng -r --cpu 8 -m 4G \\\n   >     --numa 1G,cpus=0-1 --numa 1G,cpus=2-3 \\\n   >     --numa 1G,cpus=4-5 --numa 1G,cpus=6-7 \\\n   >     --numa-distance 0,1=51 --numa-distance 0,2=31 --numa-distance 0,3=41 \\\n   >     --numa-distance 1,2=21 --numa-distance 1,3=61 \\\n   >     --numa-distance 2,3=11 -- numactl -H\n   available: 4 nodes (0-3)\n   node 0 cpus: 0 1\n   node 0 size: 1006 MB\n   node 0 free: 974 MB\n   node 1 cpus: 2 3\n   node 1 size: 953 MB\n   node 1 free: 919 MB\n   node 2 cpus: 4 5\n   node 2 size: 943 MB\n   node 2 free: 894 MB\n   node 3 cpus: 6 7\n   node 3 size: 1006 MB\n   node 3 free: 965 MB\n   node distances:\n   node     0    1    2    3\n      0:   10   51   31   41\n      1:   51   10   21   61\n      2:   31   21   10   11\n      3:   41   61   11   10\n```\n\n - Run `glxgears` inside a kernel recompiled in the current directory:\n```\n   $ vng -g -- glxgears\n\n   (virtme-ng is started in graphical mode)\n```\n\n - Execute an `awesome` window manager session with kernel\n   6.2.0-1003-lowlatency (installed in the system):\n```\n   $ vng -r 6.2.0-1003-lowlatency -g -- awesome\n\n   (virtme-ng is started in graphical mode)\n```\n\n - Run the `steam` snap (tested in Ubuntu) inside a virtme-ng instance using\n   the 6.2.0-1003-lowlatency kernel:\n```\n   $ vng -r 6.2.0-1003-lowlatency --snaps --net user -g -- /snap/bin/steam\n\n   (virtme-ng is started in graphical mode)\n```\n\n - Generate a memory dump of a running instance and read 'jiffies' from the\n   memory dump using the drgn debugger:\n```\n   # Start the vng instance in debug mode\n   $ vng --debug\n\n   # In a separate shell session trigger the memory dump to /tmp/vmcore.img\n   $ vng --dump /tmp/vmcore.img\n\n   # Use drgn to read 'jiffies' from the memory dump:\n   $ echo \"print(prog['jiffies'])\" | drgn -q -s vmlinux -c /tmp/vmcore.img\n   drgn 0.0.23 (using Python 3.11.6, elfutils 0.189, with libkdumpfile)\n   For help, type help(drgn).\n   >>> import drgn\n   >>> from drgn import NULL, Object, cast, container_of, execscript, offsetof, reinterpret, sizeof\n   >>> from drgn.helpers.common import *\n   >>> from drgn.helpers.linux import *\n   >>> (volatile unsigned long)4294675464\n```\n\n - Attach a gdb session to a running instance started with `--debug`:\n```\n   # Start the vng instance in debug mode\n   $ vng --debug\n\n   # In a separate terminal run the following command to attach the gdb session:\n   $ vng --gdb\n   kernel version = 6.9.0-virtme\n   Reading symbols from vmlinux...\n   Remote debugging using localhost:1234\n   native_irq_disable () at ./arch/x86/include/asm/irqflags.h:37\n   37\t\tasm volatile(\"cli\": : :\"memory\");\n   (gdb)\n\n   # NOTE: a vmlinux must be present in the current working directory in order\n   # to resolve symbols, otherwise vng # will automatically search for a\n   # vmlinux available in the system.\n```\n\n - Connect to a simple remote shell (`socat` is required, VSOCK will be used):\n```\n   # Start the vng instance with server support:\n   $ vng --console\n\n   # In a separate terminal run the following command to connect to a remote shell:\n   $ vng --console-client\n```\n\n - Enable ssh in the vng guest:\n```\n   # Start the vng instance with ssh server support:\n   $ vng --ssh\n\n   # Connect to the vng guest from the host via ssh:\n   $ vng --ssh-client\n```\n\n - Generate some results inside the vng guest and copy them back to the\n   host using scp:\n```\n   # Start the vng instance with SSH server support:\n   arighi@host~> vng --ssh\n   ...\n   arighi@virtme-ng~> ./run.sh > result.txt\n\n   # In another terminal, copy result.txt from the guest to the host using scp:\n   arighi@gpd3~> scp -P 2222 localhost:~/result.txt .\n```\n\n - Run virtme-ng inside a docker container:\n```\n   $ docker run -it --privileged ubuntu:23.10 /bin/bash\n   # apt update\n   # echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n   # apt install --yes git qemu-kvm udev iproute2 busybox-static \\\n     coreutils python3-requests python3-argcomplete libvirt-clients kbd kmod file rsync zstd virtiofsd\n   # git clone --recursive https://github.com/arighi/virtme-ng.git\n   # ./virtme-ng/vng -r v6.6 -- uname -r\n   6.6.0-060600-generic\n```\n   See also: `.github/workflows/run.yml` as a practical example on how to use\n   virtme-ng inside docker.\n\n - Run virtme-ng with gpu passthrough:\n```\n   # Confirm host kernel has VFIO and IOMMU support\n   # Check if NVIDIA module is installed on the host\n   $ modinfo nvidia\n   # If the nvidia module is installed, blacklist the nvidia modules\n   $ sudo bash -c 'echo -e \"blacklist nvidia\\nblacklist nvidia-drm\\nblacklist nvidia-modeset\\nblacklist nvidia-peermem\\nblacklist nvidia-uvm\" > /etc/modprobe.d/blacklist-nvidia.conf'\n   # Host will need to be rebooted for blacklist to take effect.\n   # Get GPU device ID\n   $ lspci -nn | grep NVIDIA\n     0000:01:00.0 VGA compatible controller [0300]: NVIDIA Corporation AD104GLM [RTX 3500 Ada Generation Laptop GPU] [10de:27bb] (rev a1)\n     0000:01:00.1 Audio device [0403]: NVIDIA Corporation Device [10de:22bc] (rev a1))\n   # Configure VFIO for device passthrough\n   $ sudo bash -c 'options vfio-pci ids=10de:27bb,10de:22bc' > /etc/modprobe.d/vfio.conf\n   # Load VFIO module\n   $ sudo modprobe vfio-pci\n   # Pass PCI address to virtme-ng\n   $ sudo vng --nvgpu \"01:00.0\" -r linux\n```\n\nImplementation details\n======================\n\nvirtme-ng allows to automatically configure, build and run kernels using the\nmain command-line interface called `vng`.\n\nA minimal custom `.config` is automatically generated if not already present\nwhen `--build` is specified.\n\nIt is possible to specify a set of custom configs (.config chunk) in\n`~/.config/virtme-ng/kernel.config`, or using --config chunk-file's\nor --configitem CONFIG_FOO=bar's.  These user-specific settings will\nsuccessively override the default settings.  The final overrides are\nthe mandatory config items that are required to boot and test the\nkernel inside qemu, using `virtme-run`.\n\nThen the kernel is compiled either locally or on an external build host (if the\n`--build-host` option is used); once the build is done only the required files\nneeded to test the kernel are copied from the remote host if an external build\nhost is used.\n\nWhen a remote build host is used (`--build-host`) the target branch is force\npushed to the remote host inside the `~/.virtme` directory.\n\nThen the kernel is executed using the virtme module. This allows to test the\nkernel using a safe copy-on-write snapshot of the entire host filesystem.\n\nAll the kernels compiled with virtme-ng have a `-virtme` suffix to their kernel\nversion, this allows to easily determine if you're inside a virtme-ng kernel or\nif you're using the real host kernel (simply by checking `uname -r`).\n\nExternal kernel modules\n=======================\n\nIt is possible to recompile and test out-of-tree kernel modules inside the\nvirtme-ng kernel, simply by building them against the local directory of the\nkernel git repository that was used to build and run the kernel.\n\nDefault options\n===============\n\nTypically, if you always use virtme-ng with an external build server (e.g.,\n`vng --build --build-host REMOTE_SERVER --build-host-exec-prefix CMD`) you\ndon't always want to specify these options, so instead, you can simply define\nthem in `~/.config/virtme-ng/virtme-ng.conf` under `default_opts` and then\nsimply run `vng --build`.\n\nExample (always use an external build server called 'kathleen' and run make\ninside a build chroot called `chroot:lunar-amd64`). To do so, modify the\n`default_opts` sections in `~/.config/virtme-ng/virtme-ng.conf` as following:\n```\n    \"default_opts\" : {\n        \"build_host\": \"kathleen\",\n        \"build_host_exec_prefix\": \"schroot -c chroot:lunar-amd64 --\"\n    },\n```\n\nNow you can simply run `vng --build` to build your kernel from the current\nworking directory using the external build host, prepending the exec prefix\ncommand when running make.\n\nTroubleshooting\n===============\n\n - If you get permission denied when starting qemu, make sure that your\n   username is assigned to the group `kvm` or `libvirt`:\n```\n  $ groups | grep \"kvm\\|libvirt\"\n```\n\n - When using `--network bridge` to create a bridged network in the guest you\n   may get the following error:\n```\n  ...\n  failed to create tun device: Operation not permitted\n```\n\n   This is because `qemu-bridge-helper` requires `CAP_NET_ADMIN` permissions.\n\n   To fix this you need to add `allow all` to `/etc/qemu/bridge.conf` and set\n   the `CAP_NET_ADMIN` capability to `qemu-bridge-helper`, as following:\n```\n  $ sudo filecap /usr/lib/qemu/qemu-bridge-helper net_admin\n```\n\n - If the guest fails to start because the host doesn't have enough memory\n   available you can specify a different amount of memory using `--memory MB`,\n   (this option is passed directly to qemu via `-m`, default is 1G).\n\n - If you're testing a kernel for an architecture different than the host, keep\n   in mind that you need to use also `--root DIR` to use a specific chroot with\n   the binaries compatible with the architecture that you're testing.\n\n   If the chroot doesn't exist in your system virtme-ng will automatically\n   create it using the latest daily build Ubuntu cloud image:\n```\n  $ vng --build --arch riscv64 --root ./tmproot\n```\n\n - If the build on a remote build host is failing unexpectedly you may want to\n   try cleaning up the remote git repository, running:\n```\n  $ vng --clean --build-host HOSTNAME\n```\n\n - Snap support is still experimental and something may not work as expected\n   (keep in mind that virtme-ng will try to run snapd in a bare minimum system\n   environment without systemd), if some snaps are not running try to disable\n   apparmor, adding `--append=\"apparmor=0\"` to the virtme-ng command line.\n\n - Running virtme-ng instances inside docker: in case of failures/issues,\n   especially with stdin/stdout/stderr redirections, make sure that you have\n   `udev` installed in your docker image and run the following command before\n   using `vng`:\n```\n  $ udevadm trigger --subsystem-match --action=change\n```\n\n - To mount the legacy cgroup filesystem (v1) layout, add\n   `SYSTEMD_CGROUP_ENABLE_LEGACY_FORCE=1` to the kernel boot options:\n```\n$ vng -r --append \"SYSTEMD_CGROUP_ENABLE_LEGACY_FORCE=1\" -- 'df -T /sys/fs/cgroup/*'\nFilesystem     Type   1K-blocks  Used Available Use% Mounted on\nblkio          cgroup         0     0         0    - /sys/fs/cgroup/blkio\ncpu            cgroup         0     0         0    - /sys/fs/cgroup/cpu\ncpuacct        cgroup         0     0         0    - /sys/fs/cgroup/cpuacct\ndevices        cgroup         0     0         0    - /sys/fs/cgroup/devices\nmemory         cgroup         0     0         0    - /sys/fs/cgroup/memory\npids           cgroup         0     0         0    - /sys/fs/cgroup/pids\n```\n\nContributing\n============\n\nPlease see DCO-1.1.txt.\n\nAdditional resources\n====================\n\n - [LWN: Faster kernel testing with virtme-ng (November, 2023)](https://lwn.net/Articles/951313/)\n - [LPC 2023: Speeding up Kernel Testing and Debugging with virtme-ng](https://lpc.events/event/17/contributions/1506/attachments/1143/2441/virtme-ng.pdf)\n - [Kernel Recipes 2024: virtme-ng](https://kernel-recipes.org/en/2024/virtme-ng/)\n - [Linux Foundation Mentorship Session: Speeding Up Kernel Development With virtme-ng](https://www.youtube.com/watch?v=ZgMLGM2UazY)\n\nCredits\n=======\n\nvirtme-ng is written by Andrea Righi <arighi@nvidia.com>\n\nvirtme-ng is based on virtme, written by Andy Lutomirski <luto@kernel.org>\n([web][korg-web] | [git][korg-git]).\n\n[korg-web]: https://git.kernel.org/cgit/utils/kernel/virtme/virtme.git \"virtme on kernel.org\"\n[korg-git]: git://git.kernel.org/pub/scm/utils/kernel/virtme/virtme.git \"git address\"\n[virtme]: https://github.com/amluto/virtme \"virtme\"\n[virtme-ng-ppa]: https://launchpad.net/~arighi/+archive/ubuntu/virtme-ng \"virtme-ng ppa\"\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/arighi/virtme-ng","keywords":null,"license":"GPLv2","license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"virtme-ng","package_url":"https://pypi.org/project/virtme-ng/","platform":null,"project_url":"https://pypi.org/project/virtme-ng/","project_urls":{"Homepage":"https://github.com/arighi/virtme-ng"},"provides_extra":null,"release_url":"https://pypi.org/project/virtme-ng/1.32/","requires_dist":["argcomplete","requests","setuptools"],"requires_python":null,"summary":"Build and run a kernel inside a virtualized snapshot of your live system","version":"1.32","yanked":false,"yanked_reason":null},"last_serial":26776936,"releases":{"1.19":[{"comment_text":"","digests":{"blake2b_256":"d4f69045609e75989b48db731f425637681dbc35c415417cbff9be8d0cac4765","md5":"0cda33072127fde2e148b2e0563bbef6","sha256":"4e9c636c0f985793900dd17b92c471b96ed549906c93aef833a4a924f8f05fb3"},"downloads":-1,"filename":"virtme_ng-1.19-py3-none-any.whl","has_sig":false,"md5_digest":"0cda33072127fde2e148b2e0563bbef6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":334516,"upload_time":"2023-12-23T13:06:00","upload_time_iso_8601":"2023-12-23T13:06:00.511492Z","url":"https://files.pythonhosted.org/packages/d4/f6/9045609e75989b48db731f425637681dbc35c415417cbff9be8d0cac4765/virtme_ng-1.19-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d3e26b3dc4e7f1667eccfc656ef0643b6ded3c5ac495b10ff33781a4c0e5ddc4","md5":"7dee95ee8aa26f2d2a63fc0a9147bfc8","sha256":"b465178086392641b6b2f11c69b8f11dcf2db4a755ac1a2700b48db2524f0d92"},"downloads":-1,"filename":"virtme-ng-1.19.tar.gz","has_sig":false,"md5_digest":"7dee95ee8aa26f2d2a63fc0a9147bfc8","packagetype":"sdist","python_version":"source","requires_python":null,"size":332494,"upload_time":"2023-12-23T13:06:03","upload_time_iso_8601":"2023-12-23T13:06:03.904324Z","url":"https://files.pythonhosted.org/packages/d3/e2/6b3dc4e7f1667eccfc656ef0643b6ded3c5ac495b10ff33781a4c0e5ddc4/virtme-ng-1.19.tar.gz","yanked":false,"yanked_reason":null}],"1.20":[{"comment_text":"","digests":{"blake2b_256":"1a17f508d65b665f44deb18e9ce9480e2fd35c12ec94d60ca529e5df09f6856e","md5":"fa3796c8c302af5a1025bebea3584d11","sha256":"2468d18377a463c564b6f7cf29cba037cb8d2b00a0b4e6145462de949b95e1b9"},"downloads":-1,"filename":"virtme_ng-1.20-py3-none-any.whl","has_sig":false,"md5_digest":"fa3796c8c302af5a1025bebea3584d11","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":327896,"upload_time":"2024-02-03T11:14:20","upload_time_iso_8601":"2024-02-03T11:14:20.654441Z","url":"https://files.pythonhosted.org/packages/1a/17/f508d65b665f44deb18e9ce9480e2fd35c12ec94d60ca529e5df09f6856e/virtme_ng-1.20-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"856bd1705d343ee565fff4faf77e74404056a2461303fc5843516236b9063d79","md5":"a3df4f7b64a84570014d678fd0a6457e","sha256":"96aba9842e63b17660e6aedb553e1d41dfcfe19bfe20d9f84f42731bf73436a1"},"downloads":-1,"filename":"virtme-ng-1.20.tar.gz","has_sig":false,"md5_digest":"a3df4f7b64a84570014d678fd0a6457e","packagetype":"sdist","python_version":"source","requires_python":null,"size":326727,"upload_time":"2024-02-03T11:14:22","upload_time_iso_8601":"2024-02-03T11:14:22.969896Z","url":"https://files.pythonhosted.org/packages/85/6b/d1705d343ee565fff4faf77e74404056a2461303fc5843516236b9063d79/virtme-ng-1.20.tar.gz","yanked":false,"yanked_reason":null}],"1.21":[{"comment_text":"","digests":{"blake2b_256":"c017efb6c67ffd5d267b8bdd46338e4c2ec4059271f141a9c04e6dca76394600","md5":"9ec5e75ae990fda63a8c02b57c1acd49","sha256":"8991fe245b256da92222ee30af8e3236c71db7ce8dd6d2eddce40eef39b1fba6"},"downloads":-1,"filename":"virtme_ng-1.21-py3-none-any.whl","has_sig":false,"md5_digest":"9ec5e75ae990fda63a8c02b57c1acd49","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":329745,"upload_time":"2024-02-16T14:36:17","upload_time_iso_8601":"2024-02-16T14:36:17.579694Z","url":"https://files.pythonhosted.org/packages/c0/17/efb6c67ffd5d267b8bdd46338e4c2ec4059271f141a9c04e6dca76394600/virtme_ng-1.21-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"5ec67ea35b054fa0a5ed77999490c7a30b74dd5f8434ebd12236831a6cc4b271","md5":"2fa14f59dfdc94977017a9c803e74e49","sha256":"87e67aa28477f8c1d9b591dcae65cc72aaa0cd40f05058f96557b94580049e55"},"downloads":-1,"filename":"virtme-ng-1.21.tar.gz","has_sig":false,"md5_digest":"2fa14f59dfdc94977017a9c803e74e49","packagetype":"sdist","python_version":"source","requires_python":null,"size":329043,"upload_time":"2024-02-16T14:36:21","upload_time_iso_8601":"2024-02-16T14:36:21.364493Z","url":"https://files.pythonhosted.org/packages/5e/c6/7ea35b054fa0a5ed77999490c7a30b74dd5f8434ebd12236831a6cc4b271/virtme-ng-1.21.tar.gz","yanked":false,"yanked_reason":null}],"1.22":[{"comment_text":"","digests":{"blake2b_256":"d2260a8a00092e584608c2195266570a4a456691ccf8a3ad5be2ab8e0c5df95a","md5":"9144c5142d50b409eda00fdac25e592c","sha256":"2490910d1a09c28e82317a421d147b6b742f9a90900d4e1ff35f39bc630c8b09"},"downloads":-1,"filename":"virtme_ng-1.22-py3-none-any.whl","has_sig":false,"md5_digest":"9144c5142d50b409eda00fdac25e592c","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":330556,"upload_time":"2024-02-24T09:06:31","upload_time_iso_8601":"2024-02-24T09:06:31.859331Z","url":"https://files.pythonhosted.org/packages/d2/26/0a8a00092e584608c2195266570a4a456691ccf8a3ad5be2ab8e0c5df95a/virtme_ng-1.22-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d4b2acdb1b0b44f21e2d9278435868212c8d8223e0c2aef55c769db1bcca4af7","md5":"19eccc7f4ad9e4a5d09ebe90296f2f0f","sha256":"a2b6a6b64bfd03fd124b0207bff0acdc961cd0d1615209a54d08827dcea290b2"},"downloads":-1,"filename":"virtme-ng-1.22.tar.gz","has_sig":false,"md5_digest":"19eccc7f4ad9e4a5d09ebe90296f2f0f","packagetype":"sdist","python_version":"source","requires_python":null,"size":329827,"upload_time":"2024-02-24T09:06:34","upload_time_iso_8601":"2024-02-24T09:06:34.381520Z","url":"https://files.pythonhosted.org/packages/d4/b2/acdb1b0b44f21e2d9278435868212c8d8223e0c2aef55c769db1bcca4af7/virtme-ng-1.22.tar.gz","yanked":false,"yanked_reason":null}],"1.23":[{"comment_text":"","digests":{"blake2b_256":"528291dbc4336afffc11f1c7c6ae842f7a33358108b713957b50bb1f6522406f","md5":"9f0da8b147b4e19441fb95d03178493e","sha256":"4d18380f9b706d27e858f03324e6d42d164f8390a56ebd9ea7e1cb5e11a03f82"},"downloads":-1,"filename":"virtme_ng-1.23-py3-none-any.whl","has_sig":false,"md5_digest":"9f0da8b147b4e19441fb95d03178493e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":331894,"upload_time":"2024-03-29T08:25:51","upload_time_iso_8601":"2024-03-29T08:25:51.100991Z","url":"https://files.pythonhosted.org/packages/52/82/91dbc4336afffc11f1c7c6ae842f7a33358108b713957b50bb1f6522406f/virtme_ng-1.23-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"20fcf9418a24f167387674f59c3d3e63099b5076817c670a8861340c8cf0af81","md5":"fe82f3067aee0cff398ae19c363f7852","sha256":"a8a5596631e21be48383b41007e032b1e428b8711f604f4b724cc4c4b1540bd0"},"downloads":-1,"filename":"virtme-ng-1.23.tar.gz","has_sig":false,"md5_digest":"fe82f3067aee0cff398ae19c363f7852","packagetype":"sdist","python_version":"source","requires_python":null,"size":331196,"upload_time":"2024-03-29T08:25:53","upload_time_iso_8601":"2024-03-29T08:25:53.153354Z","url":"https://files.pythonhosted.org/packages/20/fc/f9418a24f167387674f59c3d3e63099b5076817c670a8861340c8cf0af81/virtme-ng-1.23.tar.gz","yanked":false,"yanked_reason":null}],"1.24":[{"comment_text":"","digests":{"blake2b_256":"63978896f7dc39011ec76da5a77b221c61dda3d10bbe7f4e8e906398d7b795e3","md5":"575a6168bfee4583f5dc6e62fb95503d","sha256":"075afac8ec71c8a2c88f15e094c22916e0dd99d9cb17ecc3e30e1ac92d4a170e"},"downloads":-1,"filename":"virtme_ng-1.24-py3-none-any.whl","has_sig":false,"md5_digest":"575a6168bfee4583f5dc6e62fb95503d","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":332026,"upload_time":"2024-05-03T10:56:55","upload_time_iso_8601":"2024-05-03T10:56:55.374805Z","url":"https://files.pythonhosted.org/packages/63/97/8896f7dc39011ec76da5a77b221c61dda3d10bbe7f4e8e906398d7b795e3/virtme_ng-1.24-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"57ebfdb75c815977468d1b3e5b2646993600cd5dc917ae6b3a1a227753f30643","md5":"0a22366f1df166c71084f75891dd5853","sha256":"0f77dab1fa3581a52eafef2ffb014cb5fb8a1d9633997ea175ee388162609a35"},"downloads":-1,"filename":"virtme-ng-1.24.tar.gz","has_sig":false,"md5_digest":"0a22366f1df166c71084f75891dd5853","packagetype":"sdist","python_version":"source","requires_python":null,"size":331318,"upload_time":"2024-05-03T10:56:58","upload_time_iso_8601":"2024-05-03T10:56:58.318909Z","url":"https://files.pythonhosted.org/packages/57/eb/fdb75c815977468d1b3e5b2646993600cd5dc917ae6b3a1a227753f30643/virtme-ng-1.24.tar.gz","yanked":false,"yanked_reason":null}],"1.25":[{"comment_text":"","digests":{"blake2b_256":"91ac817ee696718e79f280d585439c6b7889aae9404813f89e9f4bec3bebd9e7","md5":"f2ea784cae1921a2df230236cd423240","sha256":"f4541f11424d15a40f4e57dedb7a68005bf41854fcdddc92a36856bf7e88fa2c"},"downloads":-1,"filename":"virtme_ng-1.25-py3-none-any.whl","has_sig":false,"md5_digest":"f2ea784cae1921a2df230236cd423240","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":332311,"upload_time":"2024-05-21T19:59:29","upload_time_iso_8601":"2024-05-21T19:59:29.768465Z","url":"https://files.pythonhosted.org/packages/91/ac/817ee696718e79f280d585439c6b7889aae9404813f89e9f4bec3bebd9e7/virtme_ng-1.25-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"4ec2a6747d75176facfcf35f342008e142b5ad1ac1b9420b90db798dff416bb2","md5":"2777b7baa820fbe261979b3fece068f6","sha256":"672cb665455ec7211f04e538b5d6fa0d1ba8f385dad83298d908c470af9c41e4"},"downloads":-1,"filename":"virtme-ng-1.25.tar.gz","has_sig":false,"md5_digest":"2777b7baa820fbe261979b3fece068f6","packagetype":"sdist","python_version":"source","requires_python":null,"size":331932,"upload_time":"2024-05-21T19:59:32","upload_time_iso_8601":"2024-05-21T19:59:32.298739Z","url":"https://files.pythonhosted.org/packages/4e/c2/a6747d75176facfcf35f342008e142b5ad1ac1b9420b90db798dff416bb2/virtme-ng-1.25.tar.gz","yanked":false,"yanked_reason":null}],"1.26":[{"comment_text":"","digests":{"blake2b_256":"d9189679217c6ea52234d1d156f090a434ed1ac788a47ebebc4fe7652707372a","md5":"17f43f8bf48c19952e5b31fd5b77a4a0","sha256":"9da823be5d2e763c56c024cc0972833c47609317ad970d29634e8488086458a9"},"downloads":-1,"filename":"virtme_ng-1.26-py3-none-any.whl","has_sig":false,"md5_digest":"17f43f8bf48c19952e5b31fd5b77a4a0","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":332083,"upload_time":"2024-07-29T21:37:55","upload_time_iso_8601":"2024-07-29T21:37:55.086264Z","url":"https://files.pythonhosted.org/packages/d9/18/9679217c6ea52234d1d156f090a434ed1ac788a47ebebc4fe7652707372a/virtme_ng-1.26-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d112f1c5179777b2e1654d46da8411158fed451bf0391bcd9bf544dcd96beb29","md5":"c70011450240d70123bf163112fb237c","sha256":"8f491c0b728bf9eb3a2e435bb6814c64c1df28ce19fdb4b6b83ed2d75cc8c0d2"},"downloads":-1,"filename":"virtme_ng-1.26.tar.gz","has_sig":false,"md5_digest":"c70011450240d70123bf163112fb237c","packagetype":"sdist","python_version":"source","requires_python":null,"size":332227,"upload_time":"2024-07-29T21:37:57","upload_time_iso_8601":"2024-07-29T21:37:57.068783Z","url":"https://files.pythonhosted.org/packages/d1/12/f1c5179777b2e1654d46da8411158fed451bf0391bcd9bf544dcd96beb29/virtme_ng-1.26.tar.gz","yanked":false,"yanked_reason":null}],"1.27":[{"comment_text":"","digests":{"blake2b_256":"703b61c9bf7f910c6556af6ca264fa4f514c8931f558de0d6744005b5f55b46a","md5":"daba5b430b802be026754af508df9ac6","sha256":"ed20ecbc5b5f711345e1689a1efbc8838c6d1714688854fdd21baf44258b873b"},"downloads":-1,"filename":"virtme_ng-1.27-py3-none-any.whl","has_sig":false,"md5_digest":"daba5b430b802be026754af508df9ac6","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":335742,"upload_time":"2024-07-30T16:54:13","upload_time_iso_8601":"2024-07-30T16:54:13.152363Z","url":"https://files.pythonhosted.org/packages/70/3b/61c9bf7f910c6556af6ca264fa4f514c8931f558de0d6744005b5f55b46a/virtme_ng-1.27-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3fff5ad6063107bf07af85aedff9db03b3db168ea35de4fe7df2e6a0fafe69b0","md5":"c62abdff40eb986ac3e32b58ee971682","sha256":"320955ed442c10098cdc4b5e95ebac7c209e40a21e05a2625003e72c3f143719"},"downloads":-1,"filename":"virtme-ng-1.27.tar.gz","has_sig":false,"md5_digest":"c62abdff40eb986ac3e32b58ee971682","packagetype":"sdist","python_version":"source","requires_python":null,"size":335836,"upload_time":"2024-07-30T16:54:15","upload_time_iso_8601":"2024-07-30T16:54:15.275035Z","url":"https://files.pythonhosted.org/packages/3f/ff/5ad6063107bf07af85aedff9db03b3db168ea35de4fe7df2e6a0fafe69b0/virtme-ng-1.27.tar.gz","yanked":false,"yanked_reason":null}],"1.28":[{"comment_text":"","digests":{"blake2b_256":"7097c98ad5686f2d7603df0a43d76d19b26aae2fa5868f6be17257cf52def86e","md5":"1bd661330b439190561602efe6f3c3a5","sha256":"4dae40ab9b97cb96bd032491c93bc958d38f12eb69dc1cd86567e5af7be569ce"},"downloads":-1,"filename":"virtme_ng-1.28-py3-none-any.whl","has_sig":false,"md5_digest":"1bd661330b439190561602efe6f3c3a5","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":339618,"upload_time":"2024-09-05T07:57:08","upload_time_iso_8601":"2024-09-05T07:57:08.969664Z","url":"https://files.pythonhosted.org/packages/70/97/c98ad5686f2d7603df0a43d76d19b26aae2fa5868f6be17257cf52def86e/virtme_ng-1.28-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"3a6be50adad4001defce01e551ab10ca022e6d7f09375d9961f649929bdd98e3","md5":"2e252e5bd848f2b18965cede13001555","sha256":"1a66f85599cd60aa0aa2f37b09114c6ba4b92f3b3da1beec954967bf593fb373"},"downloads":-1,"filename":"virtme-ng-1.28.tar.gz","has_sig":false,"md5_digest":"2e252e5bd848f2b18965cede13001555","packagetype":"sdist","python_version":"source","requires_python":null,"size":339187,"upload_time":"2024-09-05T07:57:11","upload_time_iso_8601":"2024-09-05T07:57:11.339059Z","url":"https://files.pythonhosted.org/packages/3a/6b/e50adad4001defce01e551ab10ca022e6d7f09375d9961f649929bdd98e3/virtme-ng-1.28.tar.gz","yanked":false,"yanked_reason":null}],"1.29":[{"comment_text":"","digests":{"blake2b_256":"11ad575418f2da90e93597b16fca2d2817da08a6d1740694942c8d095715b6bd","md5":"43700202952be634694f01222655115e","sha256":"44bda774953ee9593279a37f30b58d53f3fed48d4fac7f03cd94e0f5a8863546"},"downloads":-1,"filename":"virtme_ng-1.29-py3-none-any.whl","has_sig":false,"md5_digest":"43700202952be634694f01222655115e","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":336054,"upload_time":"2024-09-11T06:41:24","upload_time_iso_8601":"2024-09-11T06:41:24.719845Z","url":"https://files.pythonhosted.org/packages/11/ad/575418f2da90e93597b16fca2d2817da08a6d1740694942c8d095715b6bd/virtme_ng-1.29-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"59ff51263d5eab284fb557c37ba7b0635e9fac9dc34b422a32a96f88ce989c18","md5":"0bdd582939dcea53515e1829373f49fb","sha256":"cf42704a5c7953c5f9f6c12e06b2d5ed550e841d67bacaa50959edfb94d9f1bd"},"downloads":-1,"filename":"virtme-ng-1.29.tar.gz","has_sig":false,"md5_digest":"0bdd582939dcea53515e1829373f49fb","packagetype":"sdist","python_version":"source","requires_python":null,"size":336378,"upload_time":"2024-09-11T06:41:26","upload_time_iso_8601":"2024-09-11T06:41:26.529594Z","url":"https://files.pythonhosted.org/packages/59/ff/51263d5eab284fb557c37ba7b0635e9fac9dc34b422a32a96f88ce989c18/virtme-ng-1.29.tar.gz","yanked":false,"yanked_reason":null}],"1.30":[{"comment_text":"","digests":{"blake2b_256":"456d81c0c4b224cf738085b535de6dbf698c2687cdbbe8a7378cddee95e64c38","md5":"af00691c9dd18c33c761c1d4aaff05fb","sha256":"c9e644fd7be4084d8603e0847b378f8033f44ff4a4317c065412070b32cee949"},"downloads":-1,"filename":"virtme_ng-1.30-py3-none-any.whl","has_sig":false,"md5_digest":"af00691c9dd18c33c761c1d4aaff05fb","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":339038,"upload_time":"2024-10-13T07:33:32","upload_time_iso_8601":"2024-10-13T07:33:32.165609Z","url":"https://files.pythonhosted.org/packages/45/6d/81c0c4b224cf738085b535de6dbf698c2687cdbbe8a7378cddee95e64c38/virtme_ng-1.30-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"2e0ca4c49f08e2d72ea558e9285fa032f8f36300063f5c06c74b6c80d094e2ca","md5":"a2443a90fd7fed0906b27f412b9ec20f","sha256":"fd07c7ccc9b4cbce1ae1e8c0398f33cec60a38b1939ca1417e0afdfa0ab3a438"},"downloads":-1,"filename":"virtme-ng-1.30.tar.gz","has_sig":false,"md5_digest":"a2443a90fd7fed0906b27f412b9ec20f","packagetype":"sdist","python_version":"source","requires_python":null,"size":336188,"upload_time":"2024-10-13T07:33:34","upload_time_iso_8601":"2024-10-13T07:33:34.404459Z","url":"https://files.pythonhosted.org/packages/2e/0c/a4c49f08e2d72ea558e9285fa032f8f36300063f5c06c74b6c80d094e2ca/virtme-ng-1.30.tar.gz","yanked":false,"yanked_reason":null}],"1.31":[{"comment_text":"","digests":{"blake2b_256":"6803d6e827e1ae66eb4b80283953d2cc885466568383434a8714a54bb9b51f4b","md5":"5d02caf81bc12a4249ad55fab85f8ed4","sha256":"50132321c8ea83ba24630b7bbba73eec7a8b2beb589a575d495ead7781d714f9"},"downloads":-1,"filename":"virtme_ng-1.31-py3-none-any.whl","has_sig":false,"md5_digest":"5d02caf81bc12a4249ad55fab85f8ed4","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":338729,"upload_time":"2024-10-18T13:36:49","upload_time_iso_8601":"2024-10-18T13:36:49.926452Z","url":"https://files.pythonhosted.org/packages/68/03/d6e827e1ae66eb4b80283953d2cc885466568383434a8714a54bb9b51f4b/virtme_ng-1.31-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d7c653db2a9a215f91ae0fae4555b6f517696aec42ef925c352a17d7a8ad0f7f","md5":"9755c6f72ef4ffb9b7f1e055be27ca81","sha256":"fa1b9763530a9456d62221ce37431f450ad759a06a78b25a06969fe8da833475"},"downloads":-1,"filename":"virtme_ng-1.31.tar.gz","has_sig":false,"md5_digest":"9755c6f72ef4ffb9b7f1e055be27ca81","packagetype":"sdist","python_version":"source","requires_python":null,"size":339305,"upload_time":"2024-10-18T13:36:51","upload_time_iso_8601":"2024-10-18T13:36:51.509432Z","url":"https://files.pythonhosted.org/packages/d7/c6/53db2a9a215f91ae0fae4555b6f517696aec42ef925c352a17d7a8ad0f7f/virtme_ng-1.31.tar.gz","yanked":false,"yanked_reason":null}],"1.32":[{"comment_text":"","digests":{"blake2b_256":"76b91beb318ee6ee97a8c82ae67b58056a75325ae94fe37da744c4ed368ff4be","md5":"2f59c71acf621793312b994de912ee16","sha256":"b1b2a85fc2918d47654b27630dedb04dcf04d5bc8a0ca05135194afecdd18a0b"},"downloads":-1,"filename":"virtme_ng-1.32-py3-none-any.whl","has_sig":false,"md5_digest":"2f59c71acf621793312b994de912ee16","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":352236,"upload_time":"2025-01-03T18:38:34","upload_time_iso_8601":"2025-01-03T18:38:34.089106Z","url":"https://files.pythonhosted.org/packages/76/b9/1beb318ee6ee97a8c82ae67b58056a75325ae94fe37da744c4ed368ff4be/virtme_ng-1.32-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1c1a3ae2dd97741ed898896a6946c791238b229fc4eacd229ff464440f5ab3a1","md5":"8bfc1ad1dcef42aec8e0d4c7869d4fa3","sha256":"b213ba377a7b0dadd464e3f02c4a896f1f11c5a30323a9c6b3b912be8aa2a77d"},"downloads":-1,"filename":"virtme_ng-1.32.tar.gz","has_sig":false,"md5_digest":"8bfc1ad1dcef42aec8e0d4c7869d4fa3","packagetype":"sdist","python_version":"source","requires_python":null,"size":348467,"upload_time":"2025-01-03T18:38:37","upload_time_iso_8601":"2025-01-03T18:38:37.412221Z","url":"https://files.pythonhosted.org/packages/1c/1a/3ae2dd97741ed898896a6946c791238b229fc4eacd229ff464440f5ab3a1/virtme_ng-1.32.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"76b91beb318ee6ee97a8c82ae67b58056a75325ae94fe37da744c4ed368ff4be","md5":"2f59c71acf621793312b994de912ee16","sha256":"b1b2a85fc2918d47654b27630dedb04dcf04d5bc8a0ca05135194afecdd18a0b"},"downloads":-1,"filename":"virtme_ng-1.32-py3-none-any.whl","has_sig":false,"md5_digest":"2f59c71acf621793312b994de912ee16","packagetype":"bdist_wheel","python_version":"py3","requires_python":null,"size":352236,"upload_time":"2025-01-03T18:38:34","upload_time_iso_8601":"2025-01-03T18:38:34.089106Z","url":"https://files.pythonhosted.org/packages/76/b9/1beb318ee6ee97a8c82ae67b58056a75325ae94fe37da744c4ed368ff4be/virtme_ng-1.32-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"1c1a3ae2dd97741ed898896a6946c791238b229fc4eacd229ff464440f5ab3a1","md5":"8bfc1ad1dcef42aec8e0d4c7869d4fa3","sha256":"b213ba377a7b0dadd464e3f02c4a896f1f11c5a30323a9c6b3b912be8aa2a77d"},"downloads":-1,"filename":"virtme_ng-1.32.tar.gz","has_sig":false,"md5_digest":"8bfc1ad1dcef42aec8e0d4c7869d4fa3","packagetype":"sdist","python_version":"source","requires_python":null,"size":348467,"upload_time":"2025-01-03T18:38:37","upload_time_iso_8601":"2025-01-03T18:38:37.412221Z","url":"https://files.pythonhosted.org/packages/1c/1a/3ae2dd97741ed898896a6946c791238b229fc4eacd229ff464440f5ab3a1/virtme_ng-1.32.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
