{"info":{"author":"Shivam Bansal, Chaitanya Aggarwal","author_email":"shivam5992@gmail.com","bugtrack_url":null,"classifiers":["Intended Audience :: Developers","Intended Audience :: Education","Intended Audience :: Science/Research","Programming Language :: Python","Programming Language :: Python :: 3","Programming Language :: Python :: 3 :: Only","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.11","Programming Language :: Python :: 3.12","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9","Topic :: Text Processing"],"description":"# Whylabs fork of textstat\n\nfor main repo see: https://github.com/textstat/textstat\n\nModifications from main repo:\n* replace the Pyphen dependency with syllapy.\n\n[![PyPI](https://img.shields.io/pypi/v/textstat.svg)](https://pypi.org/project/whylabs-textstat/)\n[![Downloads](https://img.shields.io/badge/dynamic/json.svg?url=https://pypistats.org/api/packages/whylabs-textstat/recent?mirrors=false&label=downloads&query=$.data.last_month&suffix=/month)](https://pypistats.org/packages/whylabs-textstat)\n\n**Textstat is an easy to use library to calculate statistics from text. It helps determine readability, complexity, and grade level.**\n\n<p align=\"center\">\n  <img width=\"100%\" src=\"https://images.unsplash.com/photo-1457369804613-52c61a468e7d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&h=400&q=80\">\n</p>\n<p align=\"right\">\n  <sup>Photo by <a href=\"https://unsplash.com/@impatrickt\">Patrick Tomasso</a>\n  on <a href=\"https://unsplash.com/images/things/book\">Unsplash</a></sup>\n</p>\n\n## Usage\n\n```python\n>>> import textstat\n\n>>> test_data = (\n    \"Playing games has always been thought to be important to \"\n    \"the development of well-balanced and creative children; \"\n    \"however, what part, if any, they should play in the lives \"\n    \"of adults has never been researched that deeply. I believe \"\n    \"that playing games is every bit as important for adults \"\n    \"as for children. Not only is taking time out to play games \"\n    \"with our children and other adults valuable to building \"\n    \"interpersonal relationships but is also a wonderful way \"\n    \"to release built up tension.\"\n)\n\n>>> textstat.flesch_reading_ease(test_data)\n>>> textstat.flesch_kincaid_grade(test_data)\n>>> textstat.smog_index(test_data)\n>>> textstat.coleman_liau_index(test_data)\n>>> textstat.automated_readability_index(test_data)\n>>> textstat.dale_chall_readability_score(test_data)\n>>> textstat.difficult_words(test_data)\n>>> textstat.linsear_write_formula(test_data)\n>>> textstat.gunning_fog(test_data)\n>>> textstat.text_standard(test_data)\n>>> textstat.fernandez_huerta(test_data)\n>>> textstat.szigriszt_pazos(test_data)\n>>> textstat.gutierrez_polini(test_data)\n>>> textstat.crawford(test_data)\n>>> textstat.gulpease_index(test_data)\n>>> textstat.osman(test_data)\n```\n\nThe argument (text) for all the defined functions remains the same -\ni.e the text for which statistics need to be calculated.\n\n## Install\n\nYou can install textstat either via the Python Package Index (PyPI) or from source.\n\n### Install using pip\n\n```shell\npip install textstat\n```\n\n### Install using easy_install\n\n```shell\neasy_install textstat\n```\n\n### Install latest version from GitHub\n\n```shell\ngit clone https://github.com/textstat/textstat.git\ncd textstat\npip install .\n```\n\n### Install from PyPI\n\nDownload the latest version of textstat from http://pypi.python.org/pypi/textstat/\n\nYou can install it by doing the following:\n\n```shell\ntar xfz textstat-*.tar.gz\ncd textstat-*/\npython setup.py build\npython setup.py install # as root\n```\n\n## Language support\nBy default functions implement algorithms for english language. \nTo change language, use:\n\n```python\ntextstat.set_lang(lang)\n``` \n\nThe language will be used for syllable calculation and to choose \nvariant of the formula.\n\n### Language variants\nAll functions implement `en_US` language. Some of them has also variants \nfor other languages listed below. \n\n|  Function                   | en | de | es | fr | it | nl | pl | ru |\n|-----------------------------|----|----|----|----|----|----|----|----|\n| flesch_reading_ease         | ✔  | ✔  | ✔  | ✔  | ✔  | ✔  |    | ✔  |\n| gunning_fog                 | ✔  |    |    |    |    |    | ✔  |    |\n\n#### Spanish-specific tests\nThe following functions are specifically designed for spanish language.\nThey can be used on non-spanish texts, even though that use case is not recommended.\n\n```python\n>>> textstat.fernandez_huerta(test_data)\n>>> textstat.szigriszt_pazos(test_data)\n>>> textstat.gutierrez_polini(test_data)\n>>> textstat.crawford(test_data)\n```\n\nAdditional information on the formula they implement can be found in their respective docstrings.\n\n## List of Functions\n\n### Formulas\n\n#### The Flesch Reading Ease formula\n\n```python\ntextstat.flesch_reading_ease(text)\n```\n\nReturns the Flesch Reading Ease Score.\n\nThe following table can be helpful to assess the ease of\nreadability in a document.\n\nThe table is an _example_ of values. While the\nmaximum score is 121.22, there is no limit on how low\nthe score can be. A negative score is valid.\n\n| Score |    Difficulty     |\n|-------|-------------------|\n|90-100 | Very Easy         |\n| 80-89 | Easy              |\n| 70-79 | Fairly Easy       |\n| 60-69 | Standard          |\n| 50-59 | Fairly Difficult  |\n| 30-49 | Difficult         |\n| 0-29  | Very Confusing    |\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests#Flesch_reading_ease)\n\n#### The Flesch-Kincaid Grade Level\n\n```python\ntextstat.flesch_kincaid_grade(text)\n```\n\nReturns the Flesch-Kincaid Grade of the given text. This is a grade\nformula in that a score of 9.3 means that a ninth grader would be able to\nread the document.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests#Flesch%E2%80%93Kincaid_grade_level)\n\n#### The Fog Scale (Gunning FOG Formula)\n\n```python\ntextstat.gunning_fog(text)\n```\n\nReturns the FOG index of the given text. This is a grade formula in that\na score of 9.3 means that a ninth grader would be able to read the document.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Gunning_fog_index)\n\n#### The SMOG Index\n\n```python\ntextstat.smog_index(text)\n```\n\nReturns the SMOG index of the given text. This is a grade formula in that\na score of 9.3 means that a ninth grader would be able to read the document.\n\nTexts of fewer than 30 sentences are statistically invalid, because\nthe SMOG formula was normed on 30-sentence samples. textstat requires at\nleast 3 sentences for a result.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/SMOG)\n\n#### Automated Readability Index\n\n```python\ntextstat.automated_readability_index(text)\n```\n\nReturns the ARI (Automated Readability Index) which outputs\na number that approximates the grade level needed to\ncomprehend the text.\n\nFor example if the ARI is 6.5, then the grade level to comprehend\nthe text is 6th to 7th grade.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Automated_readability_index)\n\n#### The Coleman-Liau Index\n\n```python\ntextstat.coleman_liau_index(text)\n```\n\nReturns the grade level of the text using the Coleman-Liau Formula. This is\na grade formula in that a score of 9.3 means that a ninth grader would be\nable to read the document.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Coleman%E2%80%93Liau_index)\n\n#### Linsear Write Formula\n\n```python\ntextstat.linsear_write_formula(text)\n```\n\nReturns the grade level using the Linsear Write Formula. This is\na grade formula in that a score of 9.3 means that a ninth grader would be\nable to read the document.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Linsear_Write)\n\n#### Dale-Chall Readability Score\n\n```python\ntextstat.dale_chall_readability_score(text)\n```\n\nDifferent from other tests, since it uses a lookup table\nof the most commonly used 3000 English words. Thus it returns\nthe grade level using the New Dale-Chall Formula.\n\n| Score       |  Understood by                                |\n|-------------|-----------------------------------------------|\n|4.9 or lower | average 4th-grade student or lower            |\n|  5.0–5.9    | average 5th or 6th-grade student              |\n|  6.0–6.9    | average 7th or 8th-grade student              |\n|  7.0–7.9    | average 9th or 10th-grade student             |\n|  8.0–8.9    | average 11th or 12th-grade student            |\n|  9.0–9.9    | average 13th to 15th-grade (college) student  |\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Dale%E2%80%93Chall_readability_formula)\n\n#### Readability Consensus based upon all the above tests\n\n```python\ntextstat.text_standard(text, float_output=False)\n```\n\nBased upon all the above tests, returns the estimated school\ngrade level required to understand the text.\n\nOptional `float_output` allows the score to be returned as a\n`float`. Defaults to `False`.\n\n#### Spache Readability Formula\n\n```python\ntextstat.spache_readability(text)\n```\n\nReturns grade level of english text.\n\nIntended for text written for children up to grade four.\n\n> Further reading on\n[Wikipedia](https://en.wikipedia.org/wiki/Spache_readability_formula)\n\n#### McAlpine EFLAW Readability Score\n\n```python\ntextstat.mcalpine_eflaw(text)\n```\n\nReturns a score for the readability of an english text for a foreign learner or\nEnglish, focusing on the number of miniwords and length of sentences.\n\nIt is recommended to aim for a score equal to or lower than 25. \n\n> Further reading on\n[This blog post](https://strainindex.wordpress.com/2009/04/30/mcalpine-eflaw-readability-score/)\n\n#### Reading Time\n\n```python\ntextstat.reading_time(text, ms_per_char=14.69)\n```\n\nReturns the reading time of the given text.\n\nAssumes 14.69ms per character.\n\n> Further reading in\n[This academic paper](https://homepages.inf.ed.ac.uk/keller/papers/cognition08a.pdf)\n\n### Language Specific Formulas \n#### Índice de lecturabilidad Fernandez-Huerta (Spanish)  \n\n```python\ntextstat.fernandez_huerta(text)\n```\n\nReformulation of the Flesch Reading Ease Formula specifically for spanish.\nThe results can be interpreted similarly\n\n> Further reading on\n[This blog post](https://legible.es/blog/lecturabilidad-fernandez-huerta/)\n\n#### Índice de perspicuidad de Szigriszt-Pazos (Spanish)  \n\n```python\ntextstat.szigriszt_pazos(text)\n```\nAdaptation of Flesch Reading Ease formula for spanish-based texts.\n\nAttempts to quantify how understandable a text is.\n\n> Further reading on\n[This blog post](https://legible.es/blog/perspicuidad-szigriszt-pazos/)\n\n#### Fórmula de comprensibilidad de Gutiérrez de Polini (Spanish)  \n\n```python\ntextstat.gutierrez_polini(text)\n```\n\nReturns the Guttiérrez de Polini understandability index.\n\nSpecifically designed for the texts in spanish, not an adaptation.\nConceived for grade-school level texts.\n\nScores for more complex text are not reliable.\n\n> Further reading on\n[This blog post](https://legible.es/blog/comprensibilidad-gutierrez-de-polini/)\n\n#### Fórmula de Crawford (Spanish)  \n\n```python\ntextstat.crawford(text)\n```\n\nReturns the Crawford score for the text.\n\nReturns an estimate of the years of schooling required to understand the text.\n\nThe text is only valid for elementary school level texts.\n\n> Further reading on\n[This blog post](https://legible.es/blog/formula-de-crawford/)\n\n#### Osman (Arabic)\n\n```python\ntextstat.osman(text)\n```\n\nReturns OSMAN score for text.\n\nDesigned for Arabic, an adaption of Flesch and Fog Formula.\nIntroduces a new factor called \"Faseeh\".\n\n> Further reading in\n[This academic paper](https://www.aclweb.org/anthology/L16-1038.pdf)\n\n#### Gulpease Index (Italian)\n\n```python\ntextstat.gulpease_index(text)\n```\n\nReturns the Gulpease index of Italian text, which translates to \nlevel of education completed.\n\nLower scores require higher level of education to read with ease.\n\n> Further reading on\n[Wikipedia](https://it.wikipedia.org/wiki/Indice_Gulpease)\n\n#### Wiener Sachtextformel (German)\n\n```python\ntextstat.wiener_sachtextformel(text, variant)\n```\n\nReturns a grade level score for the given text.\n\nA value of 4 means very easy text, whereas 15 means very difficult text.\n\n> Further reading on\n[Wikipedia](https://de.wikipedia.org/wiki/Lesbarkeitsindex#Wiener_Sachtextformel)\n\n### Aggregates and Averages\n\n#### Syllable Count\n\n```python\ntextstat.syllable_count(text)\n```\n\nReturns the number of syllables present in the given text.\n\nUses the Python module [syllapy](https://github.com/mholtzscher/syllapy)\nfor syllable calculation.\n\n#### Lexicon Count\n\n```python\ntextstat.lexicon_count(text, removepunct=True)\n```\n\nCalculates the number of words present in the text.\nOptional `removepunct` specifies whether we need to take\npunctuation symbols into account while counting lexicons.\nDefault value is `True`, which removes the punctuation\nbefore counting lexicon items.\n\n#### Sentence Count\n\n```python\ntextstat.sentence_count(text)\n```\n\nReturns the number of sentences present in the given text.\n\n#### Character Count\n\n```python\ntextstat.char_count(text, ignore_spaces=True)\n```\n\nReturns the number of characters present in the given text.\n\n#### Letter Count\n\n```python\ntextstat.letter_count(text, ignore_spaces=True)\n```\n\nReturns the number of characters present in the given text without punctuation.\n\n#### Polysyllable Count\n\n```python\ntextstat.polysyllabcount(text)\n```\n\nReturns the number of words with a syllable count greater than or equal to 3.\n\n#### Monosyllable Count\n\n```python\ntextstat.monosyllabcount(text)\n```\n\nReturns the number of words with a syllable count equal to one.\n\n## Contributing\n\nIf you find any problems, you should open an\n[issue](https://github.com/shivam5992/textstat/issues).\n\nIf you can fix an issue you've found, or another issue, you should open\na [pull request](https://github.com/shivam5992/textstat/pulls).\n\n1. Fork this repository on GitHub to start making your changes to the master\nbranch (or branch off of it).\n2. Write a test which shows that the bug was fixed or that the feature works as expected.\n3. Send a pull request!\n\n### Development setup\n\n> It is recommended you use a [virtual environment](\nhttps://docs.python.org/3/tutorial/venv.html), or [Pipenv](\nhttps://docs.pipenv.org/) to keep your development work isolated from your\nsystems Python installation.\n\n```bash\n$ git clone https://github.com/<yourname>/textstat.git  # Clone the repo from your fork\n$ cd textstat\n$ pip install -r requirements.txt  # Install all dependencies\n\n$ # Make changes\n\n$ python -m pytest test.py  # Run tests\n```\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":null,"downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"dynamic":null,"home_page":"https://github.com/whylabs/whylabs-textstat","keywords":null,"license":"MIT","license_expression":null,"license_files":null,"maintainer":null,"maintainer_email":null,"name":"whylabs-textstat","package_url":"https://pypi.org/project/whylabs-textstat/","platform":null,"project_url":"https://pypi.org/project/whylabs-textstat/","project_urls":{"Homepage":"https://github.com/whylabs/whylabs-textstat"},"provides_extra":null,"release_url":"https://pypi.org/project/whylabs-textstat/0.7.4/","requires_dist":["setuptools","syllapy"],"requires_python":">=3.6","summary":"Calculate statistical features from text","version":"0.7.4","yanked":false,"yanked_reason":null},"last_serial":24093380,"releases":{"0.7.4":[{"comment_text":"","digests":{"blake2b_256":"5788c2967dbca356f1912a75104e4507f60521c80fd13e3d2e2385e2112fdec4","md5":"122ad51a8adf6c4b327b9333f89d1dbd","sha256":"e548a6de07c50b9177b1dac102f463b2a037695324074bdde500079bce449efc"},"downloads":-1,"filename":"whylabs_textstat-0.7.4-py3-none-any.whl","has_sig":false,"md5_digest":"122ad51a8adf6c4b327b9333f89d1dbd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":105246,"upload_time":"2024-07-11T19:52:33","upload_time_iso_8601":"2024-07-11T19:52:33.439692Z","url":"https://files.pythonhosted.org/packages/57/88/c2967dbca356f1912a75104e4507f60521c80fd13e3d2e2385e2112fdec4/whylabs_textstat-0.7.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d5151058af47608109604d98453accaae60ebe7ad945e4d1bf556f6621043c44","md5":"3647ae9b2bb3165f4c38b8a12a057051","sha256":"27c303c36f54535351b1313263d993eb118d325e745f9ef950d76cc518055cd0"},"downloads":-1,"filename":"whylabs_textstat-0.7.4.tar.gz","has_sig":false,"md5_digest":"3647ae9b2bb3165f4c38b8a12a057051","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":110659,"upload_time":"2024-07-11T19:52:35","upload_time_iso_8601":"2024-07-11T19:52:35.305081Z","url":"https://files.pythonhosted.org/packages/d5/15/1058af47608109604d98453accaae60ebe7ad945e4d1bf556f6621043c44/whylabs_textstat-0.7.4.tar.gz","yanked":false,"yanked_reason":null}]},"urls":[{"comment_text":"","digests":{"blake2b_256":"5788c2967dbca356f1912a75104e4507f60521c80fd13e3d2e2385e2112fdec4","md5":"122ad51a8adf6c4b327b9333f89d1dbd","sha256":"e548a6de07c50b9177b1dac102f463b2a037695324074bdde500079bce449efc"},"downloads":-1,"filename":"whylabs_textstat-0.7.4-py3-none-any.whl","has_sig":false,"md5_digest":"122ad51a8adf6c4b327b9333f89d1dbd","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.6","size":105246,"upload_time":"2024-07-11T19:52:33","upload_time_iso_8601":"2024-07-11T19:52:33.439692Z","url":"https://files.pythonhosted.org/packages/57/88/c2967dbca356f1912a75104e4507f60521c80fd13e3d2e2385e2112fdec4/whylabs_textstat-0.7.4-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"blake2b_256":"d5151058af47608109604d98453accaae60ebe7ad945e4d1bf556f6621043c44","md5":"3647ae9b2bb3165f4c38b8a12a057051","sha256":"27c303c36f54535351b1313263d993eb118d325e745f9ef950d76cc518055cd0"},"downloads":-1,"filename":"whylabs_textstat-0.7.4.tar.gz","has_sig":false,"md5_digest":"3647ae9b2bb3165f4c38b8a12a057051","packagetype":"sdist","python_version":"source","requires_python":">=3.6","size":110659,"upload_time":"2024-07-11T19:52:35","upload_time_iso_8601":"2024-07-11T19:52:35.305081Z","url":"https://files.pythonhosted.org/packages/d5/15/1058af47608109604d98453accaae60ebe7ad945e4d1bf556f6621043c44/whylabs_textstat-0.7.4.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
